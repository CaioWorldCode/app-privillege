{"version":3,"sources":["views/files/downloadLink.js","views/files/index.js","components/html-head/HtmlHead.js","components/breadcrumb-list/BreadcrumbList.js","services/api.js"],"names":["DownloadLink","DashboardsAnalytic","title","useState","limit","setLoading","startDate","endDate","order","orderBy","data","setData","setTotal","privateData","setPrivateData","setPrivateTotal","searchField","page","paginationConfig","setPaginationConfig","loadData","pageLimit","document","body","classList","add","url","moment","format","api","get","response","total","previousPage","prev_page_url","current_page","nextPage","next_page_url","last_page","lastPage","console","log","remove","useEffect","formatBytes","bytes","sizeInMB","toFixed","downloadFile","path","name","axios","method","responseType","then","fileDownload","HtmlHead","description","className","Row","Col","md","BreadcrumbList","items","to","text","xs","Card","Body","CsLineIcons","icon","size","length","map","row","index","original_name","owner","created_at","Button","onClick","file","variant","children","content","basePath","DEFAULT_PATHS","APP","breadcrumb","bIndex","Item","linkAs","Link","linkProps","create","baseURL","API_URL","JSON","parse","localStorage","getItem","auth","interceptors","request","use","config","currentUser","token","headers","Authorization","error","window","location","href","APP_URL"],"mappings":"2RAUeA,I,mCCqWAC,UAjWY,WACvB,IAAMC,EAAQ,WAQd,EAA0BC,mBAAS,KAAI,mBAAhCC,EAAK,KACZ,GADsB,KACQD,oBAAS,IAAK,mBAA5BE,GAAF,KAAY,MAC1B,EAAkCF,qBAAU,mBAArCG,EAAS,KAChB,GAD8B,KACAH,sBAAU,mBAAjCI,EAAO,KACd,GAD0B,KACAJ,oBAAS,IAAM,mBAAlCK,EAAK,KACZ,GADsB,KACQL,mBAAS,SAAO,mBAAvCM,EAAO,KACd,GAD0B,KACFN,mBAAS,KAAG,mBAA7BO,EAAI,KAAEC,EAAO,KACpB,EAA0BR,oBAAS,GAAM,mBAA3BS,GAAF,KAAU,MACtB,EAAsCT,mBAAS,IAAG,mBAA3CU,EAAW,KAAEC,EAAc,KAClC,EAAwCX,oBAAS,GAAM,mBAAlCY,GAAF,KAAiB,MACpC,EAAsCZ,mBAAS,IAAG,mBAA3Ca,EAAW,KAClB,GADkC,KACcb,mBAAS,CACrDc,KAAM,KACR,mBAFKC,GAAgB,KAAEC,GAAmB,KAItCC,GAAQ,uCAAG,WAAOC,EAAWJ,GAAI,6EAc9B,OAbLK,SAASC,KAAKC,UAAUC,IAAI,WAE5BJ,EAAYjB,EAAK,SAGTsB,EAAG,8CAA0CjB,EAAO,kBAAUY,EAAS,iBAASJ,EAAI,mBAAWD,GAE/FV,GAAaC,IACbmB,GAAG,iBAAcC,IAAOrB,GAAWsB,OAAO,cAAa,gBAAQD,IAAOpB,GAASqB,OAAO,gBAGtFpB,IACAkB,GAAG,iBAAcjB,EAAO,qBAAaD,IACxC,SAEsBqB,IAAIC,IAAIJ,GAAI,OAA7BK,EAAQ,OAEdpB,EAAQoB,EAASrB,KAAKA,MACtBE,EAASmB,EAASrB,KAAKsB,OAEvBb,GAAoB,CAChBc,aAAcF,EAASrB,KAAKA,KAAKwB,cACjCjB,KAAMc,EAASrB,KAAKA,KAAKyB,aACzBC,SAAUL,EAASrB,KAAKA,KAAK2B,cAC7BjC,MAAOiB,EACPW,MAAOD,EAASrB,KAAKA,KAAK4B,UAC1BC,SAAUR,EAASrB,KAAKA,KAAK4B,YAC/B,kDAGFE,QAAQC,IAAI,EAAD,IAAO,QAYjB,OAZiB,UAIdf,EAAG,+CAA2CjB,EAAO,kBAAUY,EAAS,iBAASJ,EAAI,mBAAWD,GAEhGV,GAAaC,IACbmB,GAAG,iBAAcC,IAAOrB,GAAWsB,OAAO,cAAa,gBAAQD,IAAOpB,GAASqB,OAAO,gBAGtFpB,IACAkB,GAAG,iBAAcjB,EAAO,qBAAaD,IACxC,UAEsBqB,IAAIC,IAAIJ,GAAI,QAA7BK,EAAQ,OAEdjB,EAAeiB,EAASrB,KAAKA,MAC7BK,EAAgBgB,EAASrB,KAAKsB,OAAM,mDAKpCQ,QAAQC,IAAI,EAAD,IAAO,QAGtBnB,SAASC,KAAKC,UAAUkB,OAAO,WAE/BrC,GAAW,GAAM,kEACpB,gBA3Da,wCA6EdsC,qBAAU,WACDjC,GACDU,GAASF,GAAiBd,MAAOc,GAAiBD,QAEvD,CAACC,GAAiBD,OAErB0B,qBAAU,WACFjC,GACAU,GAAShB,EAAO,KAErB,CAACA,IAEJuC,qBAAU,WACFjC,GACIJ,GAAaC,GACba,GAAShB,EAAO,KAGzB,CAACG,EAASD,IAEbqC,qBAAU,WACFjC,GACAU,GAAShB,EAAO,KAErB,CAACI,EAAOC,IAMX,SAASmC,GAAYC,GAAsB,IACnCC,GAAYD,EAAK,SAAkBE,QAAQ,GAE/C,OAAOD,EAYX,SAASE,GAAaC,EAAMC,GAExBC,IAAM,CACFzB,IAAKuB,EACLG,OAAQ,MACRC,aAAc,SACfC,MAAK,SAACvB,GACLwB,IAAaxB,EAASrB,KAAMwC,MAKpC,OACI,qCACI,cAACM,EAAA,EAAQ,CAACtD,MAAOA,EAAOuD,YA9JZ,aAgKZ,qBAAKC,UAAU,uBAAsB,SACjC,cAACC,EAAA,EAAG,UAEA,eAACC,EAAA,EAAG,CAACC,GAAG,IAAG,UACP,oBAAIH,UAAU,sBAAqB,SAAExD,IACrC,cAAC4D,EAAA,EAAc,CAACC,MAnKhB,CAChB,CAAEC,GAAI,GAAIC,KAAM,QAChB,CAAED,GAAI,QAASC,KAAM,sBAyKjB,cAACN,EAAA,EAAG,UACA,cAACC,EAAA,EAAG,CAACM,GAAI,GAAG,SACR,cAACC,EAAA,EAAI,UACD,eAACA,EAAA,EAAKC,KAAI,WACN,qBAAKV,UAAU,mDAAkD,SAC7D,cAACW,EAAA,EAAW,CAACC,KAAK,YAAYZ,UAAU,YAAYa,KAAM,OAI9D,qBAAKb,UAAU,wDAAuD,SAClE,oBAAIA,UAAU,8BAA6B,SAAC,eAKhD,oBAAGA,UAAU,0DAAyD,UAAC,oFACK,uBAAM,qEAOlG,qBAAKA,UAAU,OAAM,SACjB,cAACC,EAAA,EAAG,UACA,cAACC,EAAA,EAAG,CAACM,GAAI,GAAG,SACR,cAACC,EAAA,EAAI,UACD,eAACA,EAAA,EAAKC,KAAI,WACN,qBAAKV,UAAU,wDAAuD,SAClE,qBAAIA,UAAU,+BAA8B,UACxC,cAACW,EAAA,EAAW,CAACC,KAAK,UAAUZ,UAAU,aAAaa,KAAM,KAAM,6BAIvE,mBAAGb,UAAU,+DAA8D,SAAC,sEAI3D,IAAhBhD,EAAK8D,OACA,6BAGA,qCAEE,eAACb,EAAA,EAAG,CAACD,UAAU,OAAM,UACjB,cAACE,EAAA,EAAG,CAACM,GAAI,EAAE,SAAC,oBAGZ,cAACN,EAAA,EAAG,CAACM,GAAI,EAAE,SAAC,YAGZ,cAACN,EAAA,EAAG,CAACM,GAAI,EAAE,SAAC,gBAGZ,cAACN,EAAA,EAAG,CAACM,GAAI,EAAE,SAAC,YAKfxD,EAAK+D,KAAI,SAACC,EAAKC,GACZ,OACI,8BACI,qBAAKjB,UAAU,OAAM,SAEjB,eAACC,EAAA,EAAG,WACA,cAACC,EAAA,EAAG,CAACM,GAAI,EAAE,SACNQ,EAAIE,gBAET,cAAChB,EAAA,EAAG,CAACM,GAAI,EAAE,SACNtB,GAAY8B,EAAIH,QAErB,cAACX,EAAA,EAAG,CAACM,GAAI,EAAE,SACNQ,EAAIG,MAAM3B,OAEf,cAACU,EAAA,EAAG,CAACM,GAAI,EAAE,SACNQ,EAAII,aAET,cAAClB,EAAA,EAAG,CAACM,GAAI,EAAE,SACP,cAACa,EAAA,EAAM,CAACC,QAAS,kBAAMhC,GAAa0B,EAAIO,KAAMP,EAAIE,gBAAgBM,QAAQ,eAAexB,UAAU,kBAAiB,SAChH,cAACW,EAAA,EAAW,CAACC,KAAK,uBAlB5BK,oBAsC9C,qBAAKjB,UAAU,OAAM,SACjB,cAACC,EAAA,EAAG,UACA,cAACC,EAAA,EAAG,CAACM,GAAI,GAAG,SACR,cAACC,EAAA,EAAI,UACD,eAACA,EAAA,EAAKC,KAAI,WACN,qBAAKV,UAAU,wDAAuD,SAClE,qBAAIA,UAAU,+BAA8B,UACxC,cAACW,EAAA,EAAW,CAACC,KAAK,SAASZ,UAAU,aAAaa,KAAM,KAAM,0BAItE,mBAAGb,UAAU,+DAA8D,SAAC,sEAIpD,IAAvB7C,EAAY2D,OACP,6BAGA,qCAEE,eAACb,EAAA,EAAG,CAACD,UAAU,OAAM,UACjB,cAACE,EAAA,EAAG,CAACM,GAAI,EAAE,SAAC,oBAGZ,cAACN,EAAA,EAAG,CAACM,GAAI,EAAE,SAAC,YAGZ,cAACN,EAAA,EAAG,CAACM,GAAI,EAAE,SAAC,gBAGZ,cAACN,EAAA,EAAG,CAACM,GAAI,EAAE,SAAC,YAKfrD,EAAY4D,KAAI,SAACC,EAAKC,GACnB,OACI,8BACI,qBAAKjB,UAAU,OAAM,SAEjB,eAACC,EAAA,EAAG,WACA,cAACC,EAAA,EAAG,CAACM,GAAI,EAAE,SACNQ,EAAIE,gBAET,cAAChB,EAAA,EAAG,CAACM,GAAI,EAAE,SACNtB,GAAY8B,EAAIH,QAErB,cAACX,EAAA,EAAG,CAACM,GAAI,EAAE,SACNQ,EAAIG,MAAM3B,OAEf,cAACU,EAAA,EAAG,CAACM,GAAI,EAAE,SACNQ,EAAII,aAET,cAAClB,EAAA,EAAG,CAACM,GAAI,EAAE,SACP,cAACa,EAAA,EAAM,CAACC,QAAS,kBAAMhC,GAAa0B,EAAIO,KAAMP,EAAIE,gBAAgBM,QAAQ,eAAexB,UAAU,mDAAkD,SACjJ,cAACW,EAAA,EAAW,CAACC,KAAK,uBAlB5BK,yB,iCCtU1D,2BAYenB,IATE,SAAH,GAA2D,IAAD,IAApDtD,aAAK,MAAG,GAAE,MAAEuD,mBAAW,MAAG,GAAE,MAAE0B,gBAAQ,MAAG,KAAI,EAC/D,OACE,eAAC,IAAM,WACJjF,GAAS,gCAAQA,IACjBuD,GAAe,sBAAMP,KAAK,cAAckC,QAAS3B,IACjD0B,GAAYA,O,iCCRnB,wCAgBerB,IAXQ,SAAH,GAA+E,IAAD,IAAxEC,aAAK,MAAG,CAAC,CAAEC,GAAI,IAAKC,KAAM,SAAS,MAAEoB,gBAAQ,MAAGC,IAAcC,IAAG,EACzF,OACE,cAAC,IAAU,CAAC7B,UAAU,sCAAqC,SACxDK,EAAMU,KAAI,SAACe,EAAYC,GAAM,OAC5B,cAAC,IAAWC,KAAI,CAA8BC,OAAQC,IAAMC,UAAW,CAAE7B,GAAG,GAAD,OAAKqB,GAAQ,OAAGG,EAAWxB,KAAO,SAC1GwB,EAAWtF,OAASsF,EAAWvB,MAAI,qBADFwB,W,sFCLtC5D,EAAMsB,IAAM2C,OAAO,CACrBC,QAASC,MAITtF,EAAOuF,KAAKC,MAAMC,aAAaC,QAAQ,2BAC3C1F,EAAOuF,KAAKC,MAAMxF,EAAK2F,MAGvBxE,EAAIyE,aAAaC,QAAQC,IAAG,uCAAC,WAAMC,GAAM,iEAIpC,OAFG/F,EAAKgG,YAAYC,QACjBF,EAAOG,QAAQC,cAAa,iBAAanG,EAAKgG,YAAYC,QAC7D,kBAEMF,GAAM,2CAChB,mDAP2B,IAS5B5E,EAAIyE,aAAavE,SAASyE,KACtB,SAAAzE,GAAQ,OAAIA,KACZ,SAAA+E,GACsC,qBAA9BA,EAAM/E,SAASrB,KAAKoG,QACpBC,OAAOC,SAASC,KAAK,GAAD,OAAKC,IAAO,cAI7BrF","file":"static/js/22.5551b5d7.chunk.js","sourcesContent":["import React from 'react';\n\nfunction DownloadLink({ url, label }) {\n  return (\n    <a href={url} download={label}>\n      {label}\n    </a>\n  );\n}\n\nexport default DownloadLink;","import React, { useEffect, useState } from 'react';\nimport { Row, Col, Card, Button } from 'react-bootstrap';\nimport HtmlHead from 'components/html-head/HtmlHead';\nimport BreadcrumbList from 'components/breadcrumb-list/BreadcrumbList';\nimport CsLineIcons from 'cs-line-icons/CsLineIcons';\nimport moment from 'moment';\nimport api from 'services/api';\nimport DownloadLink from './downloadLink';\nimport { saveAs } from 'file-saver';\nimport axios from 'axios';\nimport fileDownload from 'js-file-download';\n\n\n\nconst DashboardsAnalytic = () => {\n    const title = 'Arquivos';\n    const description = 'Arquivos';\n\n    const breadcrumbs = [\n        { to: '', text: 'Home' },\n        { to: 'files', text: 'Arquivos' },\n    ]\n\n    const [limit, setLimit] = useState(100)\n    const [loading, setLoading] = useState(true)\n    const [startDate, setStartDate] = useState()\n    const [endDate, setEndDate] = useState()\n    const [order, setOrder] = useState(false)\n    const [orderBy, setOrderBy] = useState('desc')\n    const [data, setData] = useState([])\n    const [total, setTotal] = useState(false)\n    const [privateData, setPrivateData] = useState([])\n    const [privateTotal, setPrivateTotal] = useState(false)\n    const [searchField, setSearchField] = useState('')\n    const [paginationConfig, setPaginationConfig] = useState({\n        page: 1\n    })\n\n    const loadData = async (pageLimit, page) => {\n        document.body.classList.add('spinner')\n\n        pageLimit = limit\n\n        try {\n            let url = `/api/v1/private/upload/public?order=${orderBy}&limit=${pageLimit}&page=${page}&search=${searchField}`\n\n            if (startDate && endDate) {\n                url += `&start=${moment(startDate).format('YYYY-MM-DD')}&end=${moment(endDate).format('YYYY-MM-DD')}`\n            }\n\n            if (order) {\n                url += `&order=${orderBy}&order_by=${order}`\n            }\n\n            const response = await api.get(url)\n\n            setData(response.data.data)\n            setTotal(response.data.total)\n\n            setPaginationConfig({\n                previousPage: response.data.data.prev_page_url,\n                page: response.data.data.current_page,\n                nextPage: response.data.data.next_page_url,\n                limit: pageLimit,\n                total: response.data.data.last_page,\n                lastPage: response.data.data.last_page\n            })\n\n        } catch (error) {\n            console.log(error)\n        }\n\n        try {\n            let url = `/api/v1/private/upload/private?order=${orderBy}&limit=${pageLimit}&page=${page}&search=${searchField}`\n\n            if (startDate && endDate) {\n                url += `&start=${moment(startDate).format('YYYY-MM-DD')}&end=${moment(endDate).format('YYYY-MM-DD')}`\n            }\n\n            if (order) {\n                url += `&order=${orderBy}&order_by=${order}`\n            }\n\n            const response = await api.get(url)\n\n            setPrivateData(response.data.data)\n            setPrivateTotal(response.data.total)\n\n\n\n        } catch (error) {\n            console.log(error)\n        }\n\n        document.body.classList.remove('spinner')\n\n        setLoading(false)\n    }\n\n    const orderTable = (param) => {\n        setOrder(param)\n\n        if (orderBy === 'asc') {\n            setOrderBy('desc')\n        } else {\n            setOrderBy('asc')\n        }\n    }\n\n    const changePaginationConfig = async (param, value) => {\n        await setPaginationConfig({\n            ...paginationConfig, [param]: value\n        })\n    }\n\n    useEffect(() => {\n        if (!data) {\n            loadData(paginationConfig.limit, paginationConfig.page)\n        }\n    }, [paginationConfig.page])\n\n    useEffect(() => {\n        if (data) {\n            loadData(limit, 1)\n        }\n    }, [limit])\n\n    useEffect(() => {\n        if (data) {\n            if (startDate && endDate) {\n                loadData(limit, 1)\n            }\n        }\n    }, [endDate, startDate])\n\n    useEffect(() => {\n        if (data) {\n            loadData(limit, 1)\n        }\n    }, [order, orderBy])\n\n    const handleSearch = (e) => {\n        setSearchField(e.target.value)\n    }\n\n    function formatBytes(bytes, decimals = 2) {\n        var sizeInMB = (bytes / (1024 * 1024)).toFixed(2);\n\n        return sizeInMB\n    }\n\n    function generateFile(url) {\n        const link = document.createElement('a');\n        link.href = url;\n        link.download = url.split('/').pop();\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n    }\n\n    function downloadFile(path, name) {\n\n        axios({\n            url: path,\n            method: 'GET',\n            responseType: 'blob', // importante para converter a resposta em um objeto blob\n        }).then((response) => {\n            fileDownload(response.data, name); // baixa o arquivo\n        });\n\n    }\n\n    return (\n        <>\n            <HtmlHead title={title} description={description} />\n            {/* Title and Top Buttons Start */}\n            <div className=\"page-title-container\">\n                <Row>\n                    {/* Title Start */}\n                    <Col md=\"7\">\n                        <h1 className=\"mb-0 pb-0 display-4\">{title}</h1>\n                        <BreadcrumbList items={breadcrumbs} />\n                    </Col>\n                    {/* Title End */}\n                </Row>\n            </div>\n            {/* Title and Top Buttons End */}\n\n\n            <Row>\n                <Col xs={12}>\n                    <Card>\n                        <Card.Body >\n                            <div className='d-flex justify-content-center align-items-center'>\n                                <CsLineIcons icon=\"file-text\" className=\"text-info\" size={50} />\n                            </div>\n\n\n                            <div className='d-flex justify-content-center align-items-center mt-4'>\n                                <h2 className=\" mb-0 text-info text-center\">\n                                    Arquivos\n                                </h2>\n                            </div>\n\n                            <p className=\"text-medium mb-0 text-muted text-white mt-4 text-center\">\n                                Aqui, você terá acesso a uma variedade de arquivos que podem ser úteis. <br /> Em caso de dúvidas entrem em contato nosso suporte\n                            </p>\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n\n            <div className='mt-2'>\n                <Row>\n                    <Col xs={12}>\n                        <Card>\n                            <Card.Body >\n                                <div className='d-flex justify-content-center align-items-center mt-4'>\n                                    <h2 className=\" mb-0 text-white text-center\">\n                                        <CsLineIcons icon=\"compass\" className=\"text-white\" size={25} /> Arquivos públicos\n                                    </h2>\n                                </div>\n\n                                <p className=\"text-medium mb-0 text-muted text-white mt-4 text-center mb-4\">\n                                    Aqui você encontrará nosso acervo de arquivos para download\n                                </p>\n\n                                {data.length === 0\n                                    ? <>\n\n                                    </>\n                                    : <>\n\n                                        <Row className='mt-2'>\n                                            <Col xs={4}>\n                                                Nome do arquivo\n                                            </Col>\n                                            <Col xs={2}>\n                                                Tamanho\n                                            </Col>\n                                            <Col xs={2}>\n                                                Enviado por\n                                            </Col>\n                                            <Col xs={2}>\n                                                Data\n                                            </Col>\n                                        </Row>\n\n                                        {data.map((row, index) => {\n                                            return (\n                                                <div key={index}>\n                                                    <div className='mt-4'>\n\n                                                        <Row>\n                                                            <Col xs={4}>\n                                                                {row.original_name}\n                                                            </Col>\n                                                            <Col xs={2}>\n                                                                {formatBytes(row.size)}\n                                                            </Col>\n                                                            <Col xs={2}>\n                                                                {row.owner.name}\n                                                            </Col>\n                                                            <Col xs={2}>\n                                                                {row.created_at}\n                                                            </Col>\n                                                            <Col xs={2}>\n                                                                <Button onClick={() => downloadFile(row.file, row.original_name)} variant=\"outline-info\" className=\"btn btn-outline\">\n                                                                    <CsLineIcons icon=\"download\" />\n                                                                </Button>\n\n                                                            </Col>\n                                                        </Row>\n\n                                                    </div>\n\n                                                </div>\n                                            )\n                                        })}\n                                    </>\n                                }\n\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                </Row>\n            </div>\n\n            <div className='mt-2'>\n                <Row>\n                    <Col xs={12}>\n                        <Card>\n                            <Card.Body >\n                                <div className='d-flex justify-content-center align-items-center mt-4'>\n                                    <h2 className=\" mb-0 text-white text-center\">\n                                        <CsLineIcons icon=\"shield\" className=\"text-white\" size={25} /> Arquivos privados\n                                    </h2>\n                                </div>\n\n                                <p className=\"text-medium mb-0 text-muted text-white mt-4 text-center mb-4\">\n                                    Aqui você encontrará nosso acervo de arquivos para download\n                                </p>\n\n                                {privateData.length === 0\n                                    ? <>\n\n                                    </>\n                                    : <>\n\n                                        <Row className='mt-2'>\n                                            <Col xs={4}>\n                                                Nome do arquivo\n                                            </Col>\n                                            <Col xs={2}>\n                                                Tamanho\n                                            </Col>\n                                            <Col xs={2}>\n                                                Enviado por\n                                            </Col>\n                                            <Col xs={2}>\n                                                Data\n                                            </Col>\n                                        </Row>\n\n                                        {privateData.map((row, index) => {\n                                            return (\n                                                <div key={index}>\n                                                    <div className='mt-4'>\n\n                                                        <Row>\n                                                            <Col xs={4}>\n                                                                {row.original_name}\n                                                            </Col>\n                                                            <Col xs={2}>\n                                                                {formatBytes(row.size)}\n                                                            </Col>\n                                                            <Col xs={2}>\n                                                                {row.owner.name}\n                                                            </Col>\n                                                            <Col xs={2}>\n                                                                {row.created_at}\n                                                            </Col>\n                                                            <Col xs={2}>\n                                                                <Button onClick={() => downloadFile(row.file, row.original_name)} variant=\"outline-info\" className=\"btn btn-icon btn-icon-only btn-outline-info mb-1\">\n                                                                    <CsLineIcons icon=\"download\" />\n                                                                </Button>\n\n                                                            </Col>\n                                                        </Row>\n\n                                                    </div>\n\n                                                </div>\n                                            )\n                                        })}\n                                    </>\n                                }\n\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                </Row>\n            </div>\n        </>\n    );\n};\n\nexport default DashboardsAnalytic;\n","import { Helmet } from 'react-helmet';\nimport React from 'react';\n\nconst HtmlHead = ({ title = '', description = '', children = null }) => {\n  return (\n    <Helmet>\n      {title && <title>{title}</title>}\n      {description && <meta name=\"description\" content={description} />}\n      {children && children}\n    </Helmet>\n  );\n};\nexport default HtmlHead;\n","import React from 'react';\nimport { Breadcrumb } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { DEFAULT_PATHS } from 'config.js';\n\nconst BreadcrumbList = ({ items = [{ to: '/', text: 'Home' }], basePath = DEFAULT_PATHS.APP }) => {\n  return (\n    <Breadcrumb className=\"breadcrumb-container d-inline-block\">\n      {items.map((breadcrumb, bIndex) => (\n        <Breadcrumb.Item key={`breadCrumb.${bIndex}`} linkAs={Link} linkProps={{ to: `${basePath}${breadcrumb.to}` }}>\n          {breadcrumb.title || breadcrumb.text}\n        </Breadcrumb.Item>\n      ))}\n    </Breadcrumb>\n  );\n};\nexport default BreadcrumbList;\n","import axios from \"axios\";\nimport { APP_URL } from \"config\";\nimport { API_URL } from \"config\";\n\nconst api = axios.create({\n    baseURL: API_URL\n})\n\n\nlet data = JSON.parse(localStorage.getItem('persist:app-privillege'))\ndata = JSON.parse(data.auth)\n\n\napi.interceptors.request.use(async config => {\n\n    if (data.currentUser.token) {\n        config.headers.Authorization = `Bearer ${data.currentUser.token}`\n    }\n\n    return config\n})\n\napi.interceptors.response.use(\n    response => response,\n    error => {\n        if (error.response.data.error === 'Unauthenticated.') {\n            window.location.href= `${APP_URL}/login`\n        }\n    })\n\nexport default api"],"sourceRoot":""}