{"version":3,"sources":["../../src/OverlayScrollbarsComponent.tsx","../node_modules/react-bootstrap/esm/helpers.js","../node_modules/overlayscrollbars/js/OverlayScrollbars.js","../node_modules/react-fuzzy-highlighter/lib/index.js","../node_modules/react-fuzzy-highlighter/lib/FuzzyHighlighter.js","../node_modules/fuse.js/dist/fuse.esm.js","../node_modules/react-fuzzy-highlighter/lib/formatResults.js","../node_modules/react-fuzzy-highlighter/node_modules/set-value/index.js","../node_modules/is-plain-object/index.js","../node_modules/isobject/index.js","../node_modules/strind/lib/strind.js","../node_modules/react-fuzzy-highlighter/lib/Highlighter.js","../node_modules/react-bootstrap/esm/Container.js","../node_modules/react-intl/lib/src/components/useIntl.js","../node_modules/react-bootstrap/esm/Tooltip.js","../node_modules/@restart/hooks/esm/useTimeout.js","../node_modules/@restart/ui/esm/useRootClose.js","../node_modules/@restart/ui/esm/Overlay.js","../node_modules/react-bootstrap/esm/PopoverHeader.js","../node_modules/react-bootstrap/esm/PopoverBody.js","../node_modules/react-bootstrap/esm/Popover.js","../node_modules/react-bootstrap/esm/Overlay.js","../node_modules/react-bootstrap/esm/useOverlayOffset.js","../node_modules/react-bootstrap/esm/OverlayTrigger.js","../node_modules/react-bootstrap/esm/Image.js","../node_modules/react-bootstrap/esm/FigureImage.js","../node_modules/react-bootstrap/esm/FigureCaption.js","../node_modules/react-bootstrap/esm/Figure.js","../node_modules/react-bootstrap/esm/createChainedFunction.js","../node_modules/react-bootstrap/esm/Collapse.js"],"names":["OverlayScrollbarsComponent","props","_osInstance","_osTargetRef","createRef","this","current","osTarget","options","extensions","mergeHostClassNames","className","valid","destroy","prevProps","divProps","ref","children","osInstance","host","getElements","regex","RegExp","replace","osClassNames","split","filter","name","match","join","React","getOverlayDirection","placement","isRTL","bsDirection","global","window","define","document","undefined","PLUGINNAME","TYPES","o","f","a","s","b","n","u","z","LEXICON","c","i","l","p","ti","oH","cH","sH","oW","cW","sW","hOP","bCR","VENDORS","jsCache","cssCache","cssPrefixes","jsPrefixes","firstLetterToUpper","str","charAt","toUpperCase","slice","_cssPrefixes","_jsPrefixes","_cssProperty","result","resultPossibilities","v","currVendorWithoutDashes","uppercasedName","elmStyle","createElement","length","_cssPropertyValue","property","values","suffix","prop","dummyStyle","possbleValues","preparedSuffix","cssText","_jsAPI","isInterface","fallback","toLowerCase","COMPATIBILITY","windowSize","x","innerWidth","documentElement","body","innerHeight","bind","func","thisObj","proto","aArgs","Array","call","arguments","fNOP","fBound","apply","concat","wW","wH","mO","rO","rAF","setTimeout","cAF","id","clearTimeout","now","Date","getTime","stpP","event","stopPropagation","cancelBubble","prvD","preventDefault","cancelable","returnValue","page","strPage","strClient","strX","strY","eventDoc","originalEvent","target","srcElement","ownerDocument","doc","touches","touch","y","scrollLeft","clientLeft","scrollTop","clientTop","mBtn","button","which","inA","item","arr","e","isA","def","isArray","type","obj","Object","toString","MATH","Math","JQUERY","jQuery","EASING","_easingsMath","PI","cos","sin","w","pow","t","sqrt","asin","abs","swing","d","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","FRAMEWORK","_rnothtmlwhite","_strSpace","_strEmpty","_strScrollLeft","_strScrollTop","_animations","_type","_cssNumber","animationIterationCount","columnCount","fillOpacity","flexGrow","flexShrink","fontWeight","lineHeight","opacity","order","orphans","widows","zIndex","zoom","extend","src","copyIsArray","copy","clone","deep","FakejQuery","isPlainObject","inArray","fromIndex","isFunction","isEmptyObject","key","hasOwnProperty","hasOwnConstructor","hasIsPrototypeOf","constructor","each","callback","isArrayLike","stripAndCollapse","value","matches","elem","selector","nodeList","parentNode","querySelectorAll","insertAdjacentElement","el","strategy","child","insertAdjacentHTML","nodeType","setCSSVal","val","parseCSSVal","startNextAnimationInQ","animObj","removeFromQ","index","nextAnim","q","splice","animate","duration","easing","complete","setAnimationValue","guaranteedNext","progress","step","specialEasing","hasOptions","from","to","start","push","css","timeNow","end","percent","fromVal","toVal","easedVal","timeStart","frame","elapsed","qPos","qObj","stop","max","parseFloat","pos","speacialEasing","startTime","clearQ","jumpToEnd","elementIsVisible","getClientRects","elms","base","elements","innerHTML","self","on","eventName","handler","eventNameLength","addEventListener","detachEvent","attachEvent","off","removeEventListener","one","oneEventName","oneHandler","trigger","createEvent","initEvent","dispatchEvent","fireEvent","append","prepend","before","after","remove","removeChild","unwrap","parent","parents","firstChild","insertBefore","wrapAll","wrapperHTML","nodes","wrapper","deepest","previousSibling","childNodes","appendChild","nextSibling","wrapInner","contents","wrap","styles","cptStyle","getCptStyle","getComputedStyle","currentStyle","getPropertyValue","hasClass","classList","classNamePrepared","contains","indexOf","addClass","classes","cur","curValue","clazz","finalValue","supportClassList","elmClassList","add","removeClass","hide","display","show","attr","attrName","getAttribute","setAttribute","removeAttr","removeAttribute","offset","rect","pageXOffset","pageYOffset","top","left","position","offsetTop","offsetLeft","first","eq","last","find","ch","is","childs","jump","INSTANCES","_targets","_instancePropertyString","instance","argLen","PLUGIN","_plugin","_pluginsGlobals","_pluginsAutoUpdateLoop","_pluginsExtensions","_pluginsOptions","possibleTemplateTypes","restrictedStringsSplit","restrictedStringsPossibilitiesSplit","classNameAllowedValues","numberAllowedValues","booleanNullAllowedValues","booleanTrueTemplate","booleanFalseTemplate","callbackTemplate","overflowBehaviorAllowedValues","optionsDefaultsAndTemplate","resize","sizeAutoCapable","clipAlways","normalizeRTL","paddingAbsolute","autoUpdate","autoUpdateInterval","updateOnLoad","nativeScrollbarsOverlaid","showNativeScrollbars","initialize","overflowBehavior","scrollbars","visibility","autoHide","autoHideDelay","dragScrolling","clickScrolling","touchSupport","snapHandle","textarea","dynWidth","dynHeight","inheritedAttrs","callbacks","onInitialized","onInitializationWithdrawn","onDestroyed","onScrollStart","onScroll","onScrollStop","onOverflowChanged","onOverflowAmountChanged","onDirectionChanged","onContentSizeChanged","onHostSizeChanged","onUpdated","convert","template","recursive","valType","_defaults","_template","_validate","writeErrors","diffObj","validatedOptions","validatedOptionsPrepared","objectCopy","isEmptyObj","checkObjectProps","data","diffData","prevPropName","restrictedStringValuesSplit","restrictedStringValuesPossibilitiesSplit","isRestrictedValue","mainPossibility","currType","j","isValid","isDiff","templateValue","templateValueType","templateIsComplex","templateTypes","dataDiffValue","dataValue","dataValueType","propPrefix","error","errorPossibleTypes","errorRestrictedStrings","console","warn","JSON","stringify","_default","_prepared","initOverlayScrollbarsStatics","OverlayScrollbarsGlobals","OverlayScrollbarsAutoUpdateLoop","defaultOptions","_base","strOverflow","strHidden","strScroll","bodyElement","scrollbarDummyElement","scrollbarDummyElement0","dummyContainerChild","nativeScrollbarSize","calcNativeScrollbarSize","nativeScrollbarIsOverlaid","msie","ua","navigator","userAgent","strIndexOf","strSubString","trident","edge","rv","parseIntFunc","parseInt","measureElement","autoUpdateLoop","autoUpdateRecommended","nativeScrollbarStyling","ex","overlayScrollbarDummySize","cssCalc","restrictedMeasuring","scrollSize","h","scrollSize2","rtlScrollBehavior","dummyContainerOffset","dummyContainerChildOffset","dummyContainerChildOffsetAfterScroll","supportTransform","supportTransition","supportPassiveEvents","supportsPassive","defineProperty","get","supportResizeObserver","supportMutationObserver","windowWidth","windowHeight","windowDpr","getWindowDPR","onResize","newW","newH","deltaW","deltaH","newScrollbarSize","deltaWRatio","round","deltaHRatio","absDeltaW","absDeltaH","absDeltaWRatio","absDeltaHRatio","newDPR","deltaIsBigger","difference","differenceIsBiggerThanOne","isZoom","oldScrollbarSize","update","valOne","valTwo","absValOne","absValTwo","dDPI","screen","deviceXDPI","sDPI","logicalXDPI","devicePixelRatio","globals","_loopID","_inArray","_getNow","_strAutoUpdate","_strAutoUpdateInterval","_strLength","_loopingInstances","_loopingInstancesIntervalCache","_loopIsActive","_loopIntervalDefault","_loopInterval","_loopTimeOld","loop","lowestInterval","instanceOptions","instanceAutoUpdateAllowed","instanceAutoUpdateInterval","timeNew","timeDelta","min","OverlayScrollbarsInstance","pluginTargetElement","_frameworkProto","isHTMLElement","inst","_nativeScrollbarIsOverlaid","_overlayScrollbarDummySize","_rtlScrollBehavior","_autoUpdateRecommended","_msieVersion","_nativeScrollbarStyling","_cssCalc","_nativeScrollbarSize","_supportTransition","_supportTransform","_supportPassiveEvents","_supportResizeObserver","_supportMutationObserver","_initialized","_destroyed","_isTextarea","_isBody","_documentMixed","_domExists","_isBorderBox","_sizeAutoObserverAdded","_paddingX","_paddingY","_borderX","_borderY","_marginX","_marginY","_isRTL","_sleeping","_defaultOptions","_currentOptions","_currentPreparedOptions","_lastUpdateTime","_swallowedUpdateTimeout","_windowElement","_documentElement","_htmlElement","_bodyElement","_targetElement","_hostElement","_sizeAutoObserverElement","_sizeObserverElement","_paddingElement","_viewportElement","_contentElement","_contentArrangeElement","_contentGlueElement","_textareaCoverElement","_scrollbarCornerElement","_scrollbarHorizontalElement","_scrollbarHorizontalTrackElement","_scrollbarHorizontalHandleElement","_scrollbarVerticalElement","_scrollbarVerticalTrackElement","_scrollbarVerticalHandleElement","_windowElementNative","_documentElementNative","_targetElementNative","_hostElementNative","_sizeAutoObserverElementNative","_sizeObserverElementNative","_paddingElementNative","_viewportElementNative","_contentElementNative","_hostSizeCache","_contentScrollSizeCache","_arrangeContentSizeCache","_hasOverflowCache","_hideOverflowCache","_widthAutoCache","_heightAutoCache","_cssBoxSizingCache","_cssPaddingCache","_cssBorderCache","_cssMarginCache","_cssDirectionCache","_cssDirectionDetectedCache","_paddingAbsoluteCache","_clipAlwaysCache","_contentGlueSizeCache","_overflowBehaviorCache","_overflowAmountCache","_ignoreOverlayScrollbarHidingCache","_autoUpdateCache","_sizeAutoCapableCache","_contentElementScrollSizeChangeDetectedCache","_hostElementSizeChangeDetectedCache","_scrollbarsVisibilityCache","_scrollbarsAutoHideCache","_scrollbarsClickScrollingCache","_scrollbarsDragScrollingCache","_resizeCache","_normalizeRTLCache","_classNameCache","_oldClassName","_textareaAutoWrappingCache","_textareaInfoCache","_textareaSizeCache","_textareaDynHeightCache","_textareaDynWidthCache","_bodyMinSizeCache","_mutationObserverHost","_mutationObserverContent","_mutationObserverHostCallback","_mutationObserverContentCallback","_mutationObserversConnected","_textareaHasFocus","_scrollbarsAutoHideTimeoutId","_scrollbarsAutoHideMoveTimeoutId","_scrollbarsAutoHideDelay","_scrollbarsAutoHideNever","_scrollbarsAutoHideScroll","_scrollbarsAutoHideMove","_scrollbarsAutoHideLeave","_scrollbarsHandleHovered","_scrollbarsHandlesDefineScrollPos","_resizeNone","_resizeBoth","_resizeHorizontal","_resizeVertical","_contentBorderSize","_scrollHorizontalInfo","_scrollVerticalInfo","_viewportSize","_nativeScrollbarMinSize","_strMinusHidden","_strMarginMinus","_strPaddingMinus","_strBorderMinus","_strTop","_strRight","_strBottom","_strLeft","_strMinMinus","_strMaxMinus","_strWidth","_strHeight","_strFloat","_strAuto","_strSync","_strScroll","_strHundredPercent","_strX","_strY","_strDot","_strScrollbar","_strMinusHorizontal","_strMinusVertical","_strMouseTouchDownEvent","_strMouseTouchUpEvent","_strMouseTouchMoveEvent","_strMouseEnter","_strMouseLeave","_strKeyDownEvent","_strKeyUpEvent","_strSelectStartEvent","_strTransitionEndEvent","_strResizeObserverProperty","_cassNamesPrefix","_classNameHTMLElement","_classNameHostElement","_classNameHostElementForeign","_classNameHostTextareaElement","_classNameHostScrollbarHorizontalHidden","_classNameHostScrollbarVerticalHidden","_classNameHostTransition","_classNameHostRTL","_classNameHostResizeDisabled","_classNameHostScrolling","_classNameHostOverflow","_classNameHostOverflowX","_classNameHostOverflowY","_classNameTextareaElement","_classNameTextareaCoverElement","_classNamePaddingElement","_classNameViewportElement","_classNameViewportNativeScrollbarsInvisible","_classNameViewportNativeScrollbarsOverlaid","_classNameContentElement","_classNameContentArrangeElement","_classNameContentGlueElement","_classNameSizeAutoObserverElement","_classNameResizeObserverElement","_classNameResizeObserverItemElement","_classNameResizeObserverItemFinalElement","_classNameTextInherit","_classNameScrollbar","_classNameScrollbarTrack","_classNameScrollbarTrackOff","_classNameScrollbarHandle","_classNameScrollbarHandleOff","_classNameScrollbarUnusable","_classNameScrollbarAutoHidden","_classNameScrollbarCorner","_classNameScrollbarCornerResize","_classNameScrollbarCornerResizeB","_classNameScrollbarCornerResizeH","_classNameScrollbarCornerResizeV","_classNameScrollbarHorizontal","_classNameScrollbarVertical","_classNameDragging","_classNameThemeNone","_classNamesDynamicDestroy","_callbacksInitQeueue","_viewportAttrsFromTarget","_extensions","_extensionsPrivateMethods","_swallowedUpdateHints","_swallowUpdateLag","_updateOnLoadEventName","_updateOnLoadElms","_updateAutoCache","_mutationObserverAttrsTextarea","_mutationObserverAttrsHost","_destroyEvents","sleep","force","attrsChanged","contentSizeC","doUpdateAuto","mutHost","mutContent","meaningfulAttrsChanged","updateAutoContentSizeChanged","_contentSizeChanged","_changedOptions","takeRecords","_hostSizeChanged","_force","updateElementsOnLoad","newOptions","changedOps","option","getObjectPropVal","setObjectPropVal","setOptions","extName","disconnectMutationObservers","setupResizeObserver","removeExt","pop","setupHostMouseTouchEvents","setupScrollbarsDOM","setupScrollbarCornerDOM","setupStructureDOM","updateOnLoadCallback","dispatchCallback","scroll","coordinates","infoX","infoY","normalizeInvert","normalizeNegate","scrollX","_currentScroll","scrollXRatio","_currentScrollRatio","maxScrollX","_maxScroll","ratio","handleOffset","_handleOffset","handleLength","_handleLength","handleLengthRatio","_handleLengthRatio","trackLength","_trackLength","snappedHandleOffset","_snappedHandleOffset","isRTLNormalized","doScrollLeft","doScrollTop","animationOptions","settingsAxis","settingsScroll","settingsBlock","settingsMargin","finalElement","coordinatesXAxisProps","coordinatesYAxisProps","coordinatesOperators","durationIsObject","completeCallback","finalScroll","strEnd","strBegin","strCenter","strNearest","strAlways","strNever","strIfNeeded","strLength","elementObjSettingsAxisValues","elementObjSettingsBlockValues","elementObjSettingsScrollValues","coordinatesIsElementObj","possibleElement","possibleElementIsJQuery","possibleElementIsHTMLElement","updateScrollbarInfos","refreshScrollbarHandleOffset","proxyCompleteCallback","checkSettingsStringValue","currValue","allowedValues","getRawScroll","isX","coordinateProps","getFinalScroll","rawScroll","operator","amount","possibleOperator","isString","scrollInfo","currScroll","maxScroll","mult","isRTLisX","normalizeShortcuts","strReplace","evalFunc","eval","substr","parseToZeroOrNumber","isNaN","toFixed","normalizeIsRTLisX","operatorCurrScroll","invert","negate","getPerAxisValue","valueInternalType","defaultValue","valueArrLength","valueArrItem","resultDefault","valueType","generateMargin","marginTopRightBottomLeftArray","currValueType","valueDirections","marginLength","margin","axis","block","marginDefault","marginType","viewportScroll","viewportOffset","elementOffset","doNotScroll","elementScrollCoordinates","measuringElm","rawElementSize","width","height","elementSize","finalizeBlock","vars","getScrollbarVars","wh","_w_h","lt","_left_top","xy","_x_y","blockIsEnd","blockIsCenter","blockIsNearest","scrollNever","scrollIfNeeded","vpSize","vpOffset","elSize","elOffset","divide","elementCenterOffset","viewportCenterOffset","isInView","scrollStop","param1","param2","param3","elementName","padding","viewport","content","scrollbarHorizontal","scrollbar","track","handle","scrollbarVertical","scrollbarCorner","getState","stateProperty","prepare","extended","extendDeep","changePropertyName","destroyed","sleeping","widthAuto","heightAuto","overflowAmount","hideOverflow","hasOverflow","contentScrollSize","viewportSize","hostSize","documentMixed","ext","privateMethods","addExt","extensionOptions","instanceAdded","instanceContract","contractResult","registeredExtensionObj","extension","contractFulfilled","extensionFactory","contract","added","instanceRemoved","removed","construct","setupResponsiveEventListener","element","eventNames","listener","passiveOrOptions","collected","method","onOff","events","passiveOrOptionsIsObj","passive","_passive","capture","_capture","nativeParam","addDestroyEventListener","targetElement","onElementResizedCallback","resizeObserver","strAnimationStartEvent","strChildNodes","constScroll","generateDiv","observe","dir","style","isDirty","rAFId","currWidth","currHeight","observerElement","shrinkElement","expandElement","expandElementChild","widthCache","heightCache","factor","reset","onResized","expandChildCSS","observerElementCSS","setTopRightBottomLeft","isIE","findFirst","onload","wnd","contentDocument","defaultView","directionChanged","scrollLeftValue","resizeObserverObj","disconnect","createMutationObservers","mutationTarget","mutationAttrName","mutationIsClass","oldMutationVal","newClassVal","hostClassNameRegex","contentTimeout","sizeAuto","action","mutationObserverContentLag","mutationObserver","contentLastUpdate","mutations","doUpdate","isUnknownMutation","textareaUpdate","mutation","doUpdateForce","mutatedAttrs","attributeName","oldValue","createHostClassNameRegExp","hostClassNamesChanged","updateViewportAttrsFromTarget","connectMutationObservers","attributes","attributeOldValue","attributeFilter","subtree","childList","characterData","hostOnResized","changed","checkCache","hostOnMouseEnter","refreshScrollbarsAutoHide","hostOnMouseLeave","hostOnMouseMove","documentOnSelectStart","elm","eachUpdateOnLoad","updateOnLoadSelector","bodyMinSizeChanged","bodyMinSize","oldClassNames","newClassNames","currClasses","diff","getArrayDifferences","idx","mutationType","strClosest","float","bodyMinSizeC","contentElementScrollSize","contentMeasureElement","getContentMeasureElement","textareaValueLength","setCSS","curr","cache","changedAttrs","checks","_elem","_attrs","check","isSizeAffectingCSSProperty","propertyName","flexBasis","affectingPropsX","affectingPropsXContentBox","affectingPropsY","affectingPropsYContentBox","_strS","_strVS","checkX","sizeIsAffected","checkPropertyName","attrs","targetAttr","origWidth","origHeight","wrapAttrOff","minWidth","minHeight","doMeasure","_originalWidth","_originalHeight","_dynamicWidth","_dynamicHeight","updateHints","displayIsHidden","hostSizeChanged","contentSizeChanged","changedOptions","swallow","checkCacheAutoForce","currentPreparedOptionsScrollbars","currentPreparedOptionsTextarea","scrollbarsVisibility","scrollbarsVisibilityChanged","scrollbarsAutoHide","scrollbarsAutoHideChanged","scrollbarsClickScrolling","scrollbarsClickScrollingChanged","scrollbarsDragScrolling","scrollbarsDragScrollingChanged","classNameChanged","resizeChanged","paddingAbsoluteChanged","clipAlwaysChanged","sizeAutoCapableChanged","ignoreOverlayScrollbarHiding","ignoreOverlayScrollbarHidingChanged","autoUpdateChanged","overflowBehaviorChanged","textareaDynWidth","textareaDynWidthChanged","textareaDynHeight","textareaDynHeightChanged","oldSize","newSize","sizeAutoObserverElementBCRect","textareaAutoWrapping","textareaAutoWrappingChanged","cssDirection","cssDirectionChanged","boxSizing","boxSizingChanged","getTopRightBottomLeftHost","isRTLLeft","isRTLRight","widthAutoResizeDetection","widthAutoObserverDetection","right","tmpCurrHostWidth","tmpCurrContentGlueWidth","tmpNewHostWidth","widthAutoChanged","wasWidthAuto","bottom","heightAutoChanged","wasHeightAuto","border","contentElementCSS","contentGlueElementCSS","getHostSize","getViewportSize","paddingAbsoluteX","r","paddingAbsoluteY","paddingElementCSS","textareaCSS","paddingValues","textareaSize","textareaSizeChanged","textareaDynOrigSize","strOverflowX","strOverflowY","strVisible","viewportElementResetCSS","resetXTmp","ys","resetBottomTmp","xs","contentSize","hostAbsoluteRectSize","contentGlueSize","textareaCoverCSS","setContentGlueElementCSSfunction","horizontal","scrollbarVars","strWH","_width_height","autoSize","borderSize","paddingSize","marginSize","hideOverflowForceTextarea","previousOverflowAmount","overflowBehaviorIsVS","overflowBehaviorIsVH","overflowBehaviorIsS","canScroll","viewportRect","setOverflowVariables","xyI","widthHeight","scrollMax","_Left_Top","fractionalOverflowAmount","checkFractionalOverflowAmount","setContentElementCSS","borderDesign","contentArrangeElementCSS","arrangeContent","arrangeChanged","scrollbarVarsInverted","strDirection","invertedAutoSize","addRemoveClass","setViewportCSS","viewportElementCSS","XY","_X_Y","elementStyle","webkitTransform","floatTmp","posLeftWithoutFloat","textareaInfo","getTextareaInfo","textareaRowsChanged","_rows","cursorRow","_cursorRow","cursorCol","_cursorColumn","widestRow","_widestRow","lastRow","lastCol","_columns","cursorIsLastPosition","_cursorPosition","_cursorMax","textareaScrollAmount","scrollbarsVisibilityVisible","scrollbarsVisibilityHidden","scrollbarsVisibilityAuto","refreshScrollbarsVisibility","showX","showY","refreshScrollbarAppearance","refreshScrollbarHandleLength","refreshScrollbarsInteractive","xScrollable","yScrollable","clipped","forced","validatedOpts","strParent","classNameResizeObserverHost","classNameTextareaElementFull","textareaClass","adoptAttrs","adoptAttrsMap","applyAdoptedAttrs","applyAdoptedAttrsElm","hostElementClassNames","hostElementCSS","selectOrGenerateDivByClass","setupStructureEvents","textareaUpdateIntervalID","scrollStopTimeoutId","textareaKeyDownRestrictedKeyCodes","textareaKeyDownKeyCodesList","scrollStopDelay","strFocus","updateTextarea","doClearInterval","clearInterval","textareaOnScroll","textareaOnDrop","textareaOnFocus","textareaOnFocusout","textareaOnKeyDown","keyCode","setInterval","textareaOnKeyUp","contentOnTransitionEnd","viewportOnScroll","nativeOverlayScrollbarsAreActive","horizontalElements","verticalElements","selectOrGenerateScrollbarDOM","isHorizontal","_scrollbar","_track","_handle","resetScrollbarDOM","setupScrollbarEvents","trackTimeout","mouseDownScroll","mouseDownOffset","mouseDownInvertedScale","scrollbarVarsInfo","_info","insideIFrame","strActive","strSnapHandle","strClickEvent","scrollDurationFactor","increaseDecreaseScrollAmountKeyCodes","getPointerPosition","getPreparedScrollbarsOption","increaseTrackScrollAmount","decreaseTrackScrollAmount","stopClickEventPropagation","documentKeyDown","documentKeyUp","onMouseTouchDownContinue","isTouchEvent","documentDragMove","scrollDelta","isFinite","documentMouseTouchUp","clientX","clientY","onHandleMouseTouchDown","onHandleMouseTouchDownAction","getHostElementInvertedScale","onTrackMouseTouchDown","decreaseScroll","handleToViewportRatio","scrollDistance","scrollBaseDuration","scrollFirstIterationDelay","trackOffset","ctrlKey","instantScroll","shiftKey","instantScrollTransition","isFirstIteration","scrollActionFinsished","transition","scrollActionInstantFinished","scrollAction","mouseOffset","scrollRange","scrollDuration","timeoutDelay","instantScrollPosition","rtlIsNormal","decreaseScrollCondition","scrollObj","animationObj","onTrackMouseTouchEnter","onTrackMouseTouchLeave","onScrollbarMouseTouchDown","shallBeVisible","scrollbarElement","delayfree","anyActive","handleCSS","digit","handleRatio","floor","_Width_Height","scrollOrTransition","transformOffset","translateValue","transitionDuration","isRTLisHorizontal","strTranslateBrace","strTransform","strTransition","nativeScroll","currentScroll","handleTrackDiff","getScrollRatio","getHandleOffset","scrollRatio","getCSSTransitionString","isTrack","element2","_l_t","setupScrollbarCornerEvents","reconnectMutationObserver","mouseDownPosition","mouseDownSize","pageOffset","getCoordinates","eventIsTrusted","releaseCapture","screenX","screenY","setCapture","args","dependent","extensionOnName","targetCSSObject","prefix","zeroX","zeroY","transitionStr","assembledValue","strResult","valueArray","regExpString","regExpMain","regExpValidate","properties","splitCssStyleByComma","$1","withCurrClassNameOption","withOldClassNameOption","appendix","appendClasses","condition","strOwnerDocument","strHTMLElement","parentWindow","nodeName","a1","a2","k","toFloat","num","textareaCursorPosition","selectionStart","rowCols","textareaValue","textareaLength","textareaRowSplit","textareaLastRow","textareaCurrentCursorRowSplit","textareaLastCol","classesOrAttrs","selectParentOrOnlyChildren","onlyChildren","selectParent","path","splits","splitsLength","extendObj","extendObjRoot","doAdd","initBodyScroll","bodyMouseTouchDownListener","activeElement","focus","pluginTargetElements","optsIsPlainObj","newDefaultOptions","currDefaultOptions","extensionName","extNameTypeString","fn","overlayScrollbars","_elements","factory","__importDefault","mod","__esModule","exports","FuzzyHighlighter_1","require","Highlighter_1","enumerable","Highlighter","default","__extends","extendStatics","setPrototypeOf","__proto__","__","prototype","create","__assign","assign","__createBinding","m","k2","__setModuleDefault","__importStar","fuse_js_1","formatResults_1","FuzzyHighlighter","_super","_this","state","results","info","timing","componentDidMount","_a","fuse","shouldSort","includeMatches","search","componentDidUpdate","query","setCollection","setState","render","formattedResults","formatResults","performance","Component","getTag","isNumber","isBoolean","isObject","isObjectLike","isDefined","isBlank","trim","LOGICAL_SEARCH_INVALID_QUERY_FOR_KEY","PATTERN_LENGTH_TOO_LARGE","hasOwn","KeyStore","keys","_keys","_keyMap","totalWeight","forEach","createKey","weight","keyId","createKeyPath","createKeyId","Error","MISSING_KEY_PROPERTY","INVALID_KEY_WEIGHT_VALUE","AdvancedOptions","useExtendedSearch","getFn","list","deepGet","baseToString","len","ignoreLocation","ignoreFieldNorm","Config","isCaseSensitive","includeScore","sortFn","score","findAllMatches","minMatchCharLength","location","threshold","distance","SPACE","norm","mantissa","Map","numTokens","has","set","clear","FuseIndex","isCreated","setIndexRecords","docs","records","_keysMap","docIndex","_addString","_addObject","size","record","$","keyIndex","subRecords","stack","nestedArrIndex","subRecord","createIndex","myIndex","setKeys","map","setSources","computeScore","pattern","errors","currentLocation","expectedLocation","accuracy","proximity","convertMaskToIndices","matchmask","indices","MAX_BITS","createPatternAlphabet","mask","char","BitapSearch","chunks","addChunk","startIndex","alphabet","remainder","text","isMatch","allIndices","totalScore","hasMatches","patternAlphabet","patternLen","textLen","currentThreshold","bestLocation","computeMatches","matchMask","lastBitArr","finalScore","binMax","binMin","binMid","finish","bitArr","charMatch","BaseMatch","getMatch","multiRegex","singleRegex","exp","ExactMatch","InverseExactMatch","PrefixExactMatch","startsWith","InversePrefixExactMatch","SuffixExactMatch","endsWith","InverseSuffixExactMatch","FuzzyMatch","_bitapSearch","searchIn","IncludeMatch","searchers","searchersLen","SPACE_RE","parseQuery","queryItem","found","searcher","token","isMultiMatch","isSingleMatch","MultiMatchSet","Set","ExtendedSearch","numMatches","qLen","pLen","_","registeredSearchers","createSearcher","searcherClass","LogicalOperator","KeyType","isExpression","isPath","isLeaf","convertToExplicit","parse","auto","next","isQueryPath","node","computeScore$1","Number","EPSILON","transformMatches","refIndex","transformScore","format","transformers","transformer","Fuse","_keyStore","_docs","_myIndex","predicate","removeAt","limit","_searchStringList","_searchObjectList","_searchLogical","sort","expression","evaluate","_findMatches","getValueForItemAtKeyId","res","resultMap","expResults","version","parseIndex","config","register","__spreadArrays","il","jl","set_value_1","strind_1","finalResults","formatted","output","chars","isHighlighted","formattedResult","matched","isPlain","opts","merge","String","memo","separator","isValidKey","orig","module","isObjectObject","ctor","prot","strsLen","partition","nonmatched","updateNonmatched","open","close","cb","ceiling","unmatched","Fragment","Container","bsPrefix","fluid","as","useBootstrapPrefix","_jsx","classNames","displayName","defaultProps","useIntl","intl","Context","invariantIntlContext","Tooltip","arrowProps","popper","useIsRTL","primaryPlacement","_jsxs","role","MAX_DELAY_MS","setChainedTimeout","handleRef","timeoutAtMs","delayMs","useTimeout","isMounted","useMounted","useRef","useWillUnmount","useMemo","noop","useRootClose","onRootClose","disabled","clickTrigger","onClose","useClickOutside","handleKeyUp","useEventCallback","useEffect","getRefTarget","currentEvent","removeKeyupListener","listen","Overlay","outerRef","flip","containerPadding","popperConfig","Transition","useCallbackRef","rootElement","attachRef","arrowElement","attachArrowRef","mergedRef","useMergedRefs","container","useWaitForDOMRef","useState","exited","setExited","usePopper","mergeOptionsWithPopperConfig","enableEvents","mountOverlay","onHide","rootClose","rootCloseDisabled","rootCloseEvent","arrow","onExit","onExiting","onEnter","onEntering","onEntered","in","appear","onExited","ReactDOM","createPortal","createWithBsPrefix","Popover","decoratedBsPrefix","PopoverBody","Header","PopoverHeader","Body","POPPER_OFFSET","Fade","overlay","outerProps","popperRef","firstRenderedState","setFirstRenderedState","customOffset","overlayRef","popoverClass","useOverlayOffset","modifiers","actualTransition","handleFirstUpdate","onFirstUpdate","useIsomorphicEffect","scheduleUpdate","BaseOverlay","overlayProps","_popperObj$state","_popperObj$state$modi","popperObj","aRef","__wrapped","safeFindDOMNode","wrapRefs","updatedPlacement","outOfBoundaries","modifiersData","isReferenceHidden","handleMouseOverOut","relatedNative","currentTarget","related","relatedTarget","nativeEvent","OverlayTrigger","propsShow","defaultShow","onToggle","propsDelay","delay","triggerNodeRef","timeout","hoverStateRef","useUncontrolledProp","setShow","normalizeDelay","only","onFocus","onBlur","onClick","handleShow","useCallback","handleHide","handleFocus","handleBlur","handleClick","handleMouseOver","handleMouseOut","triggers","triggerProps","onMouseOver","onMouseOut","_Fragment","cloneElement","propTypes","PropTypes","string","bool","rounded","roundedCircle","thumbnail","Image","FigureImage","imagePropTypes","FigureCaption","Figure","Caption","createChainedFunction","funcs","reduce","acc","MARGINS","getDefaultDimensionValue","dimension","margins","collapseStyles","EXITED","EXITING","ENTERING","ENTERED","mountOnEnter","unmountOnExit","getDimensionValue","Collapse","forwardRef","computedDimension","handleEnter","handleEntering","handleEntered","handleExit","triggerBrowserReflow","handleExiting","TransitionWrapper","addEndListener","transitionEndListener","childRef","innerProps"],"mappings":"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GM,IAAlCmU,EAAkBD,IAAqBG,IACvCA,GAAgB,EAChBT,EAAQxD,eAAiBiE,EACrBR,IAAY7iB,IACZ2D,EAAcyB,KAAdzB,CAAoBkf,GACpBA,GAAW,MAiB/B,SAASoB,EAA0BC,EAAqBjmB,EAASC,EAAY0kB,EAASxD,GAElF,IAAItX,EAAOnE,EAAcmE,KACrBkF,EAAU9B,EAAU8B,QACpBS,EAAOvC,EAAUuC,KAGjBoQ,EAAQ,IAAInG,EACZyM,EAAkBjZ,EAAUvK,EAAQI,GAGxC,GAAKqjB,GAAcF,GAAnB,CAIA,GAAI9M,EAAU8M,GAAsB,CAChC,IAAIG,EAAOjN,EAAU8M,GAErB,OADAG,EAAKpmB,QAAQA,GACNomB,EAIX,IAAIC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAIAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAGAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAgHAC,EACAC,GACAC,GAOAC,GAEAC,GAMAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GAGAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GAIAC,GACAC,GACAC,GACAC,GACAC,GAQAC,GAGAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GAGAC,GACAC,GACAC,GACAC,GArOAC,GAAqB,GACrBC,GAAwB,GACxBC,GAAsB,GACtBC,GAAgB,GAChBC,GAA0B,GAG1BC,GAAkB,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","file":"static/js/12.718785cb.chunk.js","sourcesContent":["import React, { Component, RefObject } from 'react';\nimport OverlayScrollbars from \"overlayscrollbars\";\n\nexport interface OverlayScrollbarsComponentProps extends React.HTMLAttributes<HTMLDivElement> {\n    children?: any;\n    options?: OverlayScrollbars.Options;\n    extensions?: OverlayScrollbars.Extensions;\n}\nexport interface OverlayScrollbarsComponentState { }\n\nexport class OverlayScrollbarsComponent extends Component<OverlayScrollbarsComponentProps, OverlayScrollbarsComponentState> {\n    private _osInstance: OverlayScrollbars | null = null;\n    private _osTargetRef: RefObject<HTMLDivElement>;\n\n    constructor(props: OverlayScrollbarsComponentProps) {\n        super(props);\n        this._osTargetRef = React.createRef();\n    }\n\n    osInstance(): OverlayScrollbars | null {\n        return this._osInstance;\n    }\n\n    osTarget(): HTMLDivElement | null {\n        return this._osTargetRef.current || null;\n    }\n\n    componentDidMount() {\n        this._osInstance = OverlayScrollbars(this.osTarget(), this.props.options || {}, this.props.extensions);\n        mergeHostClassNames(this._osInstance, this.props.className);\n    }\n\n    componentWillUnmount() {\n        if (OverlayScrollbars.valid(this._osInstance)) {\n            this._osInstance.destroy();\n            this._osInstance = null;\n        }\n    }\n\n    componentDidUpdate(prevProps: OverlayScrollbarsComponentProps) {\n        if (OverlayScrollbars.valid(this._osInstance)) {\n            this._osInstance.options(this.props.options);\n\n            if (prevProps.className !== this.props.className) {\n                mergeHostClassNames(this._osInstance, this.props.className);\n            }\n        }\n    }\n\n    render() {\n        const {\n            options,\n            extensions,\n            children,\n            className,\n            ...divProps\n        } = this.props;\n\n        return (\n            <div className=\"os-host\" {...divProps} ref={this._osTargetRef}>\n                <div className=\"os-resize-observer-host\"></div>\n                <div className=\"os-padding\">\n                    <div className=\"os-viewport\">\n                        <div className=\"os-content\">\n                            {this.props.children}\n                        </div>\n                    </div>\n                </div>\n                <div className=\"os-scrollbar os-scrollbar-horizontal \">\n                    <div className=\"os-scrollbar-track\">\n                        <div className=\"os-scrollbar-handle\"></div>\n                    </div>\n                </div>\n                <div className=\"os-scrollbar os-scrollbar-vertical\">\n                    <div className=\"os-scrollbar-track\">\n                        <div className=\"os-scrollbar-handle\"></div>\n                    </div>\n                </div>\n                <div className=\"os-scrollbar-corner\"></div>\n            </div>\n        );\n    }\n}\n\nfunction mergeHostClassNames(osInstance: OverlayScrollbars, className: string) {\n    if (OverlayScrollbars.valid(osInstance)) {\n        const { host } = osInstance.getElements();\n        const regex = new RegExp(`(^os-host([-_].+|)$)|${osInstance.options().className.replace(/\\s/g, \"$|\")}$`, 'g');\n        const osClassNames = host.className.split(' ')\n            .filter(name => name.match(regex))\n            .join(' ');\n\n        host.className = `${osClassNames} ${className || ''}`;\n    }\n}","import * as React from 'react';\nexport class BsPrefixComponent extends React.Component {} // Need to use this instead of typeof Component to get proper type checking.\n\nexport function getOverlayDirection(placement, isRTL) {\n  let bsDirection = placement;\n\n  if (placement === 'left') {\n    bsDirection = isRTL ? 'end' : 'start';\n  } else if (placement === 'right') {\n    bsDirection = isRTL ? 'start' : 'end';\n  }\n\n  return bsDirection;\n}","/*!\r\n * OverlayScrollbars\r\n * https://github.com/KingSora/OverlayScrollbars\r\n *\r\n * Version: 1.13.0\r\n *\r\n * Copyright KingSora | Rene Haas.\r\n * https://github.com/KingSora\r\n *\r\n * Released under the MIT license.\r\n * Date: 02.08.2020\r\n */\r\n\r\n(function (global, factory) {\r\n    if (typeof define === 'function' && define.amd)\r\n        define(function () { return factory(global, global.document, undefined); });\r\n    else if (typeof module === 'object' && typeof module.exports === 'object')\r\n        module.exports = factory(global, global.document, undefined);\r\n    else\r\n        factory(global, global.document, undefined);\r\n}(typeof window !== 'undefined' ? window : this,\r\n    function (window, document, undefined) {\r\n        'use strict';\r\n        var PLUGINNAME = 'OverlayScrollbars';\r\n        var TYPES = {\r\n            o: 'object',\r\n            f: 'function',\r\n            a: 'array',\r\n            s: 'string',\r\n            b: 'boolean',\r\n            n: 'number',\r\n            u: 'undefined',\r\n            z: 'null'\r\n            //d : 'date',\r\n            //e : 'error',\r\n            //r : 'regexp',\r\n            //y : 'symbol'\r\n        };\r\n        var LEXICON = {\r\n            c: 'class',\r\n            s: 'style',\r\n            i: 'id',\r\n            l: 'length',\r\n            p: 'prototype',\r\n            ti: 'tabindex',\r\n            oH: 'offsetHeight',\r\n            cH: 'clientHeight',\r\n            sH: 'scrollHeight',\r\n            oW: 'offsetWidth',\r\n            cW: 'clientWidth',\r\n            sW: 'scrollWidth',\r\n            hOP: 'hasOwnProperty',\r\n            bCR: 'getBoundingClientRect'\r\n        };\r\n        var VENDORS = (function () {\r\n            //https://developer.mozilla.org/en-US/docs/Glossary/Vendor_Prefix\r\n            var jsCache = {};\r\n            var cssCache = {};\r\n            var cssPrefixes = ['-webkit-', '-moz-', '-o-', '-ms-'];\r\n            var jsPrefixes = ['WebKit', 'Moz', 'O', 'MS'];\r\n            function firstLetterToUpper(str) {\r\n                return str.charAt(0).toUpperCase() + str.slice(1);\r\n            }\r\n\r\n            return {\r\n                _cssPrefixes: cssPrefixes,\r\n                _jsPrefixes: jsPrefixes,\r\n                _cssProperty: function (name) {\r\n                    var result = cssCache[name];\r\n\r\n                    if (cssCache[LEXICON.hOP](name))\r\n                        return result;\r\n\r\n                    var uppercasedName = firstLetterToUpper(name);\r\n                    var elmStyle = document.createElement('div')[LEXICON.s];\r\n                    var resultPossibilities;\r\n                    var i = 0;\r\n                    var v;\r\n                    var currVendorWithoutDashes;\r\n\r\n                    for (; i < cssPrefixes.length; i++) {\r\n                        currVendorWithoutDashes = cssPrefixes[i].replace(/-/g, '');\r\n                        resultPossibilities = [\r\n                            name, //transition\r\n                            cssPrefixes[i] + name, //-webkit-transition\r\n                            currVendorWithoutDashes + uppercasedName, //webkitTransition\r\n                            firstLetterToUpper(currVendorWithoutDashes) + uppercasedName //WebkitTransition\r\n                        ];\r\n                        for (v = 0; v < resultPossibilities[LEXICON.l]; v++) {\r\n                            if (elmStyle[resultPossibilities[v]] !== undefined) {\r\n                                result = resultPossibilities[v];\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    cssCache[name] = result;\r\n                    return result;\r\n                },\r\n                _cssPropertyValue: function (property, values, suffix) {\r\n                    var name = property + ' ' + values;\r\n                    var result = cssCache[name];\r\n\r\n                    if (cssCache[LEXICON.hOP](name))\r\n                        return result;\r\n\r\n                    var dummyStyle = document.createElement('div')[LEXICON.s];\r\n                    var possbleValues = values.split(' ');\r\n                    var preparedSuffix = suffix || '';\r\n                    var i = 0;\r\n                    var v = -1;\r\n                    var prop;\r\n\r\n                    for (; i < possbleValues[LEXICON.l]; i++) {\r\n                        for (; v < VENDORS._cssPrefixes[LEXICON.l]; v++) {\r\n                            prop = v < 0 ? possbleValues[i] : VENDORS._cssPrefixes[v] + possbleValues[i];\r\n                            dummyStyle.cssText = property + ':' + prop + preparedSuffix;\r\n                            if (dummyStyle[LEXICON.l]) {\r\n                                result = prop;\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    cssCache[name] = result;\r\n                    return result;\r\n                },\r\n                _jsAPI: function (name, isInterface, fallback) {\r\n                    var i = 0;\r\n                    var result = jsCache[name];\r\n\r\n                    if (!jsCache[LEXICON.hOP](name)) {\r\n                        result = window[name];\r\n                        for (; i < jsPrefixes[LEXICON.l]; i++)\r\n                            result = result || window[(isInterface ? jsPrefixes[i] : jsPrefixes[i].toLowerCase()) + firstLetterToUpper(name)];\r\n                        jsCache[name] = result;\r\n                    }\r\n                    return result || fallback;\r\n                }\r\n            }\r\n        })();\r\n        var COMPATIBILITY = (function () {\r\n            function windowSize(x) {\r\n                return x ? window.innerWidth || document.documentElement[LEXICON.cW] || document.body[LEXICON.cW] : window.innerHeight || document.documentElement[LEXICON.cH] || document.body[LEXICON.cH];\r\n            }\r\n            function bind(func, thisObj) {\r\n                if (typeof func != TYPES.f) {\r\n                    throw \"Can't bind function!\";\r\n                    // closest thing possible to the ECMAScript 5\r\n                    // internal IsCallable function\r\n                    //throw new TypeError('Function.prototype.bind - what is trying to be bound is not callable');\r\n                }\r\n                var proto = LEXICON.p;\r\n                var aArgs = Array[proto].slice.call(arguments, 2);\r\n                var fNOP = function () { };\r\n                var fBound = function () { return func.apply(this instanceof fNOP ? this : thisObj, aArgs.concat(Array[proto].slice.call(arguments))); };\r\n\r\n                if (func[proto])\r\n                    fNOP[proto] = func[proto]; // Function.prototype doesn't have a prototype property\r\n                fBound[proto] = new fNOP();\r\n\r\n                return fBound;\r\n            }\r\n\r\n            return {\r\n                /**\r\n                 * Gets the current window width.\r\n                 * @returns {Number|number} The current window width in pixel.\r\n                 */\r\n                wW: bind(windowSize, 0, true),\r\n\r\n                /**\r\n                 * Gets the current window height.\r\n                 * @returns {Number|number} The current window height in pixel.\r\n                 */\r\n                wH: bind(windowSize, 0),\r\n\r\n                /**\r\n                 * Gets the MutationObserver Object or undefined if not supported.\r\n                 * @returns {MutationObserver|*|undefined} The MutationsObserver Object or undefined.\r\n                 */\r\n                mO: bind(VENDORS._jsAPI, 0, 'MutationObserver', true),\r\n\r\n                /**\r\n                 * Gets the ResizeObserver Object or undefined if not supported.\r\n                 * @returns {MutationObserver|*|undefined} The ResizeObserver Object or undefined.\r\n                 */\r\n                rO: bind(VENDORS._jsAPI, 0, 'ResizeObserver', true),\r\n\r\n                /**\r\n                 * Gets the RequestAnimationFrame method or it's corresponding polyfill.\r\n                 * @returns {*|Function} The RequestAnimationFrame method or it's corresponding polyfill.\r\n                 */\r\n                rAF: bind(VENDORS._jsAPI, 0, 'requestAnimationFrame', false, function (func) { return window.setTimeout(func, 1000 / 60); }),\r\n\r\n                /**\r\n                 * Gets the CancelAnimationFrame method or it's corresponding polyfill.\r\n                 * @returns {*|Function} The CancelAnimationFrame method or it's corresponding polyfill.\r\n                 */\r\n                cAF: bind(VENDORS._jsAPI, 0, 'cancelAnimationFrame', false, function (id) { return window.clearTimeout(id); }),\r\n\r\n                /**\r\n                 * Gets the current time.\r\n                 * @returns {number} The current time.\r\n                 */\r\n                now: function () {\r\n                    return Date.now && Date.now() || new Date().getTime();\r\n                },\r\n\r\n                /**\r\n                 * Stops the propagation of the given event.\r\n                 * @param event The event of which the propagation shall be stoped.\r\n                 */\r\n                stpP: function (event) {\r\n                    if (event.stopPropagation)\r\n                        event.stopPropagation();\r\n                    else\r\n                        event.cancelBubble = true;\r\n                },\r\n\r\n                /**\r\n                 * Prevents the default action of the given event.\r\n                 * @param event The event of which the default action shall be prevented.\r\n                 */\r\n                prvD: function (event) {\r\n                    if (event.preventDefault && event.cancelable)\r\n                        event.preventDefault();\r\n                    else\r\n                        event.returnValue = false;\r\n                },\r\n\r\n                /**\r\n                 * Gets the pageX and pageY values of the given mouse event.\r\n                 * @param event The mouse event of which the pageX and pageX shall be got.\r\n                 * @returns {{x: number, y: number}} x = pageX value, y = pageY value.\r\n                 */\r\n                page: function (event) {\r\n                    event = event.originalEvent || event;\r\n\r\n                    var strPage = 'page';\r\n                    var strClient = 'client';\r\n                    var strX = 'X';\r\n                    var strY = 'Y';\r\n                    var target = event.target || event.srcElement || document;\r\n                    var eventDoc = target.ownerDocument || document;\r\n                    var doc = eventDoc.documentElement;\r\n                    var body = eventDoc.body;\r\n\r\n                    //if touch event return return pageX/Y of it\r\n                    if (event.touches !== undefined) {\r\n                        var touch = event.touches[0];\r\n                        return {\r\n                            x: touch[strPage + strX],\r\n                            y: touch[strPage + strY]\r\n                        }\r\n                    }\r\n\r\n                    // Calculate pageX/Y if not native supported\r\n                    if (!event[strPage + strX] && event[strClient + strX] && event[strClient + strX] != null) {\r\n\r\n                        return {\r\n                            x: event[strClient + strX] +\r\n                                (doc && doc.scrollLeft || body && body.scrollLeft || 0) -\r\n                                (doc && doc.clientLeft || body && body.clientLeft || 0),\r\n                            y: event[strClient + strY] +\r\n                                (doc && doc.scrollTop || body && body.scrollTop || 0) -\r\n                                (doc && doc.clientTop || body && body.clientTop || 0)\r\n                        }\r\n                    }\r\n                    return {\r\n                        x: event[strPage + strX],\r\n                        y: event[strPage + strY]\r\n                    };\r\n                },\r\n\r\n                /**\r\n                 * Gets the clicked mouse button of the given mouse event.\r\n                 * @param event The mouse event of which the clicked button shal be got.\r\n                 * @returns {number} The number of the clicked mouse button. (0 : none | 1 : leftButton | 2 : middleButton | 3 : rightButton)\r\n                 */\r\n                mBtn: function (event) {\r\n                    var button = event.button;\r\n                    if (!event.which && button !== undefined)\r\n                        return (button & 1 ? 1 : (button & 2 ? 3 : (button & 4 ? 2 : 0)));\r\n                    else\r\n                        return event.which;\r\n                },\r\n\r\n                /**\r\n                 * Checks whether a item is in the given array and returns its index.\r\n                 * @param item The item of which the position in the array shall be determined.\r\n                 * @param arr The array.\r\n                 * @returns {number} The zero based index of the item or -1 if the item isn't in the array.\r\n                 */\r\n                inA: function (item, arr) {\r\n                    for (var i = 0; i < arr[LEXICON.l]; i++)\r\n                        //Sometiems in IE a \"SCRIPT70\" Permission denied error occurs if HTML elements in a iFrame are compared\r\n                        try {\r\n                            if (arr[i] === item)\r\n                                return i;\r\n                        }\r\n                        catch (e) { }\r\n                    return -1;\r\n                },\r\n\r\n                /**\r\n                 * Returns true if the given value is a array.\r\n                 * @param arr The potential array.\r\n                 * @returns {boolean} True if the given value is a array, false otherwise.\r\n                 */\r\n                isA: function (arr) {\r\n                    var def = Array.isArray;\r\n                    return def ? def(arr) : this.type(arr) == TYPES.a;\r\n                },\r\n\r\n                /**\r\n                 * Determine the internal JavaScript [[Class]] of the given object.\r\n                 * @param obj The object of which the type shall be determined.\r\n                 * @returns {string} The type of the given object.\r\n                 */\r\n                type: function (obj) {\r\n                    if (obj === undefined)\r\n                        return obj + '';\r\n                    if (obj === null)\r\n                        return obj + '';\r\n                    return Object[LEXICON.p].toString.call(obj).replace(/^\\[object (.+)\\]$/, '$1').toLowerCase();\r\n                },\r\n\r\n\r\n                bind: bind\r\n\r\n                /**\r\n                 * Gets the vendor-prefixed CSS property by the given name.\r\n                 * For example the given name is \"transform\" and you're using a old Firefox browser then the returned value would be \"-moz-transform\".\r\n                 * If the browser doesn't need a vendor-prefix, then the returned string is the given name.\r\n                 * If the browser doesn't support the given property name at all (not even with a vendor-prefix) the returned value is null.\r\n                 * @param propName The unprefixed CSS property name.\r\n                 * @returns {string|null} The vendor-prefixed CSS property or null if the browser doesn't support the given CSS property.\r\n\r\n                cssProp: function(propName) {\r\n                    return VENDORS._cssProperty(propName);\r\n                }\r\n                */\r\n            }\r\n        })();\r\n\r\n\r\n        var MATH = Math;\r\n        var JQUERY = window.jQuery;\r\n        var EASING = (function () {\r\n            var _easingsMath = {\r\n                p: MATH.PI,\r\n                c: MATH.cos,\r\n                s: MATH.sin,\r\n                w: MATH.pow,\r\n                t: MATH.sqrt,\r\n                n: MATH.asin,\r\n                a: MATH.abs,\r\n                o: 1.70158\r\n            };\r\n\r\n            /*\r\n             x : current percent (0 - 1),\r\n             t : current time (duration * percent),\r\n             b : start value (from),\r\n             c : end value (to),\r\n             d : duration\r\n\r\n             easingName : function(x, t, b, c, d) { return easedValue; }\r\n             */\r\n\r\n            return {\r\n                swing: function (x, t, b, c, d) {\r\n                    return 0.5 - _easingsMath.c(x * _easingsMath.p) / 2;\r\n                },\r\n                linear: function (x, t, b, c, d) {\r\n                    return x;\r\n                },\r\n                easeInQuad: function (x, t, b, c, d) {\r\n                    return c * (t /= d) * t + b;\r\n                },\r\n                easeOutQuad: function (x, t, b, c, d) {\r\n                    return -c * (t /= d) * (t - 2) + b;\r\n                },\r\n                easeInOutQuad: function (x, t, b, c, d) {\r\n                    return ((t /= d / 2) < 1) ? c / 2 * t * t + b : -c / 2 * ((--t) * (t - 2) - 1) + b;\r\n                },\r\n                easeInCubic: function (x, t, b, c, d) {\r\n                    return c * (t /= d) * t * t + b;\r\n                },\r\n                easeOutCubic: function (x, t, b, c, d) {\r\n                    return c * ((t = t / d - 1) * t * t + 1) + b;\r\n                },\r\n                easeInOutCubic: function (x, t, b, c, d) {\r\n                    return ((t /= d / 2) < 1) ? c / 2 * t * t * t + b : c / 2 * ((t -= 2) * t * t + 2) + b;\r\n                },\r\n                easeInQuart: function (x, t, b, c, d) {\r\n                    return c * (t /= d) * t * t * t + b;\r\n                },\r\n                easeOutQuart: function (x, t, b, c, d) {\r\n                    return -c * ((t = t / d - 1) * t * t * t - 1) + b;\r\n                },\r\n                easeInOutQuart: function (x, t, b, c, d) {\r\n                    return ((t /= d / 2) < 1) ? c / 2 * t * t * t * t + b : -c / 2 * ((t -= 2) * t * t * t - 2) + b;\r\n                },\r\n                easeInQuint: function (x, t, b, c, d) {\r\n                    return c * (t /= d) * t * t * t * t + b;\r\n                },\r\n                easeOutQuint: function (x, t, b, c, d) {\r\n                    return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\r\n                },\r\n                easeInOutQuint: function (x, t, b, c, d) {\r\n                    return ((t /= d / 2) < 1) ? c / 2 * t * t * t * t * t + b : c / 2 * ((t -= 2) * t * t * t * t + 2) + b;\r\n                },\r\n                easeInSine: function (x, t, b, c, d) {\r\n                    return -c * _easingsMath.c(t / d * (_easingsMath.p / 2)) + c + b;\r\n                },\r\n                easeOutSine: function (x, t, b, c, d) {\r\n                    return c * _easingsMath.s(t / d * (_easingsMath.p / 2)) + b;\r\n                },\r\n                easeInOutSine: function (x, t, b, c, d) {\r\n                    return -c / 2 * (_easingsMath.c(_easingsMath.p * t / d) - 1) + b;\r\n                },\r\n                easeInExpo: function (x, t, b, c, d) {\r\n                    return (t == 0) ? b : c * _easingsMath.w(2, 10 * (t / d - 1)) + b;\r\n                },\r\n                easeOutExpo: function (x, t, b, c, d) {\r\n                    return (t == d) ? b + c : c * (-_easingsMath.w(2, -10 * t / d) + 1) + b;\r\n                },\r\n                easeInOutExpo: function (x, t, b, c, d) {\r\n                    if (t == 0) return b;\r\n                    if (t == d) return b + c;\r\n                    if ((t /= d / 2) < 1) return c / 2 * _easingsMath.w(2, 10 * (t - 1)) + b;\r\n                    return c / 2 * (-_easingsMath.w(2, -10 * --t) + 2) + b;\r\n                },\r\n                easeInCirc: function (x, t, b, c, d) {\r\n                    return -c * (_easingsMath.t(1 - (t /= d) * t) - 1) + b;\r\n                },\r\n                easeOutCirc: function (x, t, b, c, d) {\r\n                    return c * _easingsMath.t(1 - (t = t / d - 1) * t) + b;\r\n                },\r\n                easeInOutCirc: function (x, t, b, c, d) {\r\n                    return ((t /= d / 2) < 1) ? -c / 2 * (_easingsMath.t(1 - t * t) - 1) + b : c / 2 * (_easingsMath.t(1 - (t -= 2) * t) + 1) + b;\r\n                },\r\n                easeInElastic: function (x, t, b, c, d) {\r\n                    var s = _easingsMath.o; var p = 0; var a = c;\r\n                    if (t == 0) return b; if ((t /= d) == 1) return b + c; if (!p) p = d * .3;\r\n                    if (a < _easingsMath.a(c)) { a = c; s = p / 4; }\r\n                    else s = p / (2 * _easingsMath.p) * _easingsMath.n(c / a);\r\n                    return -(a * _easingsMath.w(2, 10 * (t -= 1)) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p)) + b;\r\n                },\r\n                easeOutElastic: function (x, t, b, c, d) {\r\n                    var s = _easingsMath.o; var p = 0; var a = c;\r\n                    if (t == 0) return b;\r\n                    if ((t /= d) == 1) return b + c;\r\n                    if (!p) p = d * .3;\r\n                    if (a < _easingsMath.a(c)) { a = c; s = p / 4; }\r\n                    else s = p / (2 * _easingsMath.p) * _easingsMath.n(c / a);\r\n                    return a * _easingsMath.w(2, -10 * t) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p) + c + b;\r\n                },\r\n                easeInOutElastic: function (x, t, b, c, d) {\r\n                    var s = _easingsMath.o; var p = 0; var a = c;\r\n                    if (t == 0) return b;\r\n                    if ((t /= d / 2) == 2) return b + c;\r\n                    if (!p) p = d * (.3 * 1.5);\r\n                    if (a < _easingsMath.a(c)) { a = c; s = p / 4; }\r\n                    else s = p / (2 * _easingsMath.p) * _easingsMath.n(c / a);\r\n                    if (t < 1) return -.5 * (a * _easingsMath.w(2, 10 * (t -= 1)) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p)) + b;\r\n                    return a * _easingsMath.w(2, -10 * (t -= 1)) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p) * .5 + c + b;\r\n                },\r\n                easeInBack: function (x, t, b, c, d, s) {\r\n                    s = s || _easingsMath.o;\r\n                    return c * (t /= d) * t * ((s + 1) * t - s) + b;\r\n                },\r\n                easeOutBack: function (x, t, b, c, d, s) {\r\n                    s = s || _easingsMath.o;\r\n                    return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\r\n                },\r\n                easeInOutBack: function (x, t, b, c, d, s) {\r\n                    s = s || _easingsMath.o;\r\n                    return ((t /= d / 2) < 1) ? c / 2 * (t * t * (((s *= (1.525)) + 1) * t - s)) + b : c / 2 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2) + b;\r\n                },\r\n                easeInBounce: function (x, t, b, c, d) {\r\n                    return c - this.easeOutBounce(x, d - t, 0, c, d) + b;\r\n                },\r\n                easeOutBounce: function (x, t, b, c, d) {\r\n                    var o = 7.5625;\r\n                    if ((t /= d) < (1 / 2.75)) {\r\n                        return c * (o * t * t) + b;\r\n                    } else if (t < (2 / 2.75)) {\r\n                        return c * (o * (t -= (1.5 / 2.75)) * t + .75) + b;\r\n                    } else if (t < (2.5 / 2.75)) {\r\n                        return c * (o * (t -= (2.25 / 2.75)) * t + .9375) + b;\r\n                    } else {\r\n                        return c * (o * (t -= (2.625 / 2.75)) * t + .984375) + b;\r\n                    }\r\n                },\r\n                easeInOutBounce: function (x, t, b, c, d) {\r\n                    return (t < d / 2) ? this.easeInBounce(x, t * 2, 0, c, d) * .5 + b : this.easeOutBounce(x, t * 2 - d, 0, c, d) * .5 + c * .5 + b;\r\n                }\r\n            };\r\n            /*\r\n             *\r\n             * TERMS OF USE - EASING EQUATIONS\r\n             * \r\n             * Open source under the BSD License. \r\n             * \r\n             * Copyright Â© 2001 Robert Penner\r\n             * All rights reserved.\r\n             * \r\n             * Redistribution and use in source and binary forms, with or without modification, \r\n             * are permitted provided that the following conditions are met:\r\n             * \r\n             * Redistributions of source code must retain the above copyright notice, this list of \r\n             * conditions and the following disclaimer.\r\n             * Redistributions in binary form must reproduce the above copyright notice, this list \r\n             * of conditions and the following disclaimer in the documentation and/or other materials \r\n             * provided with the distribution.\r\n             * \r\n             * Neither the name of the author nor the names of contributors may be used to endorse \r\n             * or promote products derived from this software without specific prior written permission.\r\n             * \r\n             * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY \r\n             * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\r\n             * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE\r\n             *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\r\n             *  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE\r\n             *  GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED \r\n             * AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\r\n             *  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED \r\n             * OF THE POSSIBILITY OF SUCH DAMAGE. \r\n             *\r\n             */\r\n        })();\r\n        var FRAMEWORK = (function () {\r\n            var _rnothtmlwhite = (/[^\\x20\\t\\r\\n\\f]+/g);\r\n            var _strSpace = ' ';\r\n            var _strEmpty = '';\r\n            var _strScrollLeft = 'scrollLeft';\r\n            var _strScrollTop = 'scrollTop';\r\n            var _animations = [];\r\n            var _type = COMPATIBILITY.type;\r\n            var _cssNumber = {\r\n                animationIterationCount: true,\r\n                columnCount: true,\r\n                fillOpacity: true,\r\n                flexGrow: true,\r\n                flexShrink: true,\r\n                fontWeight: true,\r\n                lineHeight: true,\r\n                opacity: true,\r\n                order: true,\r\n                orphans: true,\r\n                widows: true,\r\n                zIndex: true,\r\n                zoom: true\r\n            };\r\n\r\n            function extend() {\r\n                var src, copyIsArray, copy, name, options, clone, target = arguments[0] || {},\r\n                    i = 1,\r\n                    length = arguments[LEXICON.l],\r\n                    deep = false;\r\n\r\n                // Handle a deep copy situation\r\n                if (_type(target) == TYPES.b) {\r\n                    deep = target;\r\n                    target = arguments[1] || {};\r\n                    // skip the boolean and the target\r\n                    i = 2;\r\n                }\r\n\r\n                // Handle case when target is a string or something (possible in deep copy)\r\n                if (_type(target) != TYPES.o && !_type(target) == TYPES.f) {\r\n                    target = {};\r\n                }\r\n\r\n                // extend jQuery itself if only one argument is passed\r\n                if (length === i) {\r\n                    target = FakejQuery;\r\n                    --i;\r\n                }\r\n\r\n                for (; i < length; i++) {\r\n                    // Only deal with non-null/undefined values\r\n                    if ((options = arguments[i]) != null) {\r\n                        // Extend the base object\r\n                        for (name in options) {\r\n                            src = target[name];\r\n                            copy = options[name];\r\n\r\n                            // Prevent never-ending loop\r\n                            if (target === copy) {\r\n                                continue;\r\n                            }\r\n\r\n                            // Recurse if we're merging plain objects or arrays\r\n                            if (deep && copy && (isPlainObject(copy) || (copyIsArray = COMPATIBILITY.isA(copy)))) {\r\n                                if (copyIsArray) {\r\n                                    copyIsArray = false;\r\n                                    clone = src && COMPATIBILITY.isA(src) ? src : [];\r\n\r\n                                } else {\r\n                                    clone = src && isPlainObject(src) ? src : {};\r\n                                }\r\n\r\n                                // Never move original objects, clone them\r\n                                target[name] = extend(deep, clone, copy);\r\n\r\n                                // Don't bring in undefined values\r\n                            } else if (copy !== undefined) {\r\n                                target[name] = copy;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Return the modified object\r\n                return target;\r\n            };\r\n\r\n            function inArray(item, arr, fromIndex) {\r\n                for (var i = fromIndex || 0; i < arr[LEXICON.l]; i++)\r\n                    if (arr[i] === item)\r\n                        return i;\r\n                return -1;\r\n            }\r\n\r\n            function isFunction(obj) {\r\n                return _type(obj) == TYPES.f;\r\n            };\r\n\r\n            function isEmptyObject(obj) {\r\n                for (var name in obj)\r\n                    return false;\r\n                return true;\r\n            };\r\n\r\n            function isPlainObject(obj) {\r\n                if (!obj || _type(obj) != TYPES.o)\r\n                    return false;\r\n\r\n                var key;\r\n                var proto = LEXICON.p;\r\n                var hasOwnProperty = Object[proto].hasOwnProperty;\r\n                var hasOwnConstructor = hasOwnProperty.call(obj, 'constructor');\r\n                var hasIsPrototypeOf = obj.constructor && obj.constructor[proto] && hasOwnProperty.call(obj.constructor[proto], 'isPrototypeOf');\r\n\r\n                if (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\r\n                    return false;\r\n                }\r\n\r\n\r\n                for (key in obj) { /**/ }\r\n\r\n                return _type(key) == TYPES.u || hasOwnProperty.call(obj, key);\r\n            };\r\n\r\n            function each(obj, callback) {\r\n                var i = 0;\r\n\r\n                if (isArrayLike(obj)) {\r\n                    for (; i < obj[LEXICON.l]; i++) {\r\n                        if (callback.call(obj[i], i, obj[i]) === false)\r\n                            break;\r\n                    }\r\n                }\r\n                else {\r\n                    for (i in obj) {\r\n                        if (callback.call(obj[i], i, obj[i]) === false)\r\n                            break;\r\n                    }\r\n                }\r\n\r\n                return obj;\r\n            };\r\n\r\n            function isArrayLike(obj) {\r\n                var length = !!obj && [LEXICON.l] in obj && obj[LEXICON.l];\r\n                var t = _type(obj);\r\n                return isFunction(t) ? false : (t == TYPES.a || length === 0 || _type(length) == TYPES.n && length > 0 && (length - 1) in obj);\r\n            }\r\n\r\n            function stripAndCollapse(value) {\r\n                var tokens = value.match(_rnothtmlwhite) || [];\r\n                return tokens.join(_strSpace);\r\n            }\r\n\r\n            function matches(elem, selector) {\r\n                var nodeList = (elem.parentNode || document).querySelectorAll(selector) || [];\r\n                var i = nodeList[LEXICON.l];\r\n\r\n                while (i--)\r\n                    if (nodeList[i] == elem)\r\n                        return true;\r\n\r\n                return false;\r\n            }\r\n\r\n            function insertAdjacentElement(el, strategy, child) {\r\n                if (COMPATIBILITY.isA(child)) {\r\n                    for (var i = 0; i < child[LEXICON.l]; i++)\r\n                        insertAdjacentElement(el, strategy, child[i]);\r\n                }\r\n                else if (_type(child) == TYPES.s)\r\n                    el.insertAdjacentHTML(strategy, child);\r\n                else\r\n                    el.insertAdjacentElement(strategy, child.nodeType ? child : child[0]);\r\n            }\r\n\r\n            function setCSSVal(el, prop, val) {\r\n                try {\r\n                    if (el[LEXICON.s][prop] !== undefined)\r\n                        el[LEXICON.s][prop] = parseCSSVal(prop, val);\r\n                } catch (e) { }\r\n            }\r\n\r\n            function parseCSSVal(prop, val) {\r\n                if (!_cssNumber[prop.toLowerCase()] && _type(val) == TYPES.n)\r\n                    val += 'px';\r\n                return val;\r\n            }\r\n\r\n            function startNextAnimationInQ(animObj, removeFromQ) {\r\n                var index;\r\n                var nextAnim;\r\n                if (removeFromQ !== false)\r\n                    animObj.q.splice(0, 1);\r\n                if (animObj.q[LEXICON.l] > 0) {\r\n                    nextAnim = animObj.q[0];\r\n                    animate(animObj.el, nextAnim.props, nextAnim.duration, nextAnim.easing, nextAnim.complete, true);\r\n                }\r\n                else {\r\n                    index = inArray(animObj, _animations);\r\n                    if (index > -1)\r\n                        _animations.splice(index, 1);\r\n                }\r\n            }\r\n\r\n            function setAnimationValue(el, prop, value) {\r\n                if (prop === _strScrollLeft || prop === _strScrollTop)\r\n                    el[prop] = value;\r\n                else\r\n                    setCSSVal(el, prop, value);\r\n            }\r\n\r\n            function animate(el, props, options, easing, complete, guaranteedNext) {\r\n                var hasOptions = isPlainObject(options);\r\n                var from = {};\r\n                var to = {};\r\n                var i = 0;\r\n                var key;\r\n                var animObj;\r\n                var start;\r\n                var progress;\r\n                var step;\r\n                var specialEasing;\r\n                var duration;\r\n                if (hasOptions) {\r\n                    easing = options.easing;\r\n                    start = options.start;\r\n                    progress = options.progress;\r\n                    step = options.step;\r\n                    specialEasing = options.specialEasing;\r\n                    complete = options.complete;\r\n                    duration = options.duration;\r\n                }\r\n                else\r\n                    duration = options;\r\n                specialEasing = specialEasing || {};\r\n                duration = duration || 400;\r\n                easing = easing || 'swing';\r\n                guaranteedNext = guaranteedNext || false;\r\n\r\n                for (; i < _animations[LEXICON.l]; i++) {\r\n                    if (_animations[i].el === el) {\r\n                        animObj = _animations[i];\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!animObj) {\r\n                    animObj = {\r\n                        el: el,\r\n                        q: []\r\n                    };\r\n                    _animations.push(animObj);\r\n                }\r\n\r\n                for (key in props) {\r\n                    if (key === _strScrollLeft || key === _strScrollTop)\r\n                        from[key] = el[key];\r\n                    else\r\n                        from[key] = FakejQuery(el).css(key);\r\n                }\r\n\r\n                for (key in from) {\r\n                    if (from[key] !== props[key] && props[key] !== undefined)\r\n                        to[key] = props[key];\r\n                }\r\n\r\n                if (!isEmptyObject(to)) {\r\n                    var timeNow;\r\n                    var end;\r\n                    var percent;\r\n                    var fromVal;\r\n                    var toVal;\r\n                    var easedVal;\r\n                    var timeStart;\r\n                    var frame;\r\n                    var elapsed;\r\n                    var qPos = guaranteedNext ? 0 : inArray(qObj, animObj.q);\r\n                    var qObj = {\r\n                        props: to,\r\n                        duration: hasOptions ? options : duration,\r\n                        easing: easing,\r\n                        complete: complete\r\n                    };\r\n                    if (qPos === -1) {\r\n                        qPos = animObj.q[LEXICON.l];\r\n                        animObj.q.push(qObj);\r\n                    }\r\n\r\n                    if (qPos === 0) {\r\n                        if (duration > 0) {\r\n                            timeStart = COMPATIBILITY.now();\r\n                            frame = function () {\r\n                                timeNow = COMPATIBILITY.now();\r\n                                elapsed = (timeNow - timeStart);\r\n                                end = qObj.stop || elapsed >= duration;\r\n                                percent = 1 - ((MATH.max(0, timeStart + duration - timeNow) / duration) || 0);\r\n\r\n                                for (key in to) {\r\n                                    fromVal = parseFloat(from[key]);\r\n                                    toVal = parseFloat(to[key]);\r\n                                    easedVal = (toVal - fromVal) * EASING[specialEasing[key] || easing](percent, percent * duration, 0, 1, duration) + fromVal;\r\n                                    setAnimationValue(el, key, easedVal);\r\n                                    if (isFunction(step)) {\r\n                                        step(easedVal, {\r\n                                            elem: el,\r\n                                            prop: key,\r\n                                            start: fromVal,\r\n                                            now: easedVal,\r\n                                            end: toVal,\r\n                                            pos: percent,\r\n                                            options: {\r\n                                                easing: easing,\r\n                                                speacialEasing: specialEasing,\r\n                                                duration: duration,\r\n                                                complete: complete,\r\n                                                step: step\r\n                                            },\r\n                                            startTime: timeStart\r\n                                        });\r\n                                    }\r\n                                }\r\n\r\n                                if (isFunction(progress))\r\n                                    progress({}, percent, MATH.max(0, duration - elapsed));\r\n\r\n                                if (end) {\r\n                                    startNextAnimationInQ(animObj);\r\n                                    if (isFunction(complete))\r\n                                        complete();\r\n                                }\r\n                                else\r\n                                    qObj.frame = COMPATIBILITY.rAF()(frame);\r\n                            };\r\n                            qObj.frame = COMPATIBILITY.rAF()(frame);\r\n                        }\r\n                        else {\r\n                            for (key in to)\r\n                                setAnimationValue(el, key, to[key]);\r\n                            startNextAnimationInQ(animObj);\r\n                        }\r\n                    }\r\n                }\r\n                else if (guaranteedNext)\r\n                    startNextAnimationInQ(animObj);\r\n            }\r\n\r\n            function stop(el, clearQ, jumpToEnd) {\r\n                var animObj;\r\n                var qObj;\r\n                var key;\r\n                var i = 0;\r\n                for (; i < _animations[LEXICON.l]; i++) {\r\n                    animObj = _animations[i];\r\n                    if (animObj.el === el) {\r\n                        if (animObj.q[LEXICON.l] > 0) {\r\n                            qObj = animObj.q[0];\r\n                            qObj.stop = true;\r\n                            COMPATIBILITY.cAF()(qObj.frame);\r\n                            animObj.q.splice(0, 1);\r\n\r\n                            if (jumpToEnd)\r\n                                for (key in qObj.props)\r\n                                    setAnimationValue(el, key, qObj.props[key]);\r\n\r\n                            if (clearQ)\r\n                                animObj.q = [];\r\n                            else\r\n                                startNextAnimationInQ(animObj, false);\r\n                        }\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            function elementIsVisible(el) {\r\n                return !!(el[LEXICON.oW] || el[LEXICON.oH] || el.getClientRects()[LEXICON.l]);\r\n            }\r\n\r\n            function FakejQuery(selector) {\r\n                if (arguments[LEXICON.l] === 0)\r\n                    return this;\r\n\r\n                var base = new FakejQuery();\r\n                var elements = selector;\r\n                var i = 0;\r\n                var elms;\r\n                var el;\r\n\r\n                if (_type(selector) == TYPES.s) {\r\n                    elements = [];\r\n                    if (selector.charAt(0) === '<') {\r\n                        el = document.createElement('div');\r\n                        el.innerHTML = selector;\r\n                        elms = el.children;\r\n                    }\r\n                    else {\r\n                        elms = document.querySelectorAll(selector);\r\n                    }\r\n\r\n                    for (; i < elms[LEXICON.l]; i++)\r\n                        elements.push(elms[i]);\r\n                }\r\n\r\n                if (elements) {\r\n                    if (_type(elements) != TYPES.s && (!isArrayLike(elements) || elements === window || elements === elements.self))\r\n                        elements = [elements];\r\n\r\n                    for (i = 0; i < elements[LEXICON.l]; i++)\r\n                        base[i] = elements[i];\r\n\r\n                    base[LEXICON.l] = elements[LEXICON.l];\r\n                }\r\n\r\n                return base;\r\n            };\r\n\r\n            FakejQuery[LEXICON.p] = {\r\n\r\n                //EVENTS:\r\n\r\n                on: function (eventName, handler) {\r\n                    eventName = (eventName || _strEmpty).match(_rnothtmlwhite) || [_strEmpty];\r\n\r\n                    var eventNameLength = eventName[LEXICON.l];\r\n                    var i = 0;\r\n                    var el;\r\n                    return this.each(function () {\r\n                        el = this;\r\n                        try {\r\n                            if (el.addEventListener) {\r\n                                for (; i < eventNameLength; i++)\r\n                                    el.addEventListener(eventName[i], handler);\r\n                            }\r\n                            else if (el.detachEvent) {\r\n                                for (; i < eventNameLength; i++)\r\n                                    el.attachEvent('on' + eventName[i], handler);\r\n                            }\r\n                        } catch (e) { }\r\n                    });\r\n                },\r\n\r\n                off: function (eventName, handler) {\r\n                    eventName = (eventName || _strEmpty).match(_rnothtmlwhite) || [_strEmpty];\r\n\r\n                    var eventNameLength = eventName[LEXICON.l];\r\n                    var i = 0;\r\n                    var el;\r\n                    return this.each(function () {\r\n                        el = this;\r\n                        try {\r\n                            if (el.removeEventListener) {\r\n                                for (; i < eventNameLength; i++)\r\n                                    el.removeEventListener(eventName[i], handler);\r\n                            }\r\n                            else if (el.detachEvent) {\r\n                                for (; i < eventNameLength; i++)\r\n                                    el.detachEvent('on' + eventName[i], handler);\r\n                            }\r\n                        } catch (e) { }\r\n                    });\r\n                },\r\n\r\n                one: function (eventName, handler) {\r\n                    eventName = (eventName || _strEmpty).match(_rnothtmlwhite) || [_strEmpty];\r\n                    return this.each(function () {\r\n                        var el = FakejQuery(this);\r\n                        FakejQuery.each(eventName, function (i, oneEventName) {\r\n                            var oneHandler = function (e) {\r\n                                handler.call(this, e);\r\n                                el.off(oneEventName, oneHandler);\r\n                            };\r\n                            el.on(oneEventName, oneHandler);\r\n                        });\r\n                    });\r\n                },\r\n\r\n                trigger: function (eventName) {\r\n                    var el;\r\n                    var event;\r\n                    return this.each(function () {\r\n                        el = this;\r\n                        if (document.createEvent) {\r\n                            event = document.createEvent('HTMLEvents');\r\n                            event.initEvent(eventName, true, false);\r\n                            el.dispatchEvent(event);\r\n                        }\r\n                        else {\r\n                            el.fireEvent('on' + eventName);\r\n                        }\r\n                    });\r\n                },\r\n\r\n                //DOM NODE INSERTING / REMOVING:\r\n\r\n                append: function (child) {\r\n                    return this.each(function () { insertAdjacentElement(this, 'beforeend', child); });\r\n                },\r\n\r\n                prepend: function (child) {\r\n                    return this.each(function () { insertAdjacentElement(this, 'afterbegin', child); });\r\n                },\r\n\r\n                before: function (child) {\r\n                    return this.each(function () { insertAdjacentElement(this, 'beforebegin', child); });\r\n                },\r\n\r\n                after: function (child) {\r\n                    return this.each(function () { insertAdjacentElement(this, 'afterend', child); });\r\n                },\r\n\r\n                remove: function () {\r\n                    return this.each(function () {\r\n                        var el = this;\r\n                        var parentNode = el.parentNode;\r\n                        if (parentNode != null)\r\n                            parentNode.removeChild(el);\r\n                    });\r\n                },\r\n\r\n                unwrap: function () {\r\n                    var parents = [];\r\n                    var i;\r\n                    var el;\r\n                    var parent;\r\n\r\n                    this.each(function () {\r\n                        parent = this.parentNode;\r\n                        if (inArray(parent, parents) === - 1)\r\n                            parents.push(parent);\r\n                    });\r\n\r\n                    for (i = 0; i < parents[LEXICON.l]; i++) {\r\n                        el = parents[i];\r\n                        parent = el.parentNode;\r\n                        while (el.firstChild)\r\n                            parent.insertBefore(el.firstChild, el);\r\n                        parent.removeChild(el);\r\n                    }\r\n\r\n                    return this;\r\n                },\r\n\r\n                wrapAll: function (wrapperHTML) {\r\n                    var i;\r\n                    var nodes = this;\r\n                    var wrapper = FakejQuery(wrapperHTML)[0];\r\n                    var deepest = wrapper;\r\n                    var parent = nodes[0].parentNode;\r\n                    var previousSibling = nodes[0].previousSibling;\r\n                    while (deepest.childNodes[LEXICON.l] > 0)\r\n                        deepest = deepest.childNodes[0];\r\n\r\n                    for (i = 0; nodes[LEXICON.l] - i; deepest.firstChild === nodes[0] && i++)\r\n                        deepest.appendChild(nodes[i]);\r\n\r\n                    var nextSibling = previousSibling ? previousSibling.nextSibling : parent.firstChild;\r\n                    parent.insertBefore(wrapper, nextSibling);\r\n\r\n                    return this;\r\n                },\r\n\r\n                wrapInner: function (wrapperHTML) {\r\n                    return this.each(function () {\r\n                        var el = FakejQuery(this);\r\n                        var contents = el.contents();\r\n\r\n                        if (contents[LEXICON.l])\r\n                            contents.wrapAll(wrapperHTML);\r\n                        else\r\n                            el.append(wrapperHTML);\r\n                    });\r\n                },\r\n\r\n                wrap: function (wrapperHTML) {\r\n                    return this.each(function () { FakejQuery(this).wrapAll(wrapperHTML); });\r\n                },\r\n\r\n\r\n                //DOM NODE MANIPULATION / INFORMATION:\r\n\r\n                css: function (styles, val) {\r\n                    var el;\r\n                    var key;\r\n                    var cptStyle;\r\n                    var getCptStyle = window.getComputedStyle;\r\n                    if (_type(styles) == TYPES.s) {\r\n                        if (val === undefined) {\r\n                            el = this[0];\r\n                            cptStyle = getCptStyle ? getCptStyle(el, null) : el.currentStyle[styles];\r\n\r\n                            //https://bugzilla.mozilla.org/show_bug.cgi?id=548397 can be null sometimes if iframe with display: none (firefox only!)\r\n                            return getCptStyle ? cptStyle != null ? cptStyle.getPropertyValue(styles) : el[LEXICON.s][styles] : cptStyle;\r\n                        }\r\n                        else {\r\n                            return this.each(function () {\r\n                                setCSSVal(this, styles, val);\r\n                            });\r\n                        }\r\n                    }\r\n                    else {\r\n                        return this.each(function () {\r\n                            for (key in styles)\r\n                                setCSSVal(this, key, styles[key]);\r\n                        });\r\n                    }\r\n                },\r\n\r\n                hasClass: function (className) {\r\n                    var elem, i = 0;\r\n                    var classNamePrepared = _strSpace + className + _strSpace;\r\n                    var classList;\r\n\r\n                    while ((elem = this[i++])) {\r\n                        classList = elem.classList;\r\n                        if (classList && classList.contains(className))\r\n                            return true;\r\n                        else if (elem.nodeType === 1 && (_strSpace + stripAndCollapse(elem.className + _strEmpty) + _strSpace).indexOf(classNamePrepared) > -1)\r\n                            return true;\r\n                    }\r\n\r\n                    return false;\r\n                },\r\n\r\n                addClass: function (className) {\r\n                    var classes;\r\n                    var elem;\r\n                    var cur;\r\n                    var curValue;\r\n                    var clazz;\r\n                    var finalValue;\r\n                    var supportClassList;\r\n                    var elmClassList;\r\n                    var i = 0;\r\n                    var v = 0;\r\n\r\n                    if (className) {\r\n                        classes = className.match(_rnothtmlwhite) || [];\r\n\r\n                        while ((elem = this[i++])) {\r\n                            elmClassList = elem.classList;\r\n                            if (supportClassList === undefined)\r\n                                supportClassList = elmClassList !== undefined;\r\n\r\n                            if (supportClassList) {\r\n                                while ((clazz = classes[v++]))\r\n                                    elmClassList.add(clazz);\r\n                            }\r\n                            else {\r\n                                curValue = elem.className + _strEmpty;\r\n                                cur = elem.nodeType === 1 && (_strSpace + stripAndCollapse(curValue) + _strSpace);\r\n\r\n                                if (cur) {\r\n                                    while ((clazz = classes[v++]))\r\n                                        if (cur.indexOf(_strSpace + clazz + _strSpace) < 0)\r\n                                            cur += clazz + _strSpace;\r\n\r\n                                    finalValue = stripAndCollapse(cur);\r\n                                    if (curValue !== finalValue)\r\n                                        elem.className = finalValue;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    return this;\r\n                },\r\n\r\n                removeClass: function (className) {\r\n                    var classes;\r\n                    var elem;\r\n                    var cur;\r\n                    var curValue;\r\n                    var clazz;\r\n                    var finalValue;\r\n                    var supportClassList;\r\n                    var elmClassList;\r\n                    var i = 0;\r\n                    var v = 0;\r\n\r\n                    if (className) {\r\n                        classes = className.match(_rnothtmlwhite) || [];\r\n\r\n                        while ((elem = this[i++])) {\r\n                            elmClassList = elem.classList;\r\n                            if (supportClassList === undefined)\r\n                                supportClassList = elmClassList !== undefined;\r\n\r\n                            if (supportClassList) {\r\n                                while ((clazz = classes[v++]))\r\n                                    elmClassList.remove(clazz);\r\n                            }\r\n                            else {\r\n                                curValue = elem.className + _strEmpty;\r\n                                cur = elem.nodeType === 1 && (_strSpace + stripAndCollapse(curValue) + _strSpace);\r\n\r\n                                if (cur) {\r\n                                    while ((clazz = classes[v++]))\r\n                                        while (cur.indexOf(_strSpace + clazz + _strSpace) > -1)\r\n                                            cur = cur.replace(_strSpace + clazz + _strSpace, _strSpace);\r\n\r\n                                    finalValue = stripAndCollapse(cur);\r\n                                    if (curValue !== finalValue)\r\n                                        elem.className = finalValue;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    return this;\r\n                },\r\n\r\n                hide: function () {\r\n                    return this.each(function () { this[LEXICON.s].display = 'none'; });\r\n                },\r\n\r\n                show: function () {\r\n                    return this.each(function () { this[LEXICON.s].display = 'block'; });\r\n                },\r\n\r\n                attr: function (attrName, value) {\r\n                    var i = 0;\r\n                    var el;\r\n                    while (el = this[i++]) {\r\n                        if (value === undefined)\r\n                            return el.getAttribute(attrName);\r\n                        el.setAttribute(attrName, value);\r\n                    }\r\n                    return this;\r\n                },\r\n\r\n                removeAttr: function (attrName) {\r\n                    return this.each(function () { this.removeAttribute(attrName); });\r\n                },\r\n\r\n                offset: function () {\r\n                    var el = this[0];\r\n                    var rect = el[LEXICON.bCR]();\r\n                    var scrollLeft = window.pageXOffset || document.documentElement[_strScrollLeft];\r\n                    var scrollTop = window.pageYOffset || document.documentElement[_strScrollTop];\r\n                    return {\r\n                        top: rect.top + scrollTop,\r\n                        left: rect.left + scrollLeft\r\n                    };\r\n                },\r\n\r\n                position: function () {\r\n                    var el = this[0];\r\n                    return {\r\n                        top: el.offsetTop,\r\n                        left: el.offsetLeft\r\n                    };\r\n                },\r\n\r\n                scrollLeft: function (value) {\r\n                    var i = 0;\r\n                    var el;\r\n                    while (el = this[i++]) {\r\n                        if (value === undefined)\r\n                            return el[_strScrollLeft];\r\n                        el[_strScrollLeft] = value;\r\n                    }\r\n                    return this;\r\n                },\r\n\r\n                scrollTop: function (value) {\r\n                    var i = 0;\r\n                    var el;\r\n                    while (el = this[i++]) {\r\n                        if (value === undefined)\r\n                            return el[_strScrollTop];\r\n                        el[_strScrollTop] = value;\r\n                    }\r\n                    return this;\r\n                },\r\n\r\n                val: function (value) {\r\n                    var el = this[0];\r\n                    if (!value)\r\n                        return el.value;\r\n                    el.value = value;\r\n                    return this;\r\n                },\r\n\r\n\r\n                //DOM TRAVERSAL / FILTERING:\r\n\r\n                first: function () {\r\n                    return this.eq(0);\r\n                },\r\n\r\n                last: function () {\r\n                    return this.eq(-1);\r\n                },\r\n\r\n                eq: function (index) {\r\n                    return FakejQuery(this[index >= 0 ? index : this[LEXICON.l] + index]);\r\n                },\r\n\r\n                find: function (selector) {\r\n                    var children = [];\r\n                    var i;\r\n                    this.each(function () {\r\n                        var el = this;\r\n                        var ch = el.querySelectorAll(selector);\r\n                        for (i = 0; i < ch[LEXICON.l]; i++)\r\n                            children.push(ch[i]);\r\n                    });\r\n                    return FakejQuery(children);\r\n                },\r\n\r\n                children: function (selector) {\r\n                    var children = [];\r\n                    var el;\r\n                    var ch;\r\n                    var i;\r\n\r\n                    this.each(function () {\r\n                        ch = this.children;\r\n                        for (i = 0; i < ch[LEXICON.l]; i++) {\r\n                            el = ch[i];\r\n                            if (selector) {\r\n                                if ((el.matches && el.matches(selector)) || matches(el, selector))\r\n                                    children.push(el);\r\n                            }\r\n                            else\r\n                                children.push(el);\r\n                        }\r\n                    });\r\n                    return FakejQuery(children);\r\n                },\r\n\r\n                parent: function (selector) {\r\n                    var parents = [];\r\n                    var parent;\r\n                    this.each(function () {\r\n                        parent = this.parentNode;\r\n                        if (selector ? FakejQuery(parent).is(selector) : true)\r\n                            parents.push(parent);\r\n                    });\r\n                    return FakejQuery(parents);\r\n                },\r\n\r\n                is: function (selector) {\r\n\r\n                    var el;\r\n                    var i;\r\n                    for (i = 0; i < this[LEXICON.l]; i++) {\r\n                        el = this[i];\r\n                        if (selector === ':visible')\r\n                            return elementIsVisible(el);\r\n                        if (selector === ':hidden')\r\n                            return !elementIsVisible(el);\r\n                        if ((el.matches && el.matches(selector)) || matches(el, selector))\r\n                            return true;\r\n                    }\r\n                    return false;\r\n                },\r\n\r\n                contents: function () {\r\n                    var contents = [];\r\n                    var childs;\r\n                    var i;\r\n\r\n                    this.each(function () {\r\n                        childs = this.childNodes;\r\n                        for (i = 0; i < childs[LEXICON.l]; i++)\r\n                            contents.push(childs[i]);\r\n                    });\r\n\r\n                    return FakejQuery(contents);\r\n                },\r\n\r\n                each: function (callback) {\r\n                    return each(this, callback);\r\n                },\r\n\r\n\r\n                //ANIMATION:\r\n\r\n                animate: function (props, duration, easing, complete) {\r\n                    return this.each(function () { animate(this, props, duration, easing, complete); });\r\n                },\r\n\r\n                stop: function (clearQ, jump) {\r\n                    return this.each(function () { stop(this, clearQ, jump); });\r\n                }\r\n            };\r\n\r\n            extend(FakejQuery, {\r\n                extend: extend,\r\n                inArray: inArray,\r\n                isEmptyObject: isEmptyObject,\r\n                isPlainObject: isPlainObject,\r\n                each: each\r\n            });\r\n\r\n            return FakejQuery;\r\n        })();\r\n        var INSTANCES = (function () {\r\n            var _targets = [];\r\n            var _instancePropertyString = '__overlayScrollbars__';\r\n\r\n            /**\r\n             * Register, unregister or get a certain (or all) instances.\r\n             * Register: Pass the target and the instance.\r\n             * Unregister: Pass the target and null.\r\n             * Get Instance: Pass the target from which the instance shall be got.\r\n             * Get Targets: Pass no arguments.\r\n             * @param target The target to which the instance shall be registered / from which the instance shall be unregistered / the instance shall be got\r\n             * @param instance The instance.\r\n             * @returns {*|void} Returns the instance from the given target.\r\n             */\r\n            return function (target, instance) {\r\n                var argLen = arguments[LEXICON.l];\r\n                if (argLen < 1) {\r\n                    //return all targets\r\n                    return _targets;\r\n                }\r\n                else {\r\n                    if (instance) {\r\n                        //register instance\r\n                        target[_instancePropertyString] = instance;\r\n                        _targets.push(target);\r\n                    }\r\n                    else {\r\n                        var index = COMPATIBILITY.inA(target, _targets);\r\n                        if (index > -1) {\r\n                            if (argLen > 1) {\r\n                                //unregister instance\r\n                                delete target[_instancePropertyString];\r\n                                _targets.splice(index, 1);\r\n                            }\r\n                            else {\r\n                                //get instance from target\r\n                                return _targets[index][_instancePropertyString];\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })();\r\n        var PLUGIN = (function () {\r\n            var _plugin;\r\n            var _pluginsGlobals;\r\n            var _pluginsAutoUpdateLoop;\r\n            var _pluginsExtensions = [];\r\n            var _pluginsOptions = (function () {\r\n                var type = COMPATIBILITY.type;\r\n                var possibleTemplateTypes = [\r\n                    TYPES.b, //boolean\r\n                    TYPES.n, //number\r\n                    TYPES.s, //string\r\n                    TYPES.a, //array\r\n                    TYPES.o, //object\r\n                    TYPES.f, //function\r\n                    TYPES.z  //null\r\n                ];\r\n                var restrictedStringsSplit = ' ';\r\n                var restrictedStringsPossibilitiesSplit = ':';\r\n                var classNameAllowedValues = [TYPES.z, TYPES.s];\r\n                var numberAllowedValues = TYPES.n;\r\n                var booleanNullAllowedValues = [TYPES.z, TYPES.b];\r\n                var booleanTrueTemplate = [true, TYPES.b];\r\n                var booleanFalseTemplate = [false, TYPES.b];\r\n                var callbackTemplate = [null, [TYPES.z, TYPES.f]];\r\n                var updateOnLoadTemplate = [['img'], [TYPES.s, TYPES.a, TYPES.z]];\r\n                var inheritedAttrsTemplate = [['style', 'class'], [TYPES.s, TYPES.a, TYPES.z]];\r\n                var resizeAllowedValues = 'n:none b:both h:horizontal v:vertical';\r\n                var overflowBehaviorAllowedValues = 'v-h:visible-hidden v-s:visible-scroll s:scroll h:hidden';\r\n                var scrollbarsVisibilityAllowedValues = 'v:visible h:hidden a:auto';\r\n                var scrollbarsAutoHideAllowedValues = 'n:never s:scroll l:leave m:move';\r\n                var optionsDefaultsAndTemplate = {\r\n                    className: ['os-theme-dark', classNameAllowedValues],                //null || string\r\n                    resize: ['none', resizeAllowedValues],                               //none || both  || horizontal || vertical || n || b || h || v\r\n                    sizeAutoCapable: booleanTrueTemplate,                                //true || false\r\n                    clipAlways: booleanTrueTemplate,                                     //true || false\r\n                    normalizeRTL: booleanTrueTemplate,                                   //true || false\r\n                    paddingAbsolute: booleanFalseTemplate,                               //true || false\r\n                    autoUpdate: [null, booleanNullAllowedValues],                        //true || false || null\r\n                    autoUpdateInterval: [33, numberAllowedValues],                       //number\r\n                    updateOnLoad: updateOnLoadTemplate,                                  //string || array || null\r\n                    nativeScrollbarsOverlaid: {\r\n                        showNativeScrollbars: booleanFalseTemplate,                      //true || false\r\n                        initialize: booleanTrueTemplate                                  //true || false\r\n                    },\r\n                    overflowBehavior: {\r\n                        x: ['scroll', overflowBehaviorAllowedValues],                    //visible-hidden  || visible-scroll || hidden || scroll || v-h || v-s || h || s\r\n                        y: ['scroll', overflowBehaviorAllowedValues]                     //visible-hidden  || visible-scroll || hidden || scroll || v-h || v-s || h || s\r\n                    },\r\n                    scrollbars: {\r\n                        visibility: ['auto', scrollbarsVisibilityAllowedValues],         //visible || hidden || auto || v || h || a\r\n                        autoHide: ['never', scrollbarsAutoHideAllowedValues],            //never || scroll || leave || move || n || s || l || m\r\n                        autoHideDelay: [800, numberAllowedValues],                       //number\r\n                        dragScrolling: booleanTrueTemplate,                              //true || false\r\n                        clickScrolling: booleanFalseTemplate,                            //true || false\r\n                        touchSupport: booleanTrueTemplate,                               //true || false\r\n                        snapHandle: booleanFalseTemplate                                 //true || false\r\n                    },\r\n                    textarea: {\r\n                        dynWidth: booleanFalseTemplate,                                  //true || false\r\n                        dynHeight: booleanFalseTemplate,                                 //true || false\r\n                        inheritedAttrs: inheritedAttrsTemplate                           //string || array || null\r\n                    },\r\n                    callbacks: {\r\n                        onInitialized: callbackTemplate,                                 //null || function\r\n                        onInitializationWithdrawn: callbackTemplate,                     //null || function\r\n                        onDestroyed: callbackTemplate,                                   //null || function\r\n                        onScrollStart: callbackTemplate,                                 //null || function\r\n                        onScroll: callbackTemplate,                                      //null || function\r\n                        onScrollStop: callbackTemplate,                                  //null || function\r\n                        onOverflowChanged: callbackTemplate,                             //null || function\r\n                        onOverflowAmountChanged: callbackTemplate,                       //null || function\r\n                        onDirectionChanged: callbackTemplate,                            //null || function\r\n                        onContentSizeChanged: callbackTemplate,                          //null || function\r\n                        onHostSizeChanged: callbackTemplate,                             //null || function\r\n                        onUpdated: callbackTemplate                                      //null || function\r\n                    }\r\n                };\r\n                var convert = function (template) {\r\n                    var recursive = function (obj) {\r\n                        var key;\r\n                        var val;\r\n                        var valType;\r\n                        for (key in obj) {\r\n                            if (!obj[LEXICON.hOP](key))\r\n                                continue;\r\n                            val = obj[key];\r\n                            valType = type(val);\r\n                            if (valType == TYPES.a)\r\n                                obj[key] = val[template ? 1 : 0];\r\n                            else if (valType == TYPES.o)\r\n                                obj[key] = recursive(val);\r\n                        }\r\n                        return obj;\r\n                    };\r\n                    return recursive(FRAMEWORK.extend(true, {}, optionsDefaultsAndTemplate));\r\n                };\r\n\r\n                return {\r\n                    _defaults: convert(),\r\n\r\n                    _template: convert(true),\r\n\r\n                    /**\r\n                     * Validates the passed object by the passed template.\r\n                     * @param obj The object which shall be validated.\r\n                     * @param template The template which defines the allowed values and types.\r\n                     * @param writeErrors True if errors shall be logged to the console.\r\n                     * @param diffObj If a object is passed then only valid differences to this object will be returned.\r\n                     * @returns {{}} A object which contains two objects called \"default\" and \"prepared\" which contains only the valid properties of the passed original object and discards not different values compared to the passed diffObj.\r\n                     */\r\n                    _validate: function (obj, template, writeErrors, diffObj) {\r\n                        var validatedOptions = {};\r\n                        var validatedOptionsPrepared = {};\r\n                        var objectCopy = FRAMEWORK.extend(true, {}, obj);\r\n                        var inArray = FRAMEWORK.inArray;\r\n                        var isEmptyObj = FRAMEWORK.isEmptyObject;\r\n                        var checkObjectProps = function (data, template, diffData, validatedOptions, validatedOptionsPrepared, prevPropName) {\r\n                            for (var prop in template) {\r\n                                if (template[LEXICON.hOP](prop) && data[LEXICON.hOP](prop)) {\r\n                                    var isValid = false;\r\n                                    var isDiff = false;\r\n                                    var templateValue = template[prop];\r\n                                    var templateValueType = type(templateValue);\r\n                                    var templateIsComplex = templateValueType == TYPES.o;\r\n                                    var templateTypes = !COMPATIBILITY.isA(templateValue) ? [templateValue] : templateValue;\r\n                                    var dataDiffValue = diffData[prop];\r\n                                    var dataValue = data[prop];\r\n                                    var dataValueType = type(dataValue);\r\n                                    var propPrefix = prevPropName ? prevPropName + '.' : '';\r\n                                    var error = \"The option \\\"\" + propPrefix + prop + \"\\\" wasn't set, because\";\r\n                                    var errorPossibleTypes = [];\r\n                                    var errorRestrictedStrings = [];\r\n                                    var restrictedStringValuesSplit;\r\n                                    var restrictedStringValuesPossibilitiesSplit;\r\n                                    var isRestrictedValue;\r\n                                    var mainPossibility;\r\n                                    var currType;\r\n                                    var i;\r\n                                    var v;\r\n                                    var j;\r\n\r\n                                    dataDiffValue = dataDiffValue === undefined ? {} : dataDiffValue;\r\n\r\n                                    //if the template has a object as value, it means that the options are complex (verschachtelt)\r\n                                    if (templateIsComplex && dataValueType == TYPES.o) {\r\n                                        validatedOptions[prop] = {};\r\n                                        validatedOptionsPrepared[prop] = {};\r\n                                        checkObjectProps(dataValue, templateValue, dataDiffValue, validatedOptions[prop], validatedOptionsPrepared[prop], propPrefix + prop);\r\n                                        FRAMEWORK.each([data, validatedOptions, validatedOptionsPrepared], function (index, value) {\r\n                                            if (isEmptyObj(value[prop])) {\r\n                                                delete value[prop];\r\n                                            }\r\n                                        });\r\n                                    }\r\n                                    else if (!templateIsComplex) {\r\n                                        for (i = 0; i < templateTypes[LEXICON.l]; i++) {\r\n                                            currType = templateTypes[i];\r\n                                            templateValueType = type(currType);\r\n                                            //if currtype is string and starts with restrictedStringPrefix and end with restrictedStringSuffix\r\n                                            isRestrictedValue = templateValueType == TYPES.s && inArray(currType, possibleTemplateTypes) === -1;\r\n                                            if (isRestrictedValue) {\r\n                                                errorPossibleTypes.push(TYPES.s);\r\n\r\n                                                //split it into a array which contains all possible values for example: [\"y:yes\", \"n:no\", \"m:maybe\"]\r\n                                                restrictedStringValuesSplit = currType.split(restrictedStringsSplit);\r\n                                                errorRestrictedStrings = errorRestrictedStrings.concat(restrictedStringValuesSplit);\r\n                                                for (v = 0; v < restrictedStringValuesSplit[LEXICON.l]; v++) {\r\n                                                    //split the possible values into their possibiliteis for example: [\"y\", \"yes\"] -> the first is always the mainPossibility\r\n                                                    restrictedStringValuesPossibilitiesSplit = restrictedStringValuesSplit[v].split(restrictedStringsPossibilitiesSplit);\r\n                                                    mainPossibility = restrictedStringValuesPossibilitiesSplit[0];\r\n                                                    for (j = 0; j < restrictedStringValuesPossibilitiesSplit[LEXICON.l]; j++) {\r\n                                                        //if any possibility matches with the dataValue, its valid\r\n                                                        if (dataValue === restrictedStringValuesPossibilitiesSplit[j]) {\r\n                                                            isValid = true;\r\n                                                            break;\r\n                                                        }\r\n                                                    }\r\n                                                    if (isValid)\r\n                                                        break;\r\n                                                }\r\n                                            }\r\n                                            else {\r\n                                                errorPossibleTypes.push(currType);\r\n\r\n                                                if (dataValueType === currType) {\r\n                                                    isValid = true;\r\n                                                    break;\r\n                                                }\r\n                                            }\r\n                                        }\r\n\r\n                                        if (isValid) {\r\n                                            isDiff = dataValue !== dataDiffValue;\r\n\r\n                                            if (isDiff)\r\n                                                validatedOptions[prop] = dataValue;\r\n\r\n                                            if (isRestrictedValue ? inArray(dataDiffValue, restrictedStringValuesPossibilitiesSplit) < 0 : isDiff)\r\n                                                validatedOptionsPrepared[prop] = isRestrictedValue ? mainPossibility : dataValue;\r\n                                        }\r\n                                        else if (writeErrors) {\r\n                                            console.warn(error + \" it doesn't accept the type [ \" + dataValueType.toUpperCase() + \" ] with the value of \\\"\" + dataValue + \"\\\".\\r\\n\" +\r\n                                                \"Accepted types are: [ \" + errorPossibleTypes.join(', ').toUpperCase() + \" ].\" +\r\n                                                (errorRestrictedStrings[length] > 0 ? \"\\r\\nValid strings are: [ \" + errorRestrictedStrings.join(', ').split(restrictedStringsPossibilitiesSplit).join(', ') + \" ].\" : ''));\r\n                                        }\r\n                                        delete data[prop];\r\n                                    }\r\n                                }\r\n                            }\r\n                        };\r\n                        checkObjectProps(objectCopy, template, diffObj || {}, validatedOptions, validatedOptionsPrepared);\r\n\r\n                        //add values which aren't specified in the template to the finished validated object to prevent them from being discarded\r\n                        /*\r\n                        if(keepForeignProps) {\r\n                            FRAMEWORK.extend(true, validatedOptions, objectCopy);\r\n                            FRAMEWORK.extend(true, validatedOptionsPrepared, objectCopy);\r\n                        }\r\n                        */\r\n\r\n                        if (!isEmptyObj(objectCopy) && writeErrors)\r\n                            console.warn('The following options are discarded due to invalidity:\\r\\n' + window.JSON.stringify(objectCopy, null, 2));\r\n\r\n                        return {\r\n                            _default: validatedOptions,\r\n                            _prepared: validatedOptionsPrepared\r\n                        };\r\n                    }\r\n                }\r\n            }());\r\n\r\n            /**\r\n             * Initializes the object which contains global information about the plugin and each instance of it.\r\n             */\r\n            function initOverlayScrollbarsStatics() {\r\n                if (!_pluginsGlobals)\r\n                    _pluginsGlobals = new OverlayScrollbarsGlobals(_pluginsOptions._defaults);\r\n                if (!_pluginsAutoUpdateLoop)\r\n                    _pluginsAutoUpdateLoop = new OverlayScrollbarsAutoUpdateLoop(_pluginsGlobals);\r\n            }\r\n\r\n            /**\r\n             * The global object for the OverlayScrollbars objects. It contains resources which every OverlayScrollbars object needs. This object is initialized only once: if the first OverlayScrollbars object gets initialized.\r\n             * @param defaultOptions\r\n             * @constructor\r\n             */\r\n            function OverlayScrollbarsGlobals(defaultOptions) {\r\n                var _base = this;\r\n                var strOverflow = 'overflow';\r\n                var strHidden = 'hidden';\r\n                var strScroll = 'scroll';\r\n                var bodyElement = FRAMEWORK('body');\r\n                var scrollbarDummyElement = FRAMEWORK('<div id=\"os-dummy-scrollbar-size\"><div></div></div>');\r\n                var scrollbarDummyElement0 = scrollbarDummyElement[0];\r\n                var dummyContainerChild = FRAMEWORK(scrollbarDummyElement.children('div').eq(0));\r\n\r\n                bodyElement.append(scrollbarDummyElement);\r\n                scrollbarDummyElement.hide().show(); //fix IE8 bug (incorrect measuring)\r\n\r\n                var nativeScrollbarSize = calcNativeScrollbarSize(scrollbarDummyElement0);\r\n                var nativeScrollbarIsOverlaid = {\r\n                    x: nativeScrollbarSize.x === 0,\r\n                    y: nativeScrollbarSize.y === 0\r\n                };\r\n                var msie = (function () {\r\n                    var ua = window.navigator.userAgent;\r\n                    var strIndexOf = 'indexOf';\r\n                    var strSubString = 'substring';\r\n                    var msie = ua[strIndexOf]('MSIE ');\r\n                    var trident = ua[strIndexOf]('Trident/');\r\n                    var edge = ua[strIndexOf]('Edge/');\r\n                    var rv = ua[strIndexOf]('rv:');\r\n                    var result;\r\n                    var parseIntFunc = parseInt;\r\n\r\n                    // IE 10 or older => return version number\r\n                    if (msie > 0)\r\n                        result = parseIntFunc(ua[strSubString](msie + 5, ua[strIndexOf]('.', msie)), 10);\r\n\r\n                    // IE 11 => return version number\r\n                    else if (trident > 0)\r\n                        result = parseIntFunc(ua[strSubString](rv + 3, ua[strIndexOf]('.', rv)), 10);\r\n\r\n                    // Edge (IE 12+) => return version number\r\n                    else if (edge > 0)\r\n                        result = parseIntFunc(ua[strSubString](edge + 5, ua[strIndexOf]('.', edge)), 10);\r\n\r\n                    // other browser\r\n                    return result;\r\n                })();\r\n\r\n                FRAMEWORK.extend(_base, {\r\n                    defaultOptions: defaultOptions,\r\n                    msie: msie,\r\n                    autoUpdateLoop: false,\r\n                    autoUpdateRecommended: !COMPATIBILITY.mO(),\r\n                    nativeScrollbarSize: nativeScrollbarSize,\r\n                    nativeScrollbarIsOverlaid: nativeScrollbarIsOverlaid,\r\n                    nativeScrollbarStyling: (function () {\r\n                        var result = false;\r\n                        scrollbarDummyElement.addClass('os-viewport-native-scrollbars-invisible');\r\n                        try {\r\n                            result = (scrollbarDummyElement.css('scrollbar-width') === 'none' && (msie > 9 || !msie)) || window.getComputedStyle(scrollbarDummyElement0, '::-webkit-scrollbar').getPropertyValue('display') === 'none';\r\n                        } catch (ex) { }\r\n\r\n                        //fix opera bug: scrollbar styles will only appear if overflow value is scroll or auto during the activation of the style.\r\n                        //and set overflow to scroll\r\n                        //scrollbarDummyElement.css(strOverflow, strHidden).hide().css(strOverflow, strScroll).show();\r\n                        //return (scrollbarDummyElement0[LEXICON.oH] - scrollbarDummyElement0[LEXICON.cH]) === 0 && (scrollbarDummyElement0[LEXICON.oW] - scrollbarDummyElement0[LEXICON.cW]) === 0;\r\n\r\n                        return result;\r\n                    })(),\r\n                    overlayScrollbarDummySize: { x: 30, y: 30 },\r\n                    cssCalc: VENDORS._cssPropertyValue('width', 'calc', '(1px)') || null,\r\n                    restrictedMeasuring: (function () {\r\n                        //https://bugzilla.mozilla.org/show_bug.cgi?id=1439305\r\n                        //since 1.11.0 always false -> fixed via CSS (hopefully)\r\n                        scrollbarDummyElement.css(strOverflow, strHidden);\r\n                        var scrollSize = {\r\n                            w: scrollbarDummyElement0[LEXICON.sW],\r\n                            h: scrollbarDummyElement0[LEXICON.sH]\r\n                        };\r\n                        scrollbarDummyElement.css(strOverflow, 'visible');\r\n                        var scrollSize2 = {\r\n                            w: scrollbarDummyElement0[LEXICON.sW],\r\n                            h: scrollbarDummyElement0[LEXICON.sH]\r\n                        };\r\n                        return (scrollSize.w - scrollSize2.w) !== 0 || (scrollSize.h - scrollSize2.h) !== 0;\r\n                    })(),\r\n                    rtlScrollBehavior: (function () {\r\n                        scrollbarDummyElement.css({ 'overflow-y': strHidden, 'overflow-x': strScroll, 'direction': 'rtl' }).scrollLeft(0);\r\n                        var dummyContainerOffset = scrollbarDummyElement.offset();\r\n                        var dummyContainerChildOffset = dummyContainerChild.offset();\r\n                        //https://github.com/KingSora/OverlayScrollbars/issues/187\r\n                        scrollbarDummyElement.scrollLeft(-999);\r\n                        var dummyContainerChildOffsetAfterScroll = dummyContainerChild.offset();\r\n                        return {\r\n                            //origin direction = determines if the zero scroll position is on the left or right side\r\n                            //'i' means 'invert' (i === true means that the axis must be inverted to be correct)\r\n                            //true = on the left side\r\n                            //false = on the right side\r\n                            i: dummyContainerOffset.left === dummyContainerChildOffset.left,\r\n                            //negative = determines if the maximum scroll is positive or negative\r\n                            //'n' means 'negate' (n === true means that the axis must be negated to be correct)\r\n                            //true = negative\r\n                            //false = positive\r\n                            n: dummyContainerChildOffset.left !== dummyContainerChildOffsetAfterScroll.left\r\n                        };\r\n                    })(),\r\n                    supportTransform: !!VENDORS._cssProperty('transform'),\r\n                    supportTransition: !!VENDORS._cssProperty('transition'),\r\n                    supportPassiveEvents: (function () {\r\n                        var supportsPassive = false;\r\n                        try {\r\n                            window.addEventListener('test', null, Object.defineProperty({}, 'passive', {\r\n                                get: function () {\r\n                                    supportsPassive = true;\r\n                                }\r\n                            }));\r\n                        } catch (e) { }\r\n                        return supportsPassive;\r\n                    })(),\r\n                    supportResizeObserver: !!COMPATIBILITY.rO(),\r\n                    supportMutationObserver: !!COMPATIBILITY.mO()\r\n                });\r\n\r\n                scrollbarDummyElement.removeAttr(LEXICON.s).remove();\r\n\r\n                //Catch zoom event:\r\n                (function () {\r\n                    if (nativeScrollbarIsOverlaid.x && nativeScrollbarIsOverlaid.y)\r\n                        return;\r\n\r\n                    var abs = MATH.abs;\r\n                    var windowWidth = COMPATIBILITY.wW();\r\n                    var windowHeight = COMPATIBILITY.wH();\r\n                    var windowDpr = getWindowDPR();\r\n                    var onResize = function () {\r\n                        if (INSTANCES().length > 0) {\r\n                            var newW = COMPATIBILITY.wW();\r\n                            var newH = COMPATIBILITY.wH();\r\n                            var deltaW = newW - windowWidth;\r\n                            var deltaH = newH - windowHeight;\r\n\r\n                            if (deltaW === 0 && deltaH === 0)\r\n                                return;\r\n\r\n                            var deltaWRatio = MATH.round(newW / (windowWidth / 100.0));\r\n                            var deltaHRatio = MATH.round(newH / (windowHeight / 100.0));\r\n                            var absDeltaW = abs(deltaW);\r\n                            var absDeltaH = abs(deltaH);\r\n                            var absDeltaWRatio = abs(deltaWRatio);\r\n                            var absDeltaHRatio = abs(deltaHRatio);\r\n                            var newDPR = getWindowDPR();\r\n\r\n                            var deltaIsBigger = absDeltaW > 2 && absDeltaH > 2;\r\n                            var difference = !differenceIsBiggerThanOne(absDeltaWRatio, absDeltaHRatio);\r\n                            var dprChanged = newDPR !== windowDpr && windowDpr > 0;\r\n                            var isZoom = deltaIsBigger && difference && dprChanged;\r\n                            var oldScrollbarSize = _base.nativeScrollbarSize;\r\n                            var newScrollbarSize;\r\n\r\n                            if (isZoom) {\r\n                                bodyElement.append(scrollbarDummyElement);\r\n                                newScrollbarSize = _base.nativeScrollbarSize = calcNativeScrollbarSize(scrollbarDummyElement[0]);\r\n                                scrollbarDummyElement.remove();\r\n                                if (oldScrollbarSize.x !== newScrollbarSize.x || oldScrollbarSize.y !== newScrollbarSize.y) {\r\n                                    FRAMEWORK.each(INSTANCES(), function () {\r\n                                        if (INSTANCES(this))\r\n                                            INSTANCES(this).update('zoom');\r\n                                    });\r\n                                }\r\n                            }\r\n\r\n                            windowWidth = newW;\r\n                            windowHeight = newH;\r\n                            windowDpr = newDPR;\r\n                        }\r\n                    };\r\n\r\n                    function differenceIsBiggerThanOne(valOne, valTwo) {\r\n                        var absValOne = abs(valOne);\r\n                        var absValTwo = abs(valTwo);\r\n                        return !(absValOne === absValTwo || absValOne + 1 === absValTwo || absValOne - 1 === absValTwo);\r\n                    }\r\n\r\n                    function getWindowDPR() {\r\n                        var dDPI = window.screen.deviceXDPI || 0;\r\n                        var sDPI = window.screen.logicalXDPI || 1;\r\n                        return window.devicePixelRatio || (dDPI / sDPI);\r\n                    }\r\n\r\n                    FRAMEWORK(window).on('resize', onResize);\r\n                })();\r\n\r\n                function calcNativeScrollbarSize(measureElement) {\r\n                    return {\r\n                        x: measureElement[LEXICON.oH] - measureElement[LEXICON.cH],\r\n                        y: measureElement[LEXICON.oW] - measureElement[LEXICON.cW]\r\n                    };\r\n                }\r\n            }\r\n\r\n            /**\r\n             * The object which manages the auto update loop for all OverlayScrollbars objects. This object is initialized only once: if the first OverlayScrollbars object gets initialized.\r\n             * @constructor\r\n             */\r\n            function OverlayScrollbarsAutoUpdateLoop(globals) {\r\n                var _base = this;\r\n                var _inArray = FRAMEWORK.inArray;\r\n                var _getNow = COMPATIBILITY.now;\r\n                var _strAutoUpdate = 'autoUpdate';\r\n                var _strAutoUpdateInterval = _strAutoUpdate + 'Interval';\r\n                var _strLength = LEXICON.l;\r\n                var _loopingInstances = [];\r\n                var _loopingInstancesIntervalCache = [];\r\n                var _loopIsActive = false;\r\n                var _loopIntervalDefault = 33;\r\n                var _loopInterval = _loopIntervalDefault;\r\n                var _loopTimeOld = _getNow();\r\n                var _loopID;\r\n\r\n\r\n                /**\r\n                 * The auto update loop which will run every 50 milliseconds or less if the update interval of a instance is lower than 50 milliseconds.\r\n                 */\r\n                var loop = function () {\r\n                    if (_loopingInstances[_strLength] > 0 && _loopIsActive) {\r\n                        _loopID = COMPATIBILITY.rAF()(function () {\r\n                            loop();\r\n                        });\r\n                        var timeNew = _getNow();\r\n                        var timeDelta = timeNew - _loopTimeOld;\r\n                        var lowestInterval;\r\n                        var instance;\r\n                        var instanceOptions;\r\n                        var instanceAutoUpdateAllowed;\r\n                        var instanceAutoUpdateInterval;\r\n                        var now;\r\n\r\n                        if (timeDelta > _loopInterval) {\r\n                            _loopTimeOld = timeNew - (timeDelta % _loopInterval);\r\n                            lowestInterval = _loopIntervalDefault;\r\n                            for (var i = 0; i < _loopingInstances[_strLength]; i++) {\r\n                                instance = _loopingInstances[i];\r\n                                if (instance !== undefined) {\r\n                                    instanceOptions = instance.options();\r\n                                    instanceAutoUpdateAllowed = instanceOptions[_strAutoUpdate];\r\n                                    instanceAutoUpdateInterval = MATH.max(1, instanceOptions[_strAutoUpdateInterval]);\r\n                                    now = _getNow();\r\n\r\n                                    if ((instanceAutoUpdateAllowed === true || instanceAutoUpdateAllowed === null) && (now - _loopingInstancesIntervalCache[i]) > instanceAutoUpdateInterval) {\r\n                                        instance.update('auto');\r\n                                        _loopingInstancesIntervalCache[i] = new Date(now += instanceAutoUpdateInterval);\r\n                                    }\r\n\r\n                                    lowestInterval = MATH.max(1, MATH.min(lowestInterval, instanceAutoUpdateInterval));\r\n                                }\r\n                            }\r\n                            _loopInterval = lowestInterval;\r\n                        }\r\n                    } else {\r\n                        _loopInterval = _loopIntervalDefault;\r\n                    }\r\n                };\r\n\r\n                /**\r\n                 * Add OverlayScrollbars instance to the auto update loop. Only successful if the instance isn't already added.\r\n                 * @param instance The instance which shall be updated in a loop automatically.\r\n                 */\r\n                _base.add = function (instance) {\r\n                    if (_inArray(instance, _loopingInstances) === -1) {\r\n                        _loopingInstances.push(instance);\r\n                        _loopingInstancesIntervalCache.push(_getNow());\r\n                        if (_loopingInstances[_strLength] > 0 && !_loopIsActive) {\r\n                            _loopIsActive = true;\r\n                            globals.autoUpdateLoop = _loopIsActive;\r\n                            loop();\r\n                        }\r\n                    }\r\n                };\r\n\r\n                /**\r\n                 * Remove OverlayScrollbars instance from the auto update loop. Only successful if the instance was added before.\r\n                 * @param instance The instance which shall be updated in a loop automatically.\r\n                 */\r\n                _base.remove = function (instance) {\r\n                    var index = _inArray(instance, _loopingInstances);\r\n                    if (index > -1) {\r\n                        //remove from loopingInstances list\r\n                        _loopingInstancesIntervalCache.splice(index, 1);\r\n                        _loopingInstances.splice(index, 1);\r\n\r\n                        //correct update loop behavior\r\n                        if (_loopingInstances[_strLength] === 0 && _loopIsActive) {\r\n                            _loopIsActive = false;\r\n                            globals.autoUpdateLoop = _loopIsActive;\r\n                            if (_loopID !== undefined) {\r\n                                COMPATIBILITY.cAF()(_loopID);\r\n                                _loopID = -1;\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            }\r\n\r\n            /**\r\n             * A object which manages the scrollbars visibility of the target element.\r\n             * @param pluginTargetElement The element from which the scrollbars shall be hidden.\r\n             * @param options The custom options.\r\n             * @param extensions The custom extensions.\r\n             * @param globals\r\n             * @param autoUpdateLoop\r\n             * @returns {*}\r\n             * @constructor\r\n             */\r\n            function OverlayScrollbarsInstance(pluginTargetElement, options, extensions, globals, autoUpdateLoop) {\r\n                //shortcuts\r\n                var type = COMPATIBILITY.type;\r\n                var inArray = FRAMEWORK.inArray;\r\n                var each = FRAMEWORK.each;\r\n\r\n                //make correct instanceof\r\n                var _base = new _plugin();\r\n                var _frameworkProto = FRAMEWORK[LEXICON.p];\r\n\r\n                //if passed element is no HTML element: skip and return\r\n                if (!isHTMLElement(pluginTargetElement))\r\n                    return;\r\n\r\n                //if passed element is already initialized: set passed options if there are any and return its instance\r\n                if (INSTANCES(pluginTargetElement)) {\r\n                    var inst = INSTANCES(pluginTargetElement);\r\n                    inst.options(options);\r\n                    return inst;\r\n                }\r\n\r\n                //globals:\r\n                var _nativeScrollbarIsOverlaid;\r\n                var _overlayScrollbarDummySize;\r\n                var _rtlScrollBehavior;\r\n                var _autoUpdateRecommended;\r\n                var _msieVersion;\r\n                var _nativeScrollbarStyling;\r\n                var _cssCalc;\r\n                var _nativeScrollbarSize;\r\n                var _supportTransition;\r\n                var _supportTransform;\r\n                var _supportPassiveEvents;\r\n                var _supportResizeObserver;\r\n                var _supportMutationObserver;\r\n                var _restrictedMeasuring;\r\n\r\n                //general readonly:\r\n                var _initialized;\r\n                var _destroyed;\r\n                var _isTextarea;\r\n                var _isBody;\r\n                var _documentMixed;\r\n                var _domExists;\r\n\r\n                //general:\r\n                var _isBorderBox;\r\n                var _sizeAutoObserverAdded;\r\n                var _paddingX;\r\n                var _paddingY;\r\n                var _borderX;\r\n                var _borderY;\r\n                var _marginX;\r\n                var _marginY;\r\n                var _isRTL;\r\n                var _sleeping;\r\n                var _contentBorderSize = {};\r\n                var _scrollHorizontalInfo = {};\r\n                var _scrollVerticalInfo = {};\r\n                var _viewportSize = {};\r\n                var _nativeScrollbarMinSize = {};\r\n\r\n                //naming:\t\r\n                var _strMinusHidden = '-hidden';\r\n                var _strMarginMinus = 'margin-';\r\n                var _strPaddingMinus = 'padding-';\r\n                var _strBorderMinus = 'border-';\r\n                var _strTop = 'top';\r\n                var _strRight = 'right';\r\n                var _strBottom = 'bottom';\r\n                var _strLeft = 'left';\r\n                var _strMinMinus = 'min-';\r\n                var _strMaxMinus = 'max-';\r\n                var _strWidth = 'width';\r\n                var _strHeight = 'height';\r\n                var _strFloat = 'float';\r\n                var _strEmpty = '';\r\n                var _strAuto = 'auto';\r\n                var _strSync = 'sync';\r\n                var _strScroll = 'scroll';\r\n                var _strHundredPercent = '100%';\r\n                var _strX = 'x';\r\n                var _strY = 'y';\r\n                var _strDot = '.';\r\n                var _strSpace = ' ';\r\n                var _strScrollbar = 'scrollbar';\r\n                var _strMinusHorizontal = '-horizontal';\r\n                var _strMinusVertical = '-vertical';\r\n                var _strScrollLeft = _strScroll + 'Left';\r\n                var _strScrollTop = _strScroll + 'Top';\r\n                var _strMouseTouchDownEvent = 'mousedown touchstart';\r\n                var _strMouseTouchUpEvent = 'mouseup touchend touchcancel';\r\n                var _strMouseTouchMoveEvent = 'mousemove touchmove';\r\n                var _strMouseEnter = 'mouseenter';\r\n                var _strMouseLeave = 'mouseleave';\r\n                var _strKeyDownEvent = 'keydown';\r\n                var _strKeyUpEvent = 'keyup';\r\n                var _strSelectStartEvent = 'selectstart';\r\n                var _strTransitionEndEvent = 'transitionend webkitTransitionEnd oTransitionEnd';\r\n                var _strResizeObserverProperty = '__overlayScrollbarsRO__';\r\n\r\n                //class names:\t\r\n                var _cassNamesPrefix = 'os-';\r\n                var _classNameHTMLElement = _cassNamesPrefix + 'html';\r\n                var _classNameHostElement = _cassNamesPrefix + 'host';\r\n                var _classNameHostElementForeign = _classNameHostElement + '-foreign';\r\n                var _classNameHostTextareaElement = _classNameHostElement + '-textarea';\r\n                var _classNameHostScrollbarHorizontalHidden = _classNameHostElement + '-' + _strScrollbar + _strMinusHorizontal + _strMinusHidden;\r\n                var _classNameHostScrollbarVerticalHidden = _classNameHostElement + '-' + _strScrollbar + _strMinusVertical + _strMinusHidden;\r\n                var _classNameHostTransition = _classNameHostElement + '-transition';\r\n                var _classNameHostRTL = _classNameHostElement + '-rtl';\r\n                var _classNameHostResizeDisabled = _classNameHostElement + '-resize-disabled';\r\n                var _classNameHostScrolling = _classNameHostElement + '-scrolling';\r\n                var _classNameHostOverflow = _classNameHostElement + '-overflow';\r\n                var _classNameHostOverflow = _classNameHostElement + '-overflow';\r\n                var _classNameHostOverflowX = _classNameHostOverflow + '-x';\r\n                var _classNameHostOverflowY = _classNameHostOverflow + '-y';\r\n                var _classNameTextareaElement = _cassNamesPrefix + 'textarea';\r\n                var _classNameTextareaCoverElement = _classNameTextareaElement + '-cover';\r\n                var _classNamePaddingElement = _cassNamesPrefix + 'padding';\r\n                var _classNameViewportElement = _cassNamesPrefix + 'viewport';\r\n                var _classNameViewportNativeScrollbarsInvisible = _classNameViewportElement + '-native-scrollbars-invisible';\r\n                var _classNameViewportNativeScrollbarsOverlaid = _classNameViewportElement + '-native-scrollbars-overlaid';\r\n                var _classNameContentElement = _cassNamesPrefix + 'content';\r\n                var _classNameContentArrangeElement = _cassNamesPrefix + 'content-arrange';\r\n                var _classNameContentGlueElement = _cassNamesPrefix + 'content-glue';\r\n                var _classNameSizeAutoObserverElement = _cassNamesPrefix + 'size-auto-observer';\r\n                var _classNameResizeObserverElement = _cassNamesPrefix + 'resize-observer';\r\n                var _classNameResizeObserverItemElement = _cassNamesPrefix + 'resize-observer-item';\r\n                var _classNameResizeObserverItemFinalElement = _classNameResizeObserverItemElement + '-final';\r\n                var _classNameTextInherit = _cassNamesPrefix + 'text-inherit';\r\n                var _classNameScrollbar = _cassNamesPrefix + _strScrollbar;\r\n                var _classNameScrollbarTrack = _classNameScrollbar + '-track';\r\n                var _classNameScrollbarTrackOff = _classNameScrollbarTrack + '-off';\r\n                var _classNameScrollbarHandle = _classNameScrollbar + '-handle';\r\n                var _classNameScrollbarHandleOff = _classNameScrollbarHandle + '-off';\r\n                var _classNameScrollbarUnusable = _classNameScrollbar + '-unusable';\r\n                var _classNameScrollbarAutoHidden = _classNameScrollbar + '-' + _strAuto + _strMinusHidden;\r\n                var _classNameScrollbarCorner = _classNameScrollbar + '-corner';\r\n                var _classNameScrollbarCornerResize = _classNameScrollbarCorner + '-resize';\r\n                var _classNameScrollbarCornerResizeB = _classNameScrollbarCornerResize + '-both';\r\n                var _classNameScrollbarCornerResizeH = _classNameScrollbarCornerResize + _strMinusHorizontal;\r\n                var _classNameScrollbarCornerResizeV = _classNameScrollbarCornerResize + _strMinusVertical;\r\n                var _classNameScrollbarHorizontal = _classNameScrollbar + _strMinusHorizontal;\r\n                var _classNameScrollbarVertical = _classNameScrollbar + _strMinusVertical;\r\n                var _classNameDragging = _cassNamesPrefix + 'dragging';\r\n                var _classNameThemeNone = _cassNamesPrefix + 'theme-none';\r\n                var _classNamesDynamicDestroy = [\r\n                    _classNameViewportNativeScrollbarsInvisible,\r\n                    _classNameViewportNativeScrollbarsOverlaid,\r\n                    _classNameScrollbarTrackOff,\r\n                    _classNameScrollbarHandleOff,\r\n                    _classNameScrollbarUnusable,\r\n                    _classNameScrollbarAutoHidden,\r\n                    _classNameScrollbarCornerResize,\r\n                    _classNameScrollbarCornerResizeB,\r\n                    _classNameScrollbarCornerResizeH,\r\n                    _classNameScrollbarCornerResizeV,\r\n                    _classNameDragging].join(_strSpace);\r\n\r\n                //callbacks:\t\r\n                var _callbacksInitQeueue = [];\r\n\r\n                //attrs viewport shall inherit from target\t\r\n                var _viewportAttrsFromTarget = [LEXICON.ti];\r\n\r\n                //options:\t\r\n                var _defaultOptions;\r\n                var _currentOptions;\r\n                var _currentPreparedOptions;\r\n\r\n                //extensions:\t\r\n                var _extensions = {};\r\n                var _extensionsPrivateMethods = 'added removed on contract';\r\n\r\n                //update\t\r\n                var _lastUpdateTime;\r\n                var _swallowedUpdateHints = {};\r\n                var _swallowedUpdateTimeout;\r\n                var _swallowUpdateLag = 42;\r\n                var _updateOnLoadEventName = 'load';\r\n                var _updateOnLoadElms = [];\r\n\r\n                //DOM elements:\t\r\n                var _windowElement;\r\n                var _documentElement;\r\n                var _htmlElement;\r\n                var _bodyElement;\r\n                var _targetElement;                     //the target element of this OverlayScrollbars object\t\r\n                var _hostElement;                       //the host element of this OverlayScrollbars object -> may be the same as targetElement\t\r\n                var _sizeAutoObserverElement;           //observes size auto changes\t\r\n                var _sizeObserverElement;               //observes size and padding changes\t\r\n                var _paddingElement;                    //manages the padding\t\r\n                var _viewportElement;                   //is the viewport of our scrollbar model\t\r\n                var _contentElement;                    //the element which holds the content\t\r\n                var _contentArrangeElement;             //is needed for correct sizing of the content element (only if native scrollbars are overlays)\t\r\n                var _contentGlueElement;                //has always the size of the content element\t\r\n                var _textareaCoverElement;              //only applied if target is a textarea element. Used for correct size calculation and for prevention of uncontrolled scrolling\t\r\n                var _scrollbarCornerElement;\r\n                var _scrollbarHorizontalElement;\r\n                var _scrollbarHorizontalTrackElement;\r\n                var _scrollbarHorizontalHandleElement;\r\n                var _scrollbarVerticalElement;\r\n                var _scrollbarVerticalTrackElement;\r\n                var _scrollbarVerticalHandleElement;\r\n                var _windowElementNative;\r\n                var _documentElementNative;\r\n                var _targetElementNative;\r\n                var _hostElementNative;\r\n                var _sizeAutoObserverElementNative;\r\n                var _sizeObserverElementNative;\r\n                var _paddingElementNative;\r\n                var _viewportElementNative;\r\n                var _contentElementNative;\r\n\r\n                //Cache:\t\r\n                var _hostSizeCache;\r\n                var _contentScrollSizeCache;\r\n                var _arrangeContentSizeCache;\r\n                var _hasOverflowCache;\r\n                var _hideOverflowCache;\r\n                var _widthAutoCache;\r\n                var _heightAutoCache;\r\n                var _cssBoxSizingCache;\r\n                var _cssPaddingCache;\r\n                var _cssBorderCache;\r\n                var _cssMarginCache;\r\n                var _cssDirectionCache;\r\n                var _cssDirectionDetectedCache;\r\n                var _paddingAbsoluteCache;\r\n                var _clipAlwaysCache;\r\n                var _contentGlueSizeCache;\r\n                var _overflowBehaviorCache;\r\n                var _overflowAmountCache;\r\n                var _ignoreOverlayScrollbarHidingCache;\r\n                var _autoUpdateCache;\r\n                var _sizeAutoCapableCache;\r\n                var _contentElementScrollSizeChangeDetectedCache;\r\n                var _hostElementSizeChangeDetectedCache;\r\n                var _scrollbarsVisibilityCache;\r\n                var _scrollbarsAutoHideCache;\r\n                var _scrollbarsClickScrollingCache;\r\n                var _scrollbarsDragScrollingCache;\r\n                var _resizeCache;\r\n                var _normalizeRTLCache;\r\n                var _classNameCache;\r\n                var _oldClassName;\r\n                var _textareaAutoWrappingCache;\r\n                var _textareaInfoCache;\r\n                var _textareaSizeCache;\r\n                var _textareaDynHeightCache;\r\n                var _textareaDynWidthCache;\r\n                var _bodyMinSizeCache;\r\n                var _updateAutoCache = {};\r\n\r\n                //MutationObserver:\t\r\n                var _mutationObserverHost;\r\n                var _mutationObserverContent;\r\n                var _mutationObserverHostCallback;\r\n                var _mutationObserverContentCallback;\r\n                var _mutationObserversConnected;\r\n                var _mutationObserverAttrsTextarea = ['wrap', 'cols', 'rows'];\r\n                var _mutationObserverAttrsHost = [LEXICON.i, LEXICON.c, LEXICON.s, 'open'].concat(_viewportAttrsFromTarget);\r\n\r\n                //events:\t\r\n                var _destroyEvents = [];\r\n\r\n                //textarea:\t\r\n                var _textareaHasFocus;\r\n\r\n                //scrollbars:\t\r\n                var _scrollbarsAutoHideTimeoutId;\r\n                var _scrollbarsAutoHideMoveTimeoutId;\r\n                var _scrollbarsAutoHideDelay;\r\n                var _scrollbarsAutoHideNever;\r\n                var _scrollbarsAutoHideScroll;\r\n                var _scrollbarsAutoHideMove;\r\n                var _scrollbarsAutoHideLeave;\r\n                var _scrollbarsHandleHovered;\r\n                var _scrollbarsHandlesDefineScrollPos;\r\n\r\n                //resize\t\r\n                var _resizeNone;\r\n                var _resizeBoth;\r\n                var _resizeHorizontal;\r\n                var _resizeVertical;\r\n\r\n\r\n                //==== Event Listener ====//\t\r\n\r\n                /**\t\r\n                 * Adds or removes a event listener from the given element. \t\r\n                 * @param element The element to which the event listener shall be applied or removed.\t\r\n                 * @param eventNames The name(s) of the events.\t\r\n                 * @param listener The method which shall be called.\t\r\n                 * @param remove True if the handler shall be removed, false or undefined if the handler shall be added.\t\r\n                 * @param passiveOrOptions The options for the event.\r\n                 */\r\n                function setupResponsiveEventListener(element, eventNames, listener, remove, passiveOrOptions) {\r\n                    var collected = COMPATIBILITY.isA(eventNames) && COMPATIBILITY.isA(listener);\r\n                    var method = remove ? 'removeEventListener' : 'addEventListener';\r\n                    var onOff = remove ? 'off' : 'on';\r\n                    var events = collected ? false : eventNames.split(_strSpace)\r\n                    var i = 0;\r\n\r\n                    var passiveOrOptionsIsObj = FRAMEWORK.isPlainObject(passiveOrOptions);\r\n                    var passive = (_supportPassiveEvents && (passiveOrOptionsIsObj ? (passiveOrOptions._passive) : passiveOrOptions)) || false;\r\n                    var capture = passiveOrOptionsIsObj && (passiveOrOptions._capture || false);\r\n                    var nativeParam = _supportPassiveEvents ? {\r\n                        passive: passive,\r\n                        capture: capture,\r\n                    } : capture;\r\n\r\n                    if (collected) {\r\n                        for (; i < eventNames[LEXICON.l]; i++)\r\n                            setupResponsiveEventListener(element, eventNames[i], listener[i], remove, passiveOrOptions);\r\n                    }\r\n                    else {\r\n                        for (; i < events[LEXICON.l]; i++) {\r\n                            if(_supportPassiveEvents) {\r\n                                element[0][method](events[i], listener, nativeParam);\r\n                            }\r\n                            else {\r\n                                element[onOff](events[i], listener);\r\n                            }     \r\n                        }\r\n                    }\r\n                }\r\n\r\n\r\n                function addDestroyEventListener(element, eventNames, listener, passive) {\r\n                    setupResponsiveEventListener(element, eventNames, listener, false, passive);\r\n                    _destroyEvents.push(COMPATIBILITY.bind(setupResponsiveEventListener, 0, element, eventNames, listener, true, passive));\r\n                }\r\n\r\n                //==== Resize Observer ====//\r\n\r\n                /**\r\n                 * Adds or removes a resize observer from the given element.\r\n                 * @param targetElement The element to which the resize observer shall be added or removed.\r\n                 * @param onElementResizedCallback The callback which is fired every time the resize observer registers a size change or false / undefined if the resizeObserver shall be removed.\r\n                 */\r\n                function setupResizeObserver(targetElement, onElementResizedCallback) {\r\n                    if (targetElement) {\r\n                        var resizeObserver = COMPATIBILITY.rO();\r\n                        var strAnimationStartEvent = 'animationstart mozAnimationStart webkitAnimationStart MSAnimationStart';\r\n                        var strChildNodes = 'childNodes';\r\n                        var constScroll = 3333333;\r\n                        var callback = function () {\r\n                            targetElement[_strScrollTop](constScroll)[_strScrollLeft](_isRTL ? _rtlScrollBehavior.n ? -constScroll : _rtlScrollBehavior.i ? 0 : constScroll : constScroll);\r\n                            onElementResizedCallback();\r\n                        };\r\n                        //add resize observer:\r\n                        if (onElementResizedCallback) {\r\n                            if (_supportResizeObserver) {\r\n                                var element = targetElement.addClass('observed').append(generateDiv(_classNameResizeObserverElement)).contents()[0];\r\n                                var observer = element[_strResizeObserverProperty] = new resizeObserver(callback);\r\n                                observer.observe(element);\r\n                            }\r\n                            else {\r\n                                if (_msieVersion > 9 || !_autoUpdateRecommended) {\r\n                                    targetElement.prepend(\r\n                                        generateDiv(_classNameResizeObserverElement,\r\n                                            generateDiv({ c: _classNameResizeObserverItemElement, dir: 'ltr' },\r\n                                                generateDiv(_classNameResizeObserverItemElement,\r\n                                                    generateDiv(_classNameResizeObserverItemFinalElement)\r\n                                                ) +\r\n                                                generateDiv(_classNameResizeObserverItemElement,\r\n                                                    generateDiv({ c: _classNameResizeObserverItemFinalElement, style: 'width: 200%; height: 200%' })\r\n                                                )\r\n                                            )\r\n                                        )\r\n                                    );\r\n\r\n                                    var observerElement = targetElement[0][strChildNodes][0][strChildNodes][0];\r\n                                    var shrinkElement = FRAMEWORK(observerElement[strChildNodes][1]);\r\n                                    var expandElement = FRAMEWORK(observerElement[strChildNodes][0]);\r\n                                    var expandElementChild = FRAMEWORK(expandElement[0][strChildNodes][0]);\r\n                                    var widthCache = observerElement[LEXICON.oW];\r\n                                    var heightCache = observerElement[LEXICON.oH];\r\n                                    var isDirty;\r\n                                    var rAFId;\r\n                                    var currWidth;\r\n                                    var currHeight;\r\n                                    var factor = 2;\r\n                                    var nativeScrollbarSize = globals.nativeScrollbarSize; //care don't make changes to this object!!!\r\n                                    var reset = function () {\r\n                                        /*\r\n                                         var sizeResetWidth = observerElement[LEXICON.oW] + nativeScrollbarSize.x * factor + nativeScrollbarSize.y * factor + _overlayScrollbarDummySize.x + _overlayScrollbarDummySize.y;\r\n                                         var sizeResetHeight = observerElement[LEXICON.oH] + nativeScrollbarSize.x * factor + nativeScrollbarSize.y * factor + _overlayScrollbarDummySize.x + _overlayScrollbarDummySize.y;\r\n                                         var expandChildCSS = {};\r\n                                         expandChildCSS[_strWidth] = sizeResetWidth;\r\n                                         expandChildCSS[_strHeight] = sizeResetHeight;\r\n                                         expandElementChild.css(expandChildCSS);\r\n\r\n\r\n                                         expandElement[_strScrollLeft](sizeResetWidth)[_strScrollTop](sizeResetHeight);\r\n                                         shrinkElement[_strScrollLeft](sizeResetWidth)[_strScrollTop](sizeResetHeight);\r\n                                         */\r\n                                        expandElement[_strScrollLeft](constScroll)[_strScrollTop](constScroll);\r\n                                        shrinkElement[_strScrollLeft](constScroll)[_strScrollTop](constScroll);\r\n                                    };\r\n                                    var onResized = function () {\r\n                                        rAFId = 0;\r\n                                        if (!isDirty)\r\n                                            return;\r\n\r\n                                        widthCache = currWidth;\r\n                                        heightCache = currHeight;\r\n                                        callback();\r\n                                    };\r\n                                    var onScroll = function (event) {\r\n                                        currWidth = observerElement[LEXICON.oW];\r\n                                        currHeight = observerElement[LEXICON.oH];\r\n                                        isDirty = currWidth != widthCache || currHeight != heightCache;\r\n\r\n                                        if (event && isDirty && !rAFId) {\r\n                                            COMPATIBILITY.cAF()(rAFId);\r\n                                            rAFId = COMPATIBILITY.rAF()(onResized);\r\n                                        }\r\n                                        else if (!event)\r\n                                            onResized();\r\n\r\n                                        reset();\r\n                                        if (event) {\r\n                                            COMPATIBILITY.prvD(event);\r\n                                            COMPATIBILITY.stpP(event);\r\n                                        }\r\n                                        return false;\r\n                                    };\r\n                                    var expandChildCSS = {};\r\n                                    var observerElementCSS = {};\r\n\r\n                                    setTopRightBottomLeft(observerElementCSS, _strEmpty, [\r\n                                        -((nativeScrollbarSize.y + 1) * factor),\r\n                                        nativeScrollbarSize.x * -factor,\r\n                                        nativeScrollbarSize.y * -factor,\r\n                                        -((nativeScrollbarSize.x + 1) * factor)\r\n                                    ]);\r\n\r\n                                    FRAMEWORK(observerElement).css(observerElementCSS);\r\n                                    expandElement.on(_strScroll, onScroll);\r\n                                    shrinkElement.on(_strScroll, onScroll);\r\n                                    targetElement.on(strAnimationStartEvent, function () {\r\n                                        onScroll(false);\r\n                                    });\r\n                                    //lets assume that the divs will never be that large and a constant value is enough\r\n                                    expandChildCSS[_strWidth] = constScroll;\r\n                                    expandChildCSS[_strHeight] = constScroll;\r\n                                    expandElementChild.css(expandChildCSS);\r\n\r\n                                    reset();\r\n                                }\r\n                                else {\r\n                                    var attachEvent = _documentElementNative.attachEvent;\r\n                                    var isIE = _msieVersion !== undefined;\r\n                                    if (attachEvent) {\r\n                                        targetElement.prepend(generateDiv(_classNameResizeObserverElement));\r\n                                        findFirst(targetElement, _strDot + _classNameResizeObserverElement)[0].attachEvent('onresize', callback);\r\n                                    }\r\n                                    else {\r\n                                        var obj = _documentElementNative.createElement(TYPES.o);\r\n                                        obj.setAttribute(LEXICON.ti, '-1');\r\n                                        obj.setAttribute(LEXICON.c, _classNameResizeObserverElement);\r\n                                        obj.onload = function () {\r\n                                            var wnd = this.contentDocument.defaultView;\r\n                                            wnd.addEventListener('resize', callback);\r\n                                            wnd.document.documentElement.style.display = 'none';\r\n                                        };\r\n                                        obj.type = 'text/html';\r\n                                        if (isIE)\r\n                                            targetElement.prepend(obj);\r\n                                        obj.data = 'about:blank';\r\n                                        if (!isIE)\r\n                                            targetElement.prepend(obj);\r\n                                        targetElement.on(strAnimationStartEvent, callback);\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            if (targetElement[0] === _sizeObserverElementNative) {\r\n                                var directionChanged = function () {\r\n                                    var dir = _hostElement.css('direction');\r\n                                    var css = {};\r\n                                    var scrollLeftValue = 0;\r\n                                    var result = false;\r\n                                    if (dir !== _cssDirectionDetectedCache) {\r\n                                        if (dir === 'ltr') {\r\n                                            css[_strLeft] = 0;\r\n                                            css[_strRight] = _strAuto;\r\n                                            scrollLeftValue = constScroll;\r\n                                        }\r\n                                        else {\r\n                                            css[_strLeft] = _strAuto;\r\n                                            css[_strRight] = 0;\r\n                                            scrollLeftValue = _rtlScrollBehavior.n ? -constScroll : _rtlScrollBehavior.i ? 0 : constScroll;\r\n                                        }\r\n                                        //execution order is important for IE!!!\r\n                                        _sizeObserverElement.children().eq(0).css(css);\r\n                                        _sizeObserverElement[_strScrollLeft](scrollLeftValue)[_strScrollTop](constScroll);\r\n                                        _cssDirectionDetectedCache = dir;\r\n                                        result = true;\r\n                                    }\r\n                                    return result;\r\n                                };\r\n                                directionChanged();\r\n                                addDestroyEventListener(targetElement, _strScroll, function (event) {\r\n                                    if (directionChanged())\r\n                                        update();\r\n                                    COMPATIBILITY.prvD(event);\r\n                                    COMPATIBILITY.stpP(event);\r\n                                    return false;\r\n                                });\r\n                            }\r\n                        }\r\n                        //remove resize observer:\r\n                        else {\r\n                            if (_supportResizeObserver) {\r\n                                var element = targetElement.contents()[0];\r\n                                var resizeObserverObj = element[_strResizeObserverProperty];\r\n                                if (resizeObserverObj) {\r\n                                    resizeObserverObj.disconnect();\r\n                                    delete element[_strResizeObserverProperty];\r\n                                }\r\n                            }\r\n                            else {\r\n                                remove(targetElement.children(_strDot + _classNameResizeObserverElement).eq(0));\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Freezes or unfreezes the given resize observer.\r\n                 * @param targetElement The element to which the target resize observer is applied.\r\n                 * @param freeze True if the resize observer shall be frozen, false otherwise.\r\n                 \r\n                function freezeResizeObserver(targetElement, freeze) {\r\n                    if (targetElement !== undefined) {\r\n                        if(freeze) {\r\n                            if (_supportResizeObserver) {\r\n                                var element = targetElement.contents()[0];\r\n                                element[_strResizeObserverProperty].unobserve(element);\r\n                            }\r\n                            else {\r\n                                targetElement = targetElement.children(_strDot + _classNameResizeObserverElement).eq(0);\r\n                                var w = targetElement.css(_strWidth);\r\n                                var h = targetElement.css(_strHeight);\r\n                                var css = {};\r\n                                css[_strWidth] = w;\r\n                                css[_strHeight] = h;\r\n                                targetElement.css(css);\r\n                            }\r\n                        }\r\n                        else {\r\n                            if (_supportResizeObserver) {\r\n                                var element = targetElement.contents()[0];\r\n                                element[_strResizeObserverProperty].observe(element);\r\n                            }\r\n                            else {\r\n                                var css = { };\r\n                                css[_strHeight] = _strEmpty;\r\n                                css[_strWidth] = _strEmpty;\r\n                                targetElement.children(_strDot + _classNameResizeObserverElement).eq(0).css(css);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                */\r\n\r\n\r\n                //==== Mutation Observers ====//\r\n\r\n                /**\r\n                 * Creates MutationObservers for the host and content Element if they are supported.\r\n                 */\r\n                function createMutationObservers() {\r\n                    if (_supportMutationObserver) {\r\n                        var mutationObserverContentLag = 11;\r\n                        var mutationObserver = COMPATIBILITY.mO();\r\n                        var contentLastUpdate = COMPATIBILITY.now();\r\n                        var mutationTarget;\r\n                        var mutationAttrName;\r\n                        var mutationIsClass;\r\n                        var oldMutationVal;\r\n                        var newClassVal;\r\n                        var hostClassNameRegex;\r\n                        var contentTimeout;\r\n                        var now;\r\n                        var sizeAuto;\r\n                        var action;\r\n\r\n                        _mutationObserverHostCallback = function (mutations) {\r\n\r\n                            var doUpdate = false;\r\n                            var doUpdateForce = false;\r\n                            var mutation;\r\n                            var mutatedAttrs = [];\r\n\r\n                            if (_initialized && !_sleeping) {\r\n                                each(mutations, function () {\r\n                                    mutation = this;\r\n                                    mutationTarget = mutation.target;\r\n                                    mutationAttrName = mutation.attributeName;\r\n                                    mutationIsClass = mutationAttrName === LEXICON.c;\r\n                                    oldMutationVal = mutation.oldValue;\r\n                                    newClassVal = mutationTarget.className;\r\n\r\n                                    if (_domExists && mutationIsClass && !doUpdateForce) {\r\n                                        // if old class value contains _classNameHostElementForeign and new class value doesn't\r\n                                        if (oldMutationVal.indexOf(_classNameHostElementForeign) > -1 && newClassVal.indexOf(_classNameHostElementForeign) < 0) {\r\n                                            hostClassNameRegex = createHostClassNameRegExp(true);\r\n                                            _hostElementNative.className = newClassVal.split(_strSpace).concat(oldMutationVal.split(_strSpace).filter(function (name) {\r\n                                                return name.match(hostClassNameRegex);\r\n                                            })).join(_strSpace);\r\n                                            doUpdate = doUpdateForce = true;\r\n                                        }\r\n                                    }\r\n\r\n                                    if (!doUpdate) {\r\n                                        doUpdate = mutationIsClass\r\n                                            ? hostClassNamesChanged(oldMutationVal, newClassVal)\r\n                                            : mutationAttrName === LEXICON.s\r\n                                                ? oldMutationVal !== mutationTarget[LEXICON.s].cssText\r\n                                                : true;\r\n                                    }\r\n\r\n                                    mutatedAttrs.push(mutationAttrName);\r\n                                });\r\n\r\n                                updateViewportAttrsFromTarget(mutatedAttrs);\r\n\r\n                                if (doUpdate)\r\n                                    _base.update(doUpdateForce || _strAuto);\r\n                            }\r\n                            return doUpdate;\r\n                        };\r\n                        _mutationObserverContentCallback = function (mutations) {\r\n                            var doUpdate = false;\r\n                            var mutation;\r\n\r\n                            if (_initialized && !_sleeping) {\r\n                                each(mutations, function () {\r\n                                    mutation = this;\r\n                                    doUpdate = isUnknownMutation(mutation);\r\n                                    return !doUpdate;\r\n                                });\r\n\r\n                                if (doUpdate) {\r\n                                    now = COMPATIBILITY.now();\r\n                                    sizeAuto = (_heightAutoCache || _widthAutoCache);\r\n                                    action = function () {\r\n                                        if (!_destroyed) {\r\n                                            contentLastUpdate = now;\r\n\r\n                                            //if cols, rows or wrap attr was changed\r\n                                            if (_isTextarea)\r\n                                                textareaUpdate();\r\n\r\n                                            if (sizeAuto)\r\n                                                update();\r\n                                            else\r\n                                                _base.update(_strAuto);\r\n                                        }\r\n                                    };\r\n                                    clearTimeout(contentTimeout);\r\n                                    if (mutationObserverContentLag <= 0 || now - contentLastUpdate > mutationObserverContentLag || !sizeAuto)\r\n                                        action();\r\n                                    else\r\n                                        contentTimeout = setTimeout(action, mutationObserverContentLag);\r\n                                }\r\n                            }\r\n                            return doUpdate;\r\n                        }\r\n\r\n                        _mutationObserverHost = new mutationObserver(_mutationObserverHostCallback);\r\n                        _mutationObserverContent = new mutationObserver(_mutationObserverContentCallback);\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Connects the MutationObservers if they are supported.\r\n                 */\r\n                function connectMutationObservers() {\r\n                    if (_supportMutationObserver && !_mutationObserversConnected) {\r\n                        _mutationObserverHost.observe(_hostElementNative, {\r\n                            attributes: true,\r\n                            attributeOldValue: true,\r\n                            attributeFilter: _mutationObserverAttrsHost\r\n                        });\r\n\r\n                        _mutationObserverContent.observe(_isTextarea ? _targetElementNative : _contentElementNative, {\r\n                            attributes: true,\r\n                            attributeOldValue: true,\r\n                            subtree: !_isTextarea,\r\n                            childList: !_isTextarea,\r\n                            characterData: !_isTextarea,\r\n                            attributeFilter: _isTextarea ? _mutationObserverAttrsTextarea : _mutationObserverAttrsHost\r\n                        });\r\n\r\n                        _mutationObserversConnected = true;\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Disconnects the MutationObservers if they are supported.\r\n                 */\r\n                function disconnectMutationObservers() {\r\n                    if (_supportMutationObserver && _mutationObserversConnected) {\r\n                        _mutationObserverHost.disconnect();\r\n                        _mutationObserverContent.disconnect();\r\n\r\n                        _mutationObserversConnected = false;\r\n                    }\r\n                }\r\n\r\n\r\n                //==== Events of elements ====//\r\n\r\n                /**\r\n                 * This method gets called every time the host element gets resized. IMPORTANT: Padding changes are detected too!!\r\n                 * It refreshes the hostResizedEventArgs and the hostSizeResizeCache.\r\n                 * If there are any size changes, the update method gets called.\r\n                 */\r\n                function hostOnResized() {\r\n                    if (!_sleeping) {\r\n                        var changed;\r\n                        var hostSize = {\r\n                            w: _sizeObserverElementNative[LEXICON.sW],\r\n                            h: _sizeObserverElementNative[LEXICON.sH]\r\n                        };\r\n\r\n                        changed = checkCache(hostSize, _hostElementSizeChangeDetectedCache);\r\n                        _hostElementSizeChangeDetectedCache = hostSize;\r\n                        if (changed)\r\n                            update({ _hostSizeChanged: true });\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * The mouse enter event of the host element. This event is only needed for the autoHide feature.\r\n                 */\r\n                function hostOnMouseEnter() {\r\n                    if (_scrollbarsAutoHideLeave)\r\n                        refreshScrollbarsAutoHide(true);\r\n                }\r\n\r\n                /**\r\n                 * The mouse leave event of the host element. This event is only needed for the autoHide feature.\r\n                 */\r\n                function hostOnMouseLeave() {\r\n                    if (_scrollbarsAutoHideLeave && !_bodyElement.hasClass(_classNameDragging))\r\n                        refreshScrollbarsAutoHide(false);\r\n                }\r\n\r\n                /**\r\n                 * The mouse move event of the host element. This event is only needed for the autoHide \"move\" feature.\r\n                 */\r\n                function hostOnMouseMove() {\r\n                    if (_scrollbarsAutoHideMove) {\r\n                        refreshScrollbarsAutoHide(true);\r\n                        clearTimeout(_scrollbarsAutoHideMoveTimeoutId);\r\n                        _scrollbarsAutoHideMoveTimeoutId = setTimeout(function () {\r\n                            if (_scrollbarsAutoHideMove && !_destroyed)\r\n                                refreshScrollbarsAutoHide(false);\r\n                        }, 100);\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Prevents text from deselection if attached to the document element on the mousedown event of a DOM element.\r\n                 * @param event The select start event.\r\n                 */\r\n                function documentOnSelectStart(event) {\r\n                    COMPATIBILITY.prvD(event);\r\n                    return false;\r\n                }\r\n\r\n                /**\t\r\n                 * A callback which will be called after a element has loaded.\t\r\n                 */\r\n                function updateOnLoadCallback(event) {\r\n                    var elm = FRAMEWORK(event.target);\r\n\r\n                    eachUpdateOnLoad(function (i, updateOnLoadSelector) {\r\n                        if (elm.is(updateOnLoadSelector)) {\r\n                            update({ _contentSizeChanged: true });\r\n                        }\r\n                    });\r\n                }\r\n\r\n                /**\r\n                * Adds or removes mouse & touch events of the host element. (for handling auto-hiding of the scrollbars)\r\n                * @param destroy Indicates whether the events shall be added or removed.\r\n                */\r\n                function setupHostMouseTouchEvents(destroy) {\r\n                    if (!destroy)\r\n                        setupHostMouseTouchEvents(true);\r\n\r\n                    setupResponsiveEventListener(_hostElement,\r\n                        _strMouseTouchMoveEvent.split(_strSpace)[0],\r\n                        hostOnMouseMove,\r\n                        (!_scrollbarsAutoHideMove || destroy), true);\r\n                    setupResponsiveEventListener(_hostElement,\r\n                        [_strMouseEnter, _strMouseLeave],\r\n                        [hostOnMouseEnter, hostOnMouseLeave],\r\n                        (!_scrollbarsAutoHideLeave || destroy), true);\r\n\r\n                    //if the plugin is initialized and the mouse is over the host element, make the scrollbars visible\r\n                    if (!_initialized && !destroy)\r\n                        _hostElement.one('mouseover', hostOnMouseEnter);\r\n                }\r\n\r\n\r\n                //==== Update Detection ====//\r\n\r\n                /**\r\n                 * Measures the min width and min height of the body element and refreshes the related cache.\r\n                 * @returns {boolean} True if the min width or min height has changed, false otherwise.\r\n                 */\r\n                function bodyMinSizeChanged() {\r\n                    var bodyMinSize = {};\r\n                    if (_isBody && _contentArrangeElement) {\r\n                        bodyMinSize.w = parseToZeroOrNumber(_contentArrangeElement.css(_strMinMinus + _strWidth));\r\n                        bodyMinSize.h = parseToZeroOrNumber(_contentArrangeElement.css(_strMinMinus + _strHeight));\r\n                        bodyMinSize.c = checkCache(bodyMinSize, _bodyMinSizeCache);\r\n                        bodyMinSize.f = true; //flag for \"measured at least once\"\r\n                    }\r\n                    _bodyMinSizeCache = bodyMinSize;\r\n                    return !!bodyMinSize.c;\r\n                }\r\n\r\n                /**\r\n                 * Returns true if the class names really changed (new class without plugin host prefix)\r\n                 * @param oldClassNames The old ClassName string or array.\r\n                 * @param newClassNames The new ClassName string or array.\r\n                 * @returns {boolean} True if the class names has really changed, false otherwise.\r\n                 */\r\n                function hostClassNamesChanged(oldClassNames, newClassNames) {\r\n                    var currClasses = typeof newClassNames == TYPES.s ? newClassNames.split(_strSpace) : [];\r\n                    var oldClasses = typeof oldClassNames == TYPES.s ? oldClassNames.split(_strSpace) : [];\r\n                    var diff = getArrayDifferences(oldClasses, currClasses);\r\n\r\n                    // remove none theme from diff list to prevent update\r\n                    var idx = inArray(_classNameThemeNone, diff);\r\n                    var i;\r\n                    var regex;\r\n\r\n                    if (idx > -1)\r\n                        diff.splice(idx, 1);\r\n\r\n                    if (diff[LEXICON.l] > 0) {\r\n                        regex = createHostClassNameRegExp(true, true);\r\n                        for (i = 0; i < diff.length; i++) {\r\n                            if (!diff[i].match(regex)) {\r\n                                return true;\r\n                            }\r\n                        }\r\n                    }\r\n                    return false;\r\n                }\r\n\r\n                /**\r\n                 * Returns true if the given mutation is not from a from the plugin generated element. If the target element is a textarea the mutation is always unknown.\r\n                 * @param mutation The mutation which shall be checked.\r\n                 * @returns {boolean} True if the mutation is from a unknown element, false otherwise.\r\n                 */\r\n                function isUnknownMutation(mutation) {\r\n                    var attributeName = mutation.attributeName;\r\n                    var mutationTarget = mutation.target;\r\n                    var mutationType = mutation.type;\r\n                    var strClosest = 'closest';\r\n\r\n                    if (mutationTarget === _contentElementNative)\r\n                        return attributeName === null;\r\n                    if (mutationType === 'attributes' && (attributeName === LEXICON.c || attributeName === LEXICON.s) && !_isTextarea) {\r\n                        //ignore className changes by the plugin\t\r\n                        if (attributeName === LEXICON.c && FRAMEWORK(mutationTarget).hasClass(_classNameHostElement))\r\n                            return hostClassNamesChanged(mutation.oldValue, mutationTarget.className);\r\n\r\n                        //only do it of browser support it natively\t\r\n                        if (typeof mutationTarget[strClosest] != TYPES.f)\r\n                            return true;\r\n                        if (mutationTarget[strClosest](_strDot + _classNameResizeObserverElement) !== null ||\r\n                            mutationTarget[strClosest](_strDot + _classNameScrollbar) !== null ||\r\n                            mutationTarget[strClosest](_strDot + _classNameScrollbarCorner) !== null)\r\n                            return false;\r\n                    }\r\n                    return true;\r\n                }\r\n\r\n                /**\r\n                 * Returns true if the content size was changed since the last time this method was called.\r\n                 * @returns {boolean} True if the content size was changed, false otherwise.\r\n                 */\r\n                function updateAutoContentSizeChanged() {\r\n                    if (_sleeping)\r\n                        return false;\r\n\r\n                    var contentMeasureElement = getContentMeasureElement();\r\n                    var textareaValueLength = _isTextarea && _widthAutoCache && !_textareaAutoWrappingCache ? _targetElement.val().length : 0;\r\n                    var setCSS = !_mutationObserversConnected && _widthAutoCache && !_isTextarea;\r\n                    var css = {};\r\n                    var float;\r\n                    var bodyMinSizeC;\r\n                    var changed;\r\n                    var contentElementScrollSize;\r\n\r\n                    if (setCSS) {\r\n                        float = _contentElement.css(_strFloat);\r\n                        css[_strFloat] = _isRTL ? _strRight : _strLeft;\r\n                        css[_strWidth] = _strAuto;\r\n                        _contentElement.css(css);\r\n                    }\r\n                    contentElementScrollSize = {\r\n                        w: contentMeasureElement[LEXICON.sW] + textareaValueLength,\r\n                        h: contentMeasureElement[LEXICON.sH] + textareaValueLength\r\n                    };\r\n                    if (setCSS) {\r\n                        css[_strFloat] = float;\r\n                        css[_strWidth] = _strHundredPercent;\r\n                        _contentElement.css(css);\r\n                    }\r\n\r\n                    bodyMinSizeC = bodyMinSizeChanged();\r\n                    changed = checkCache(contentElementScrollSize, _contentElementScrollSizeChangeDetectedCache);\r\n\r\n                    _contentElementScrollSizeChangeDetectedCache = contentElementScrollSize;\r\n\r\n                    return changed || bodyMinSizeC;\r\n                }\r\n\r\n                /**\r\n                 * Returns true when a attribute which the MutationObserver would observe has changed.  \r\n                 * @returns {boolean} True if one of the attributes which a MutationObserver would observe has changed, false or undefined otherwise.\r\n                 */\r\n                function meaningfulAttrsChanged() {\r\n                    if (_sleeping || _mutationObserversConnected)\r\n                        return;\r\n\r\n                    var elem;\r\n                    var curr;\r\n                    var cache;\r\n                    var changedAttrs = [];\r\n                    var checks = [\r\n                        {\r\n                            _elem: _hostElement,\r\n                            _attrs: _mutationObserverAttrsHost.concat(':visible')\r\n                        },\r\n                        {\r\n                            _elem: _isTextarea ? _targetElement : undefined,\r\n                            _attrs: _mutationObserverAttrsTextarea\r\n                        }\r\n                    ];\r\n\r\n                    each(checks, function (index, check) {\r\n                        elem = check._elem;\r\n                        if (elem) {\r\n                            each(check._attrs, function (index, attr) {\r\n                                curr = attr.charAt(0) === ':' ? elem.is(attr) : elem.attr(attr);\r\n                                cache = _updateAutoCache[attr];\r\n\r\n                                if (checkCache(curr, cache)) {\r\n                                    changedAttrs.push(attr);\r\n                                }\r\n\r\n                                _updateAutoCache[attr] = curr;\r\n                            });\r\n                        }\r\n                    });\r\n\r\n                    updateViewportAttrsFromTarget(changedAttrs);\r\n\r\n                    return changedAttrs[LEXICON.l] > 0;\r\n                }\r\n\r\n                /**\r\n                 * Checks is a CSS Property of a child element is affecting the scroll size of the content.\r\n                 * @param propertyName The CSS property name.\r\n                 * @returns {boolean} True if the property is affecting the content scroll size, false otherwise.\r\n                 */\r\n                function isSizeAffectingCSSProperty(propertyName) {\r\n                    if (!_initialized)\r\n                        return true;\r\n                    var flexGrow = 'flex-grow';\r\n                    var flexShrink = 'flex-shrink';\r\n                    var flexBasis = 'flex-basis';\r\n                    var affectingPropsX = [\r\n                        _strWidth,\r\n                        _strMinMinus + _strWidth,\r\n                        _strMaxMinus + _strWidth,\r\n                        _strMarginMinus + _strLeft,\r\n                        _strMarginMinus + _strRight,\r\n                        _strLeft,\r\n                        _strRight,\r\n                        'font-weight',\r\n                        'word-spacing',\r\n                        flexGrow,\r\n                        flexShrink,\r\n                        flexBasis\r\n                    ];\r\n                    var affectingPropsXContentBox = [\r\n                        _strPaddingMinus + _strLeft,\r\n                        _strPaddingMinus + _strRight,\r\n                        _strBorderMinus + _strLeft + _strWidth,\r\n                        _strBorderMinus + _strRight + _strWidth\r\n                    ];\r\n                    var affectingPropsY = [\r\n                        _strHeight,\r\n                        _strMinMinus + _strHeight,\r\n                        _strMaxMinus + _strHeight,\r\n                        _strMarginMinus + _strTop,\r\n                        _strMarginMinus + _strBottom,\r\n                        _strTop,\r\n                        _strBottom,\r\n                        'line-height',\r\n                        flexGrow,\r\n                        flexShrink,\r\n                        flexBasis\r\n                    ];\r\n                    var affectingPropsYContentBox = [\r\n                        _strPaddingMinus + _strTop,\r\n                        _strPaddingMinus + _strBottom,\r\n                        _strBorderMinus + _strTop + _strWidth,\r\n                        _strBorderMinus + _strBottom + _strWidth\r\n                    ];\r\n                    var _strS = 's';\r\n                    var _strVS = 'v-s';\r\n                    var checkX = _overflowBehaviorCache.x === _strS || _overflowBehaviorCache.x === _strVS;\r\n                    var checkY = _overflowBehaviorCache.y === _strS || _overflowBehaviorCache.y === _strVS;\r\n                    var sizeIsAffected = false;\r\n                    var checkPropertyName = function (arr, name) {\r\n                        for (var i = 0; i < arr[LEXICON.l]; i++) {\r\n                            if (arr[i] === name)\r\n                                return true;\r\n                        }\r\n                        return false;\r\n                    };\r\n\r\n                    if (checkY) {\r\n                        sizeIsAffected = checkPropertyName(affectingPropsY, propertyName);\r\n                        if (!sizeIsAffected && !_isBorderBox)\r\n                            sizeIsAffected = checkPropertyName(affectingPropsYContentBox, propertyName);\r\n                    }\r\n                    if (checkX && !sizeIsAffected) {\r\n                        sizeIsAffected = checkPropertyName(affectingPropsX, propertyName);\r\n                        if (!sizeIsAffected && !_isBorderBox)\r\n                            sizeIsAffected = checkPropertyName(affectingPropsXContentBox, propertyName);\r\n                    }\r\n                    return sizeIsAffected;\r\n                }\r\n\r\n\r\n                //==== Update ====//\r\n\r\n                /**\r\n                 * Sets the attribute values of the viewport element to the values from the target element.\r\n                 * The value of a attribute is only set if the attribute is whitelisted.\r\n                 * @attrs attrs The array of attributes which shall be set or undefined if all whitelisted shall be set.\r\n                 */\r\n                function updateViewportAttrsFromTarget(attrs) {\r\n                    attrs = attrs || _viewportAttrsFromTarget;\r\n                    each(attrs, function (index, attr) {\r\n                        if (COMPATIBILITY.inA(attr, _viewportAttrsFromTarget) > -1) {\r\n                            var targetAttr = _targetElement.attr(attr);\r\n                            if (type(targetAttr) == TYPES.s) {\r\n                                _viewportElement.attr(attr, targetAttr);\r\n                            }\r\n                            else {\r\n                                _viewportElement.removeAttr(attr);\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n\r\n                /**\r\n                 * Updates the variables and size of the textarea element, and manages the scroll on new line or new character.\r\n                 */\r\n                function textareaUpdate() {\r\n                    if (!_sleeping) {\r\n                        var wrapAttrOff = !_textareaAutoWrappingCache;\r\n                        var minWidth = _viewportSize.w;\r\n                        var minHeight = _viewportSize.h;\r\n                        var css = {};\r\n                        var doMeasure = _widthAutoCache || wrapAttrOff;\r\n                        var origWidth;\r\n                        var width;\r\n                        var origHeight;\r\n                        var height;\r\n\r\n                        //reset min size\r\n                        css[_strMinMinus + _strWidth] = _strEmpty;\r\n                        css[_strMinMinus + _strHeight] = _strEmpty;\r\n\r\n                        //set width auto\r\n                        css[_strWidth] = _strAuto;\r\n                        _targetElement.css(css);\r\n\r\n                        //measure width\r\n                        origWidth = _targetElementNative[LEXICON.oW];\r\n                        width = doMeasure ? MATH.max(origWidth, _targetElementNative[LEXICON.sW] - 1) : 1;\r\n                        /*width += (_widthAutoCache ? _marginX + (!_isBorderBox ? wrapAttrOff ? 0 : _paddingX + _borderX : 0) : 0);*/\r\n\r\n                        //set measured width\r\n                        css[_strWidth] = _widthAutoCache ? _strAuto /*width*/ : _strHundredPercent;\r\n                        css[_strMinMinus + _strWidth] = _strHundredPercent;\r\n\r\n                        //set height auto\r\n                        css[_strHeight] = _strAuto;\r\n                        _targetElement.css(css);\r\n\r\n                        //measure height\r\n                        origHeight = _targetElementNative[LEXICON.oH];\r\n                        height = MATH.max(origHeight, _targetElementNative[LEXICON.sH] - 1);\r\n\r\n                        //append correct size values\r\n                        css[_strWidth] = width;\r\n                        css[_strHeight] = height;\r\n                        _textareaCoverElement.css(css);\r\n\r\n                        //apply min width / min height to prevent textarea collapsing\r\n                        css[_strMinMinus + _strWidth] = minWidth /*+ (!_isBorderBox && _widthAutoCache ? _paddingX + _borderX : 0)*/;\r\n                        css[_strMinMinus + _strHeight] = minHeight /*+ (!_isBorderBox && _heightAutoCache ? _paddingY + _borderY : 0)*/;\r\n                        _targetElement.css(css);\r\n\r\n                        return {\r\n                            _originalWidth: origWidth,\r\n                            _originalHeight: origHeight,\r\n                            _dynamicWidth: width,\r\n                            _dynamicHeight: height\r\n                        };\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Updates the plugin and DOM to the current options.\r\n                 * This method should only be called if a update is 100% required.\r\n                 * @param updateHints A objects which contains hints for this update:\r\n                 * {\r\n                 *   _hostSizeChanged : boolean,\r\n                 *   _contentSizeChanged : boolean,\r\n                 *   _force : boolean,                             == preventSwallowing\r\n                 *   _changedOptions : { },                        == preventSwallowing && preventSleep\r\n                *  }\r\n                 */\r\n                function update(updateHints) {\r\n                    clearTimeout(_swallowedUpdateTimeout);\r\n                    updateHints = updateHints || {};\r\n                    _swallowedUpdateHints._hostSizeChanged |= updateHints._hostSizeChanged;\r\n                    _swallowedUpdateHints._contentSizeChanged |= updateHints._contentSizeChanged;\r\n                    _swallowedUpdateHints._force |= updateHints._force;\r\n\r\n                    var now = COMPATIBILITY.now();\r\n                    var hostSizeChanged = !!_swallowedUpdateHints._hostSizeChanged;\r\n                    var contentSizeChanged = !!_swallowedUpdateHints._contentSizeChanged;\r\n                    var force = !!_swallowedUpdateHints._force;\r\n                    var changedOptions = updateHints._changedOptions;\r\n                    var swallow = _swallowUpdateLag > 0 && _initialized && !_destroyed && !force && !changedOptions && (now - _lastUpdateTime) < _swallowUpdateLag && (!_heightAutoCache && !_widthAutoCache);\r\n                    var displayIsHidden;\r\n\r\n                    if (swallow)\r\n                        _swallowedUpdateTimeout = setTimeout(update, _swallowUpdateLag);\r\n\r\n                    //abort update due to:\r\n                    //destroyed\r\n                    //swallowing\r\n                    //sleeping\r\n                    //host is hidden or has false display\r\n                    if (_destroyed || swallow || (_sleeping && !changedOptions) || (_initialized && !force && (displayIsHidden = _hostElement.is(':hidden'))) || _hostElement.css('display') === 'inline')\r\n                        return;\r\n\r\n                    _lastUpdateTime = now;\r\n                    _swallowedUpdateHints = {};\r\n\r\n                    //if scrollbar styling is possible and native scrollbars aren't overlaid the scrollbar styling will be applied which hides the native scrollbars completely.\r\n                    if (_nativeScrollbarStyling && !(_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y)) {\r\n                        //native scrollbars are hidden, so change the values to zero\r\n                        _nativeScrollbarSize.x = 0;\r\n                        _nativeScrollbarSize.y = 0;\r\n                    }\r\n                    else {\r\n                        //refresh native scrollbar size (in case of zoom)\r\n                        _nativeScrollbarSize = extendDeep({}, globals.nativeScrollbarSize);\r\n                    }\r\n\r\n                    // Scrollbar padding is needed for firefox, because firefox hides scrollbar automatically if the size of the div is too small.\r\n                    // The calculation: [scrollbar size +3 *3]\r\n                    // (+3 because of possible decoration e.g. borders, margins etc., but only if native scrollbar is NOT a overlaid scrollbar)\r\n                    // (*3 because (1)increase / (2)decrease -button and (3)resize handle)\r\n                    _nativeScrollbarMinSize = {\r\n                        x: (_nativeScrollbarSize.x + (_nativeScrollbarIsOverlaid.x ? 0 : 3)) * 3,\r\n                        y: (_nativeScrollbarSize.y + (_nativeScrollbarIsOverlaid.y ? 0 : 3)) * 3\r\n                    };\r\n\r\n                    changedOptions = changedOptions || {};\r\n                    //freezeResizeObserver(_sizeObserverElement, true);\r\n                    //freezeResizeObserver(_sizeAutoObserverElement, true);\r\n\r\n                    var checkCacheAutoForce = function () {\r\n                        return checkCache.apply(this, [].slice.call(arguments).concat([force]));\r\n                    };\r\n\r\n                    //save current scroll offset\r\n                    var currScroll = {\r\n                        x: _viewportElement[_strScrollLeft](),\r\n                        y: _viewportElement[_strScrollTop]()\r\n                    };\r\n\r\n                    var currentPreparedOptionsScrollbars = _currentPreparedOptions.scrollbars;\r\n                    var currentPreparedOptionsTextarea = _currentPreparedOptions.textarea;\r\n\r\n                    //scrollbars visibility:\r\n                    var scrollbarsVisibility = currentPreparedOptionsScrollbars.visibility;\r\n                    var scrollbarsVisibilityChanged = checkCacheAutoForce(scrollbarsVisibility, _scrollbarsVisibilityCache);\r\n\r\n                    //scrollbars autoHide:\r\n                    var scrollbarsAutoHide = currentPreparedOptionsScrollbars.autoHide;\r\n                    var scrollbarsAutoHideChanged = checkCacheAutoForce(scrollbarsAutoHide, _scrollbarsAutoHideCache);\r\n\r\n                    //scrollbars click scrolling\r\n                    var scrollbarsClickScrolling = currentPreparedOptionsScrollbars.clickScrolling;\r\n                    var scrollbarsClickScrollingChanged = checkCacheAutoForce(scrollbarsClickScrolling, _scrollbarsClickScrollingCache);\r\n\r\n                    //scrollbars drag scrolling\r\n                    var scrollbarsDragScrolling = currentPreparedOptionsScrollbars.dragScrolling;\r\n                    var scrollbarsDragScrollingChanged = checkCacheAutoForce(scrollbarsDragScrolling, _scrollbarsDragScrollingCache);\r\n\r\n                    //className\r\n                    var className = _currentPreparedOptions.className;\r\n                    var classNameChanged = checkCacheAutoForce(className, _classNameCache);\r\n\r\n                    //resize\r\n                    var resize = _currentPreparedOptions.resize;\r\n                    var resizeChanged = checkCacheAutoForce(resize, _resizeCache) && !_isBody; //body can't be resized since the window itself acts as resize possibility.\r\n\r\n                    //paddingAbsolute\r\n                    var paddingAbsolute = _currentPreparedOptions.paddingAbsolute;\r\n                    var paddingAbsoluteChanged = checkCacheAutoForce(paddingAbsolute, _paddingAbsoluteCache);\r\n\r\n                    //clipAlways\r\n                    var clipAlways = _currentPreparedOptions.clipAlways;\r\n                    var clipAlwaysChanged = checkCacheAutoForce(clipAlways, _clipAlwaysCache);\r\n\r\n                    //sizeAutoCapable\r\n                    var sizeAutoCapable = _currentPreparedOptions.sizeAutoCapable && !_isBody; //body can never be size auto, because it shall be always as big as the viewport.\r\n                    var sizeAutoCapableChanged = checkCacheAutoForce(sizeAutoCapable, _sizeAutoCapableCache);\r\n\r\n                    //showNativeScrollbars\r\n                    var ignoreOverlayScrollbarHiding = _currentPreparedOptions.nativeScrollbarsOverlaid.showNativeScrollbars;\r\n                    var ignoreOverlayScrollbarHidingChanged = checkCacheAutoForce(ignoreOverlayScrollbarHiding, _ignoreOverlayScrollbarHidingCache);\r\n\r\n                    //autoUpdate\r\n                    var autoUpdate = _currentPreparedOptions.autoUpdate;\r\n                    var autoUpdateChanged = checkCacheAutoForce(autoUpdate, _autoUpdateCache);\r\n\r\n                    //overflowBehavior\r\n                    var overflowBehavior = _currentPreparedOptions.overflowBehavior;\r\n                    var overflowBehaviorChanged = checkCacheAutoForce(overflowBehavior, _overflowBehaviorCache, force);\r\n\r\n                    //dynWidth:\r\n                    var textareaDynWidth = currentPreparedOptionsTextarea.dynWidth;\r\n                    var textareaDynWidthChanged = checkCacheAutoForce(_textareaDynWidthCache, textareaDynWidth);\r\n\r\n                    //dynHeight:\r\n                    var textareaDynHeight = currentPreparedOptionsTextarea.dynHeight;\r\n                    var textareaDynHeightChanged = checkCacheAutoForce(_textareaDynHeightCache, textareaDynHeight);\r\n\r\n                    //scrollbars visibility\r\n                    _scrollbarsAutoHideNever = scrollbarsAutoHide === 'n';\r\n                    _scrollbarsAutoHideScroll = scrollbarsAutoHide === 's';\r\n                    _scrollbarsAutoHideMove = scrollbarsAutoHide === 'm';\r\n                    _scrollbarsAutoHideLeave = scrollbarsAutoHide === 'l';\r\n\r\n                    //scrollbars autoHideDelay\r\n                    _scrollbarsAutoHideDelay = currentPreparedOptionsScrollbars.autoHideDelay;\r\n\r\n                    //old className\r\n                    _oldClassName = _classNameCache;\r\n\r\n                    //resize\r\n                    _resizeNone = resize === 'n';\r\n                    _resizeBoth = resize === 'b';\r\n                    _resizeHorizontal = resize === 'h';\r\n                    _resizeVertical = resize === 'v';\r\n\r\n                    //normalizeRTL\r\n                    _normalizeRTLCache = _currentPreparedOptions.normalizeRTL;\r\n\r\n                    //ignore overlay scrollbar hiding\r\n                    ignoreOverlayScrollbarHiding = ignoreOverlayScrollbarHiding && (_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y);\r\n\r\n                    //refresh options cache\r\n                    _scrollbarsVisibilityCache = scrollbarsVisibility;\r\n                    _scrollbarsAutoHideCache = scrollbarsAutoHide;\r\n                    _scrollbarsClickScrollingCache = scrollbarsClickScrolling;\r\n                    _scrollbarsDragScrollingCache = scrollbarsDragScrolling;\r\n                    _classNameCache = className;\r\n                    _resizeCache = resize;\r\n                    _paddingAbsoluteCache = paddingAbsolute;\r\n                    _clipAlwaysCache = clipAlways;\r\n                    _sizeAutoCapableCache = sizeAutoCapable;\r\n                    _ignoreOverlayScrollbarHidingCache = ignoreOverlayScrollbarHiding;\r\n                    _autoUpdateCache = autoUpdate;\r\n                    _overflowBehaviorCache = extendDeep({}, overflowBehavior);\r\n                    _textareaDynWidthCache = textareaDynWidth;\r\n                    _textareaDynHeightCache = textareaDynHeight;\r\n                    _hasOverflowCache = _hasOverflowCache || { x: false, y: false };\r\n\r\n                    //set correct class name to the host element\r\n                    if (classNameChanged) {\r\n                        removeClass(_hostElement, _oldClassName + _strSpace + _classNameThemeNone);\r\n                        addClass(_hostElement, className !== undefined && className !== null && className.length > 0 ? className : _classNameThemeNone);\r\n                    }\r\n\r\n                    //set correct auto Update\r\n                    if (autoUpdateChanged) {\r\n                        if (autoUpdate === true || (autoUpdate === null && _autoUpdateRecommended)) {\r\n                            disconnectMutationObservers();\r\n                            autoUpdateLoop.add(_base);\r\n                        }\r\n                        else {\r\n                            autoUpdateLoop.remove(_base);\r\n                            connectMutationObservers();\r\n                        }\r\n                    }\r\n\r\n                    //activate or deactivate size auto capability\r\n                    if (sizeAutoCapableChanged) {\r\n                        if (sizeAutoCapable) {\r\n                            if (_contentGlueElement) {\r\n                                _contentGlueElement.show();\r\n                            }\r\n                            else {\r\n                                _contentGlueElement = FRAMEWORK(generateDiv(_classNameContentGlueElement));\r\n                                _paddingElement.before(_contentGlueElement);\r\n                            }\r\n                            if (_sizeAutoObserverAdded) {\r\n                                _sizeAutoObserverElement.show();\r\n                            }\r\n                            else {\r\n                                _sizeAutoObserverElement = FRAMEWORK(generateDiv(_classNameSizeAutoObserverElement));\r\n                                _sizeAutoObserverElementNative = _sizeAutoObserverElement[0];\r\n\r\n                                _contentGlueElement.before(_sizeAutoObserverElement);\r\n                                var oldSize = { w: -1, h: -1 };\r\n                                setupResizeObserver(_sizeAutoObserverElement, function () {\r\n                                    var newSize = {\r\n                                        w: _sizeAutoObserverElementNative[LEXICON.oW],\r\n                                        h: _sizeAutoObserverElementNative[LEXICON.oH]\r\n                                    };\r\n                                    if (checkCache(newSize, oldSize)) {\r\n                                        if (_initialized && (_heightAutoCache && newSize.h > 0) || (_widthAutoCache && newSize.w > 0)) {\r\n                                            update();\r\n                                        }\r\n                                        else if (_initialized && (!_heightAutoCache && newSize.h === 0) || (!_widthAutoCache && newSize.w === 0)) {\r\n                                            update();\r\n                                        }\r\n                                    }\r\n                                    oldSize = newSize;\r\n                                });\r\n                                _sizeAutoObserverAdded = true;\r\n                                //fix heightAuto detector bug if height is fixed but contentHeight is 0.\r\n                                //the probability this bug will ever happen is very very low, thats why its ok if we use calc which isn't supported in IE8.\r\n                                if (_cssCalc !== null)\r\n                                    _sizeAutoObserverElement.css(_strHeight, _cssCalc + '(100% + 1px)');\r\n                            }\r\n                        }\r\n                        else {\r\n                            if (_sizeAutoObserverAdded)\r\n                                _sizeAutoObserverElement.hide();\r\n                            if (_contentGlueElement)\r\n                                _contentGlueElement.hide();\r\n                        }\r\n                    }\r\n\r\n                    //if force, update all resizeObservers too\r\n                    if (force) {\r\n                        _sizeObserverElement.find('*').trigger(_strScroll);\r\n                        if (_sizeAutoObserverAdded)\r\n                            _sizeAutoObserverElement.find('*').trigger(_strScroll);\r\n                    }\r\n\r\n                    //display hidden:\r\n                    displayIsHidden = displayIsHidden === undefined ? _hostElement.is(':hidden') : displayIsHidden;\r\n\r\n                    //textarea AutoWrapping:\r\n                    var textareaAutoWrapping = _isTextarea ? _targetElement.attr('wrap') !== 'off' : false;\r\n                    var textareaAutoWrappingChanged = checkCacheAutoForce(textareaAutoWrapping, _textareaAutoWrappingCache);\r\n\r\n                    //detect direction:\r\n                    var cssDirection = _hostElement.css('direction');\r\n                    var cssDirectionChanged = checkCacheAutoForce(cssDirection, _cssDirectionCache);\r\n\r\n                    //detect box-sizing:\r\n                    var boxSizing = _hostElement.css('box-sizing');\r\n                    var boxSizingChanged = checkCacheAutoForce(boxSizing, _cssBoxSizingCache);\r\n\r\n                    //detect padding:\r\n                    var padding = getTopRightBottomLeftHost(_strPaddingMinus);\r\n\r\n                    //width + height auto detecting var:\r\n                    var sizeAutoObserverElementBCRect;\r\n                    //exception occurs in IE8 sometimes (unknown exception)\r\n                    try {\r\n                        sizeAutoObserverElementBCRect = _sizeAutoObserverAdded ? _sizeAutoObserverElementNative[LEXICON.bCR]() : null;\r\n                    } catch (ex) {\r\n                        return;\r\n                    }\r\n\r\n                    _isRTL = cssDirection === 'rtl';\r\n                    _isBorderBox = (boxSizing === 'border-box');\r\n                    var isRTLLeft = _isRTL ? _strLeft : _strRight;\r\n                    var isRTLRight = _isRTL ? _strRight : _strLeft;\r\n\r\n                    //detect width auto:\r\n                    var widthAutoResizeDetection = false;\r\n                    var widthAutoObserverDetection = (_sizeAutoObserverAdded && (_hostElement.css(_strFloat) !== 'none' /*|| _isTextarea */)) ? (MATH.round(sizeAutoObserverElementBCRect.right - sizeAutoObserverElementBCRect.left) === 0) && (!paddingAbsolute ? (_hostElementNative[LEXICON.cW] - _paddingX) > 0 : true) : false;\r\n                    if (sizeAutoCapable && !widthAutoObserverDetection) {\r\n                        var tmpCurrHostWidth = _hostElementNative[LEXICON.oW];\r\n                        var tmpCurrContentGlueWidth = _contentGlueElement.css(_strWidth);\r\n                        _contentGlueElement.css(_strWidth, _strAuto);\r\n\r\n                        var tmpNewHostWidth = _hostElementNative[LEXICON.oW];\r\n                        _contentGlueElement.css(_strWidth, tmpCurrContentGlueWidth);\r\n                        widthAutoResizeDetection = tmpCurrHostWidth !== tmpNewHostWidth;\r\n                        if (!widthAutoResizeDetection) {\r\n                            _contentGlueElement.css(_strWidth, tmpCurrHostWidth + 1);\r\n                            tmpNewHostWidth = _hostElementNative[LEXICON.oW];\r\n                            _contentGlueElement.css(_strWidth, tmpCurrContentGlueWidth);\r\n                            widthAutoResizeDetection = tmpCurrHostWidth !== tmpNewHostWidth;\r\n                        }\r\n                    }\r\n                    var widthAuto = (widthAutoObserverDetection || widthAutoResizeDetection) && sizeAutoCapable && !displayIsHidden;\r\n                    var widthAutoChanged = checkCacheAutoForce(widthAuto, _widthAutoCache);\r\n                    var wasWidthAuto = !widthAuto && _widthAutoCache;\r\n\r\n                    //detect height auto:\r\n                    var heightAuto = _sizeAutoObserverAdded && sizeAutoCapable && !displayIsHidden ? (MATH.round(sizeAutoObserverElementBCRect.bottom - sizeAutoObserverElementBCRect.top) === 0) /* && (!paddingAbsolute && (_msieVersion > 9 || !_msieVersion) ? true : true) */ : false;\r\n                    var heightAutoChanged = checkCacheAutoForce(heightAuto, _heightAutoCache);\r\n                    var wasHeightAuto = !heightAuto && _heightAutoCache;\r\n\r\n                    //detect border:\r\n                    //we need the border only if border box and auto size\r\n                    var updateBorderX = (widthAuto && _isBorderBox) || !_isBorderBox;\r\n                    var updateBorderY = (heightAuto && _isBorderBox) || !_isBorderBox;\r\n                    var border = getTopRightBottomLeftHost(_strBorderMinus, '-' + _strWidth, !updateBorderX, !updateBorderY)\r\n\r\n                    //detect margin:\r\n                    var margin = getTopRightBottomLeftHost(_strMarginMinus);\r\n\r\n                    //vars to apply correct css\r\n                    var contentElementCSS = {};\r\n                    var contentGlueElementCSS = {};\r\n\r\n                    //funcs\r\n                    var getHostSize = function () {\r\n                        //has to be clientSize because offsetSize respect borders\r\n                        return {\r\n                            w: _hostElementNative[LEXICON.cW],\r\n                            h: _hostElementNative[LEXICON.cH]\r\n                        };\r\n                    };\r\n                    var getViewportSize = function () {\r\n                        //viewport size is padding container because it never has padding, margin and a border\r\n                        //determine zoom rounding error -> sometimes scrollWidth/Height is smaller than clientWidth/Height\r\n                        //if this happens add the difference to the viewportSize to compensate the rounding error\r\n                        return {\r\n                            w: _paddingElementNative[LEXICON.oW] + MATH.max(0, _contentElementNative[LEXICON.cW] - _contentElementNative[LEXICON.sW]),\r\n                            h: _paddingElementNative[LEXICON.oH] + MATH.max(0, _contentElementNative[LEXICON.cH] - _contentElementNative[LEXICON.sH])\r\n                        };\r\n                    };\r\n\r\n                    //set info for padding\r\n                    var paddingAbsoluteX = _paddingX = padding.l + padding.r;\r\n                    var paddingAbsoluteY = _paddingY = padding.t + padding.b;\r\n                    paddingAbsoluteX *= paddingAbsolute ? 1 : 0;\r\n                    paddingAbsoluteY *= paddingAbsolute ? 1 : 0;\r\n                    padding.c = checkCacheAutoForce(padding, _cssPaddingCache);\r\n\r\n                    //set info for border\r\n                    _borderX = border.l + border.r;\r\n                    _borderY = border.t + border.b;\r\n                    border.c = checkCacheAutoForce(border, _cssBorderCache);\r\n\r\n                    //set info for margin\r\n                    _marginX = margin.l + margin.r;\r\n                    _marginY = margin.t + margin.b;\r\n                    margin.c = checkCacheAutoForce(margin, _cssMarginCache);\r\n\r\n                    //refresh cache\r\n                    _textareaAutoWrappingCache = textareaAutoWrapping;\r\n                    _cssDirectionCache = cssDirection;\r\n                    _cssBoxSizingCache = boxSizing;\r\n                    _widthAutoCache = widthAuto;\r\n                    _heightAutoCache = heightAuto;\r\n                    _cssPaddingCache = padding;\r\n                    _cssBorderCache = border;\r\n                    _cssMarginCache = margin;\r\n\r\n                    //IEFix direction changed\r\n                    if (cssDirectionChanged && _sizeAutoObserverAdded)\r\n                        _sizeAutoObserverElement.css(_strFloat, isRTLRight);\r\n\r\n                    //apply padding:\r\n                    if (padding.c || cssDirectionChanged || paddingAbsoluteChanged || widthAutoChanged || heightAutoChanged || boxSizingChanged || sizeAutoCapableChanged) {\r\n                        var paddingElementCSS = {};\r\n                        var textareaCSS = {};\r\n                        var paddingValues = [padding.t, padding.r, padding.b, padding.l];\r\n\r\n                        setTopRightBottomLeft(contentGlueElementCSS, _strMarginMinus, [-padding.t, -padding.r, -padding.b, -padding.l]);\r\n                        if (paddingAbsolute) {\r\n                            setTopRightBottomLeft(paddingElementCSS, _strEmpty, paddingValues);\r\n                            setTopRightBottomLeft(_isTextarea ? textareaCSS : contentElementCSS, _strPaddingMinus);\r\n                        }\r\n                        else {\r\n                            setTopRightBottomLeft(paddingElementCSS, _strEmpty);\r\n                            setTopRightBottomLeft(_isTextarea ? textareaCSS : contentElementCSS, _strPaddingMinus, paddingValues);\r\n                        }\r\n\r\n                        _paddingElement.css(paddingElementCSS);\r\n                        _targetElement.css(textareaCSS);\r\n                    }\r\n\r\n                    //viewport size is padding container because it never has padding, margin and a border.\r\n                    _viewportSize = getViewportSize();\r\n\r\n                    //update Textarea\r\n                    var textareaSize = _isTextarea ? textareaUpdate() : false;\r\n                    var textareaSizeChanged = _isTextarea && checkCacheAutoForce(textareaSize, _textareaSizeCache);\r\n                    var textareaDynOrigSize = _isTextarea && textareaSize ? {\r\n                        w: textareaDynWidth ? textareaSize._dynamicWidth : textareaSize._originalWidth,\r\n                        h: textareaDynHeight ? textareaSize._dynamicHeight : textareaSize._originalHeight\r\n                    } : {};\r\n                    _textareaSizeCache = textareaSize;\r\n\r\n                    //fix height auto / width auto in cooperation with current padding & boxSizing behavior:\r\n                    if (heightAuto && (heightAutoChanged || paddingAbsoluteChanged || boxSizingChanged || padding.c || border.c)) {\r\n                        contentElementCSS[_strHeight] = _strAuto;\r\n                    }\r\n                    else if (heightAutoChanged || paddingAbsoluteChanged) {\r\n                        contentElementCSS[_strHeight] = _strHundredPercent;\r\n                    }\r\n                    if (widthAuto && (widthAutoChanged || paddingAbsoluteChanged || boxSizingChanged || padding.c || border.c || cssDirectionChanged)) {\r\n                        contentElementCSS[_strWidth] = _strAuto;\r\n                        contentGlueElementCSS[_strMaxMinus + _strWidth] = _strHundredPercent; //IE Fix\r\n                    }\r\n                    else if (widthAutoChanged || paddingAbsoluteChanged) {\r\n                        contentElementCSS[_strWidth] = _strHundredPercent;\r\n                        contentElementCSS[_strFloat] = _strEmpty;\r\n                        contentGlueElementCSS[_strMaxMinus + _strWidth] = _strEmpty; //IE Fix\r\n                    }\r\n                    if (widthAuto) {\r\n                        //textareaDynOrigSize.w || _strAuto :: doesnt works because applied margin will shift width\r\n                        contentGlueElementCSS[_strWidth] = _strAuto;\r\n\r\n                        contentElementCSS[_strWidth] = VENDORS._cssPropertyValue(_strWidth, 'max-content intrinsic') || _strAuto;\r\n                        contentElementCSS[_strFloat] = isRTLRight;\r\n                    }\r\n                    else {\r\n                        contentGlueElementCSS[_strWidth] = _strEmpty;\r\n                    }\r\n                    if (heightAuto) {\r\n                        //textareaDynOrigSize.h || _contentElementNative[LEXICON.cH] :: use for anti scroll jumping\r\n                        contentGlueElementCSS[_strHeight] = textareaDynOrigSize.h || _contentElementNative[LEXICON.cH];\r\n                    }\r\n                    else {\r\n                        contentGlueElementCSS[_strHeight] = _strEmpty;\r\n                    }\r\n                    if (sizeAutoCapable)\r\n                        _contentGlueElement.css(contentGlueElementCSS);\r\n                    _contentElement.css(contentElementCSS);\r\n\r\n                    //CHECKPOINT HERE ~\r\n                    contentElementCSS = {};\r\n                    contentGlueElementCSS = {};\r\n\r\n                    //if [content(host) client / scroll size, or target element direction, or content(host) max-sizes] changed, or force is true\r\n                    if (hostSizeChanged || contentSizeChanged || textareaSizeChanged || cssDirectionChanged || boxSizingChanged || paddingAbsoluteChanged || widthAutoChanged || widthAuto || heightAutoChanged || heightAuto || ignoreOverlayScrollbarHidingChanged || overflowBehaviorChanged || clipAlwaysChanged || resizeChanged || scrollbarsVisibilityChanged || scrollbarsAutoHideChanged || scrollbarsDragScrollingChanged || scrollbarsClickScrollingChanged || textareaDynWidthChanged || textareaDynHeightChanged || textareaAutoWrappingChanged) {\r\n                        var strOverflow = 'overflow';\r\n                        var strOverflowX = strOverflow + '-x';\r\n                        var strOverflowY = strOverflow + '-y';\r\n                        var strHidden = 'hidden';\r\n                        var strVisible = 'visible';\r\n\r\n                        //Reset the viewport (very important for natively overlaid scrollbars and zoom change\r\n                        //don't change the overflow prop as it is very expensive and affects performance !A LOT!\r\n                        if (!_nativeScrollbarStyling) {\r\n                            var viewportElementResetCSS = {};\r\n                            var resetXTmp = _hasOverflowCache.y && _hideOverflowCache.ys && !ignoreOverlayScrollbarHiding ? (_nativeScrollbarIsOverlaid.y ? _viewportElement.css(isRTLLeft) : -_nativeScrollbarSize.y) : 0;\r\n                            var resetBottomTmp = _hasOverflowCache.x && _hideOverflowCache.xs && !ignoreOverlayScrollbarHiding ? (_nativeScrollbarIsOverlaid.x ? _viewportElement.css(_strBottom) : -_nativeScrollbarSize.x) : 0;\r\n                            setTopRightBottomLeft(viewportElementResetCSS, _strEmpty);\r\n                            _viewportElement.css(viewportElementResetCSS);\r\n                        }\r\n\r\n                        //measure several sizes:\r\n                        var contentMeasureElement = getContentMeasureElement();\r\n                        //in Firefox content element has to have overflow hidden, else element margins aren't calculated properly, this element prevents this bug, but only if scrollbars aren't overlaid\r\n                        var contentSize = {\r\n                            //use clientSize because natively overlaidScrollbars add borders\r\n                            w: textareaDynOrigSize.w || contentMeasureElement[LEXICON.cW],\r\n                            h: textareaDynOrigSize.h || contentMeasureElement[LEXICON.cH]\r\n                        };\r\n                        var scrollSize = {\r\n                            w: contentMeasureElement[LEXICON.sW],\r\n                            h: contentMeasureElement[LEXICON.sH]\r\n                        };\r\n\r\n                        //apply the correct viewport style and measure viewport size\r\n                        if (!_nativeScrollbarStyling) {\r\n                            viewportElementResetCSS[_strBottom] = wasHeightAuto ? _strEmpty : resetBottomTmp;\r\n                            viewportElementResetCSS[isRTLLeft] = wasWidthAuto ? _strEmpty : resetXTmp;\r\n                            _viewportElement.css(viewportElementResetCSS);\r\n                        }\r\n                        _viewportSize = getViewportSize();\r\n\r\n                        //measure and correct several sizes\r\n                        var hostSize = getHostSize();\r\n                        var hostAbsoluteRectSize = {\r\n                            w: hostSize.w - _marginX - _borderX - (_isBorderBox ? 0 : _paddingX),\r\n                            h: hostSize.h - _marginY - _borderY - (_isBorderBox ? 0 : _paddingY)\r\n                        };\r\n                        var contentGlueSize = {\r\n                            //client/scrollSize + AbsolutePadding -> because padding is only applied to the paddingElement if its absolute, so you have to add it manually\r\n                            //hostSize is clientSize -> so padding should be added manually, right? FALSE! Because content glue is inside hostElement, so we don't have to worry about padding\r\n                            w: MATH.max((widthAuto ? contentSize.w : scrollSize.w) + paddingAbsoluteX, hostAbsoluteRectSize.w),\r\n                            h: MATH.max((heightAuto ? contentSize.h : scrollSize.h) + paddingAbsoluteY, hostAbsoluteRectSize.h)\r\n                        };\r\n                        contentGlueSize.c = checkCacheAutoForce(contentGlueSize, _contentGlueSizeCache);\r\n                        _contentGlueSizeCache = contentGlueSize;\r\n\r\n                        //apply correct contentGlue size\r\n                        if (sizeAutoCapable) {\r\n                            //size contentGlue correctly to make sure the element has correct size if the sizing switches to auto\r\n                            if (contentGlueSize.c || (heightAuto || widthAuto)) {\r\n                                contentGlueElementCSS[_strWidth] = contentGlueSize.w;\r\n                                contentGlueElementCSS[_strHeight] = contentGlueSize.h;\r\n\r\n                                //textarea-sizes are already calculated correctly at this point\r\n                                if (!_isTextarea) {\r\n                                    contentSize = {\r\n                                        //use clientSize because natively overlaidScrollbars add borders\r\n                                        w: contentMeasureElement[LEXICON.cW],\r\n                                        h: contentMeasureElement[LEXICON.cH]\r\n                                    };\r\n                                }\r\n                            }\r\n                            var textareaCoverCSS = {};\r\n                            var setContentGlueElementCSSfunction = function (horizontal) {\r\n                                var scrollbarVars = getScrollbarVars(horizontal);\r\n                                var wh = scrollbarVars._w_h;\r\n                                var strWH = scrollbarVars._width_height;\r\n                                var autoSize = horizontal ? widthAuto : heightAuto;\r\n                                var borderSize = horizontal ? _borderX : _borderY;\r\n                                var paddingSize = horizontal ? _paddingX : _paddingY;\r\n                                var marginSize = horizontal ? _marginX : _marginY;\r\n                                var viewportSize = _viewportSize[wh] - borderSize - marginSize - (_isBorderBox ? 0 : paddingSize);\r\n\r\n                                //make contentGlue size -1 if element is not auto sized, to make sure that a resize event happens when the element shrinks\r\n                                if (!autoSize || (!autoSize && border.c))\r\n                                    contentGlueElementCSS[strWH] = hostAbsoluteRectSize[wh] - 1;\r\n\r\n                                //if size is auto and host is smaller than size as min size, make content glue size -1 to make sure size changes will be detected (this is only needed if padding is 0)\r\n                                if (autoSize && (contentSize[wh] < viewportSize) && (horizontal && _isTextarea ? !textareaAutoWrapping : true)) {\r\n                                    if (_isTextarea)\r\n                                        textareaCoverCSS[strWH] = parseToZeroOrNumber(_textareaCoverElement.css(strWH)) - 1;\r\n                                    contentGlueElementCSS[strWH] -= 1;\r\n                                }\r\n\r\n                                //make sure content glue size is at least 1\r\n                                if (contentSize[wh] > 0)\r\n                                    contentGlueElementCSS[strWH] = MATH.max(1, contentGlueElementCSS[strWH]);\r\n                            };\r\n                            setContentGlueElementCSSfunction(true);\r\n                            setContentGlueElementCSSfunction(false);\r\n\r\n                            if (_isTextarea)\r\n                                _textareaCoverElement.css(textareaCoverCSS);\r\n                            _contentGlueElement.css(contentGlueElementCSS);\r\n                        }\r\n                        if (widthAuto)\r\n                            contentElementCSS[_strWidth] = _strHundredPercent;\r\n                        if (widthAuto && !_isBorderBox && !_mutationObserversConnected)\r\n                            contentElementCSS[_strFloat] = 'none';\r\n\r\n                        //apply and reset content style\r\n                        _contentElement.css(contentElementCSS);\r\n                        contentElementCSS = {};\r\n\r\n                        //measure again, but this time all correct sizes:\r\n                        var contentScrollSize = {\r\n                            w: contentMeasureElement[LEXICON.sW],\r\n                            h: contentMeasureElement[LEXICON.sH],\r\n                        };\r\n                        contentScrollSize.c = contentSizeChanged = checkCacheAutoForce(contentScrollSize, _contentScrollSizeCache);\r\n                        _contentScrollSizeCache = contentScrollSize;\r\n\r\n                        //refresh viewport size after correct measuring\r\n                        _viewportSize = getViewportSize();\r\n\r\n                        hostSize = getHostSize();\r\n                        hostSizeChanged = checkCacheAutoForce(hostSize, _hostSizeCache);\r\n                        _hostSizeCache = hostSize;\r\n\r\n                        var hideOverflowForceTextarea = _isTextarea && (_viewportSize.w === 0 || _viewportSize.h === 0);\r\n                        var previousOverflowAmount = _overflowAmountCache;\r\n                        var overflowBehaviorIsVS = {};\r\n                        var overflowBehaviorIsVH = {};\r\n                        var overflowBehaviorIsS = {};\r\n                        var overflowAmount = {};\r\n                        var hasOverflow = {};\r\n                        var hideOverflow = {};\r\n                        var canScroll = {};\r\n                        var viewportRect = _paddingElementNative[LEXICON.bCR]();\r\n                        var setOverflowVariables = function (horizontal) {\r\n                            var scrollbarVars = getScrollbarVars(horizontal);\r\n                            var scrollbarVarsInverted = getScrollbarVars(!horizontal);\r\n                            var xyI = scrollbarVarsInverted._x_y;\r\n                            var xy = scrollbarVars._x_y;\r\n                            var wh = scrollbarVars._w_h;\r\n                            var widthHeight = scrollbarVars._width_height;\r\n                            var scrollMax = _strScroll + scrollbarVars._Left_Top + 'Max';\r\n                            var fractionalOverflowAmount = viewportRect[widthHeight] ? MATH.abs(viewportRect[widthHeight] - _viewportSize[wh]) : 0;\r\n                            var checkFractionalOverflowAmount = previousOverflowAmount && previousOverflowAmount[xy] > 0 && _viewportElementNative[scrollMax] === 0;\r\n                            overflowBehaviorIsVS[xy] = overflowBehavior[xy] === 'v-s';\r\n                            overflowBehaviorIsVH[xy] = overflowBehavior[xy] === 'v-h';\r\n                            overflowBehaviorIsS[xy] = overflowBehavior[xy] === 's';\r\n                            overflowAmount[xy] = MATH.max(0, MATH.round((contentScrollSize[wh] - _viewportSize[wh]) * 100) / 100);\r\n                            overflowAmount[xy] *= (hideOverflowForceTextarea || (checkFractionalOverflowAmount && fractionalOverflowAmount > 0 && fractionalOverflowAmount < 1)) ? 0 : 1;\r\n                            hasOverflow[xy] = overflowAmount[xy] > 0;\r\n\r\n                            //hideOverflow:\r\n                            //x || y : true === overflow is hidden by \"overflow: scroll\" OR \"overflow: hidden\"\r\n                            //xs || ys : true === overflow is hidden by \"overflow: scroll\"\r\n                            hideOverflow[xy] = overflowBehaviorIsVS[xy] || overflowBehaviorIsVH[xy] ? (hasOverflow[xyI] && !overflowBehaviorIsVS[xyI] && !overflowBehaviorIsVH[xyI]) : hasOverflow[xy];\r\n                            hideOverflow[xy + 's'] = hideOverflow[xy] ? (overflowBehaviorIsS[xy] || overflowBehaviorIsVS[xy]) : false;\r\n\r\n                            canScroll[xy] = hasOverflow[xy] && hideOverflow[xy + 's'];\r\n                        };\r\n                        setOverflowVariables(true);\r\n                        setOverflowVariables(false);\r\n\r\n                        overflowAmount.c = checkCacheAutoForce(overflowAmount, _overflowAmountCache);\r\n                        _overflowAmountCache = overflowAmount;\r\n                        hasOverflow.c = checkCacheAutoForce(hasOverflow, _hasOverflowCache);\r\n                        _hasOverflowCache = hasOverflow;\r\n                        hideOverflow.c = checkCacheAutoForce(hideOverflow, _hideOverflowCache);\r\n                        _hideOverflowCache = hideOverflow;\r\n\r\n                        //if native scrollbar is overlay at x OR y axis, prepare DOM\r\n                        if (_nativeScrollbarIsOverlaid.x || _nativeScrollbarIsOverlaid.y) {\r\n                            var borderDesign = 'px solid transparent';\r\n                            var contentArrangeElementCSS = {};\r\n                            var arrangeContent = {};\r\n                            var arrangeChanged = force;\r\n                            var setContentElementCSS;\r\n\r\n                            if (hasOverflow.x || hasOverflow.y) {\r\n                                arrangeContent.w = _nativeScrollbarIsOverlaid.y && hasOverflow.y ? contentScrollSize.w + _overlayScrollbarDummySize.y : _strEmpty;\r\n                                arrangeContent.h = _nativeScrollbarIsOverlaid.x && hasOverflow.x ? contentScrollSize.h + _overlayScrollbarDummySize.x : _strEmpty;\r\n                                arrangeChanged = checkCacheAutoForce(arrangeContent, _arrangeContentSizeCache);\r\n                                _arrangeContentSizeCache = arrangeContent;\r\n                            }\r\n\r\n                            if (hasOverflow.c || hideOverflow.c || contentScrollSize.c || cssDirectionChanged || widthAutoChanged || heightAutoChanged || widthAuto || heightAuto || ignoreOverlayScrollbarHidingChanged) {\r\n                                contentElementCSS[_strMarginMinus + isRTLRight] = contentElementCSS[_strBorderMinus + isRTLRight] = _strEmpty;\r\n                                setContentElementCSS = function (horizontal) {\r\n                                    var scrollbarVars = getScrollbarVars(horizontal);\r\n                                    var scrollbarVarsInverted = getScrollbarVars(!horizontal);\r\n                                    var xy = scrollbarVars._x_y;\r\n                                    var strDirection = horizontal ? _strBottom : isRTLLeft;\r\n                                    var invertedAutoSize = horizontal ? heightAuto : widthAuto;\r\n\r\n                                    if (_nativeScrollbarIsOverlaid[xy] && hasOverflow[xy] && hideOverflow[xy + 's']) {\r\n                                        contentElementCSS[_strMarginMinus + strDirection] = invertedAutoSize ? (ignoreOverlayScrollbarHiding ? _strEmpty : _overlayScrollbarDummySize[xy]) : _strEmpty;\r\n                                        contentElementCSS[_strBorderMinus + strDirection] = ((horizontal ? !invertedAutoSize : true) && !ignoreOverlayScrollbarHiding) ? (_overlayScrollbarDummySize[xy] + borderDesign) : _strEmpty;\r\n                                    }\r\n                                    else {\r\n                                        arrangeContent[scrollbarVarsInverted._w_h] =\r\n                                            contentElementCSS[_strMarginMinus + strDirection] =\r\n                                            contentElementCSS[_strBorderMinus + strDirection] = _strEmpty;\r\n                                        arrangeChanged = true;\r\n                                    }\r\n                                };\r\n\r\n                                if (_nativeScrollbarStyling) {\r\n                                    addRemoveClass(_viewportElement, _classNameViewportNativeScrollbarsInvisible, !ignoreOverlayScrollbarHiding)\r\n                                }\r\n                                else {\r\n                                    setContentElementCSS(true);\r\n                                    setContentElementCSS(false);\r\n                                }\r\n                            }\r\n                            if (ignoreOverlayScrollbarHiding) {\r\n                                arrangeContent.w = arrangeContent.h = _strEmpty;\r\n                                arrangeChanged = true;\r\n                            }\r\n                            if (arrangeChanged && !_nativeScrollbarStyling) {\r\n                                contentArrangeElementCSS[_strWidth] = hideOverflow.y ? arrangeContent.w : _strEmpty;\r\n                                contentArrangeElementCSS[_strHeight] = hideOverflow.x ? arrangeContent.h : _strEmpty;\r\n\r\n                                if (!_contentArrangeElement) {\r\n                                    _contentArrangeElement = FRAMEWORK(generateDiv(_classNameContentArrangeElement));\r\n                                    _viewportElement.prepend(_contentArrangeElement);\r\n                                }\r\n                                _contentArrangeElement.css(contentArrangeElementCSS);\r\n                            }\r\n                            _contentElement.css(contentElementCSS);\r\n                        }\r\n\r\n                        var viewportElementCSS = {};\r\n                        var paddingElementCSS = {};\r\n                        var setViewportCSS;\r\n                        if (hostSizeChanged || hasOverflow.c || hideOverflow.c || contentScrollSize.c || overflowBehaviorChanged || boxSizingChanged || ignoreOverlayScrollbarHidingChanged || cssDirectionChanged || clipAlwaysChanged || heightAutoChanged) {\r\n                            viewportElementCSS[isRTLRight] = _strEmpty;\r\n                            setViewportCSS = function (horizontal) {\r\n                                var scrollbarVars = getScrollbarVars(horizontal);\r\n                                var scrollbarVarsInverted = getScrollbarVars(!horizontal);\r\n                                var xy = scrollbarVars._x_y;\r\n                                var XY = scrollbarVars._X_Y;\r\n                                var strDirection = horizontal ? _strBottom : isRTLLeft;\r\n\r\n                                var reset = function () {\r\n                                    viewportElementCSS[strDirection] = _strEmpty;\r\n                                    _contentBorderSize[scrollbarVarsInverted._w_h] = 0;\r\n                                };\r\n                                if (hasOverflow[xy] && hideOverflow[xy + 's']) {\r\n                                    viewportElementCSS[strOverflow + XY] = _strScroll;\r\n                                    if (ignoreOverlayScrollbarHiding || _nativeScrollbarStyling) {\r\n                                        reset();\r\n                                    }\r\n                                    else {\r\n                                        viewportElementCSS[strDirection] = -(_nativeScrollbarIsOverlaid[xy] ? _overlayScrollbarDummySize[xy] : _nativeScrollbarSize[xy]);\r\n                                        _contentBorderSize[scrollbarVarsInverted._w_h] = _nativeScrollbarIsOverlaid[xy] ? _overlayScrollbarDummySize[scrollbarVarsInverted._x_y] : 0;\r\n                                    }\r\n                                } else {\r\n                                    viewportElementCSS[strOverflow + XY] = _strEmpty;\r\n                                    reset();\r\n                                }\r\n                            };\r\n                            setViewportCSS(true);\r\n                            setViewportCSS(false);\r\n\r\n                            // if the scroll container is too small and if there is any overflow with no overlay scrollbar (and scrollbar styling isn't possible), \r\n                            // make viewport element greater in size (Firefox hide Scrollbars fix)\r\n                            // because firefox starts hiding scrollbars on too small elements\r\n                            // with this behavior the overflow calculation may be incorrect or the scrollbars would appear suddenly\r\n                            // https://bugzilla.mozilla.org/show_bug.cgi?id=292284\r\n                            if (!_nativeScrollbarStyling\r\n                                && (_viewportSize.h < _nativeScrollbarMinSize.x || _viewportSize.w < _nativeScrollbarMinSize.y)\r\n                                && ((hasOverflow.x && hideOverflow.x && !_nativeScrollbarIsOverlaid.x) || (hasOverflow.y && hideOverflow.y && !_nativeScrollbarIsOverlaid.y))) {\r\n                                viewportElementCSS[_strPaddingMinus + _strTop] = _nativeScrollbarMinSize.x;\r\n                                viewportElementCSS[_strMarginMinus + _strTop] = -_nativeScrollbarMinSize.x;\r\n\r\n                                viewportElementCSS[_strPaddingMinus + isRTLRight] = _nativeScrollbarMinSize.y;\r\n                                viewportElementCSS[_strMarginMinus + isRTLRight] = -_nativeScrollbarMinSize.y;\r\n                            }\r\n                            else {\r\n                                viewportElementCSS[_strPaddingMinus + _strTop] =\r\n                                    viewportElementCSS[_strMarginMinus + _strTop] =\r\n                                    viewportElementCSS[_strPaddingMinus + isRTLRight] =\r\n                                    viewportElementCSS[_strMarginMinus + isRTLRight] = _strEmpty;\r\n                            }\r\n                            viewportElementCSS[_strPaddingMinus + isRTLLeft] =\r\n                                viewportElementCSS[_strMarginMinus + isRTLLeft] = _strEmpty;\r\n\r\n                            //if there is any overflow (x OR y axis) and this overflow shall be hidden, make overflow hidden, else overflow visible\r\n                            if ((hasOverflow.x && hideOverflow.x) || (hasOverflow.y && hideOverflow.y) || hideOverflowForceTextarea) {\r\n                                //only hide if is Textarea\r\n                                if (_isTextarea && hideOverflowForceTextarea) {\r\n                                    paddingElementCSS[strOverflowX] =\r\n                                        paddingElementCSS[strOverflowY] = strHidden;\r\n                                }\r\n                            }\r\n                            else {\r\n                                if (!clipAlways || (overflowBehaviorIsVH.x || overflowBehaviorIsVS.x || overflowBehaviorIsVH.y || overflowBehaviorIsVS.y)) {\r\n                                    //only un-hide if Textarea\r\n                                    if (_isTextarea) {\r\n                                        paddingElementCSS[strOverflowX] =\r\n                                            paddingElementCSS[strOverflowY] = _strEmpty;\r\n                                    }\r\n                                    viewportElementCSS[strOverflowX] =\r\n                                        viewportElementCSS[strOverflowY] = strVisible;\r\n                                }\r\n                            }\r\n\r\n                            _paddingElement.css(paddingElementCSS);\r\n                            _viewportElement.css(viewportElementCSS);\r\n                            viewportElementCSS = {};\r\n\r\n                            //force soft redraw in webkit because without the scrollbars will may appear because DOM wont be redrawn under special conditions\r\n                            if ((hasOverflow.c || boxSizingChanged || widthAutoChanged || heightAutoChanged) && !(_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y)) {\r\n                                var elementStyle = _contentElementNative[LEXICON.s];\r\n                                var dump;\r\n                                elementStyle.webkitTransform = 'scale(1)';\r\n                                elementStyle.display = 'run-in';\r\n                                dump = _contentElementNative[LEXICON.oH];\r\n                                elementStyle.display = _strEmpty; //|| dump; //use dump to prevent it from deletion if minify\r\n                                elementStyle.webkitTransform = _strEmpty;\r\n                            }\r\n                            /*\r\n                            //force hard redraw in webkit if native overlaid scrollbars shall appear\r\n                            if (ignoreOverlayScrollbarHidingChanged && ignoreOverlayScrollbarHiding) {\r\n                                _hostElement.hide();\r\n                                var dump = _hostElementNative[LEXICON.oH];\r\n                                _hostElement.show();\r\n                            }\r\n                            */\r\n                        }\r\n\r\n                        //change to direction RTL and width auto Bugfix in Webkit\r\n                        //without this fix, the DOM still thinks the scrollbar is LTR and thus the content is shifted to the left\r\n                        contentElementCSS = {};\r\n                        if (cssDirectionChanged || widthAutoChanged || heightAutoChanged) {\r\n                            if (_isRTL && widthAuto) {\r\n                                var floatTmp = _contentElement.css(_strFloat);\r\n                                var posLeftWithoutFloat = MATH.round(_contentElement.css(_strFloat, _strEmpty).css(_strLeft, _strEmpty).position().left);\r\n                                _contentElement.css(_strFloat, floatTmp);\r\n                                var posLeftWithFloat = MATH.round(_contentElement.position().left);\r\n\r\n                                if (posLeftWithoutFloat !== posLeftWithFloat)\r\n                                    contentElementCSS[_strLeft] = posLeftWithoutFloat;\r\n                            }\r\n                            else {\r\n                                contentElementCSS[_strLeft] = _strEmpty;\r\n                            }\r\n                        }\r\n                        _contentElement.css(contentElementCSS);\r\n\r\n                        //handle scroll position\r\n                        if (_isTextarea && contentSizeChanged) {\r\n                            var textareaInfo = getTextareaInfo();\r\n                            if (textareaInfo) {\r\n                                var textareaRowsChanged = _textareaInfoCache === undefined ? true : textareaInfo._rows !== _textareaInfoCache._rows;\r\n                                var cursorRow = textareaInfo._cursorRow;\r\n                                var cursorCol = textareaInfo._cursorColumn;\r\n                                var widestRow = textareaInfo._widestRow;\r\n                                var lastRow = textareaInfo._rows;\r\n                                var lastCol = textareaInfo._columns;\r\n                                var cursorPos = textareaInfo._cursorPosition;\r\n                                var cursorMax = textareaInfo._cursorMax;\r\n                                var cursorIsLastPosition = (cursorPos >= cursorMax && _textareaHasFocus);\r\n                                var textareaScrollAmount = {\r\n                                    x: (!textareaAutoWrapping && (cursorCol === lastCol && cursorRow === widestRow)) ? _overflowAmountCache.x : -1,\r\n                                    y: (textareaAutoWrapping ? cursorIsLastPosition || textareaRowsChanged && (previousOverflowAmount ? (currScroll.y === previousOverflowAmount.y) : false) : (cursorIsLastPosition || textareaRowsChanged) && cursorRow === lastRow) ? _overflowAmountCache.y : -1\r\n                                };\r\n                                currScroll.x = textareaScrollAmount.x > -1 ? (_isRTL && _normalizeRTLCache && _rtlScrollBehavior.i ? 0 : textareaScrollAmount.x) : currScroll.x; //if inverted, scroll to 0 -> normalized this means to max scroll offset.\r\n                                currScroll.y = textareaScrollAmount.y > -1 ? textareaScrollAmount.y : currScroll.y;\r\n                            }\r\n                            _textareaInfoCache = textareaInfo;\r\n                        }\r\n                        if (_isRTL && _rtlScrollBehavior.i && _nativeScrollbarIsOverlaid.y && hasOverflow.x && _normalizeRTLCache)\r\n                            currScroll.x += _contentBorderSize.w || 0;\r\n                        if (widthAuto)\r\n                            _hostElement[_strScrollLeft](0);\r\n                        if (heightAuto)\r\n                            _hostElement[_strScrollTop](0);\r\n                        _viewportElement[_strScrollLeft](currScroll.x)[_strScrollTop](currScroll.y);\r\n\r\n                        //scrollbars management:\r\n                        var scrollbarsVisibilityVisible = scrollbarsVisibility === 'v';\r\n                        var scrollbarsVisibilityHidden = scrollbarsVisibility === 'h';\r\n                        var scrollbarsVisibilityAuto = scrollbarsVisibility === 'a';\r\n                        var refreshScrollbarsVisibility = function (showX, showY) {\r\n                            showY = showY === undefined ? showX : showY;\r\n                            refreshScrollbarAppearance(true, showX, canScroll.x)\r\n                            refreshScrollbarAppearance(false, showY, canScroll.y)\r\n                        };\r\n\r\n                        //manage class name which indicates scrollable overflow\r\n                        addRemoveClass(_hostElement, _classNameHostOverflow, hideOverflow.x || hideOverflow.y);\r\n                        addRemoveClass(_hostElement, _classNameHostOverflowX, hideOverflow.x);\r\n                        addRemoveClass(_hostElement, _classNameHostOverflowY, hideOverflow.y);\r\n\r\n                        //add or remove rtl class name for styling purposes except when its body, then the scrollbar stays\r\n                        if (cssDirectionChanged && !_isBody) {\r\n                            addRemoveClass(_hostElement, _classNameHostRTL, _isRTL);\r\n                        }\r\n\r\n                        //manage the resize feature (CSS3 resize \"polyfill\" for this plugin)\r\n                        if (_isBody)\r\n                            addClass(_hostElement, _classNameHostResizeDisabled);\r\n                        if (resizeChanged) {\r\n                            addRemoveClass(_hostElement, _classNameHostResizeDisabled, _resizeNone);\r\n                            addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResize, !_resizeNone);\r\n                            addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResizeB, _resizeBoth);\r\n                            addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResizeH, _resizeHorizontal);\r\n                            addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResizeV, _resizeVertical);\r\n                        }\r\n\r\n                        //manage the scrollbars general visibility + the scrollbar interactivity (unusable class name)\r\n                        if (scrollbarsVisibilityChanged || overflowBehaviorChanged || hideOverflow.c || hasOverflow.c || ignoreOverlayScrollbarHidingChanged) {\r\n                            if (ignoreOverlayScrollbarHiding) {\r\n                                if (ignoreOverlayScrollbarHidingChanged) {\r\n                                    removeClass(_hostElement, _classNameHostScrolling);\r\n                                    if (ignoreOverlayScrollbarHiding) {\r\n                                        refreshScrollbarsVisibility(false);\r\n                                    }\r\n                                }\r\n                            }\r\n                            else if (scrollbarsVisibilityAuto) {\r\n                                refreshScrollbarsVisibility(canScroll.x, canScroll.y);\r\n                            }\r\n                            else if (scrollbarsVisibilityVisible) {\r\n                                refreshScrollbarsVisibility(true);\r\n                            }\r\n                            else if (scrollbarsVisibilityHidden) {\r\n                                refreshScrollbarsVisibility(false);\r\n                            }\r\n                        }\r\n\r\n                        //manage the scrollbars auto hide feature (auto hide them after specific actions)\r\n                        if (scrollbarsAutoHideChanged || ignoreOverlayScrollbarHidingChanged) {\r\n                            setupHostMouseTouchEvents(!_scrollbarsAutoHideLeave && !_scrollbarsAutoHideMove);\r\n                            refreshScrollbarsAutoHide(_scrollbarsAutoHideNever, !_scrollbarsAutoHideNever);\r\n                        }\r\n\r\n                        //manage scrollbars handle length & offset - don't remove!\r\n                        if (hostSizeChanged || overflowAmount.c || heightAutoChanged || widthAutoChanged || resizeChanged || boxSizingChanged || paddingAbsoluteChanged || ignoreOverlayScrollbarHidingChanged || cssDirectionChanged) {\r\n                            refreshScrollbarHandleLength(true);\r\n                            refreshScrollbarHandleOffset(true);\r\n                            refreshScrollbarHandleLength(false);\r\n                            refreshScrollbarHandleOffset(false);\r\n                        }\r\n\r\n                        //manage interactivity\r\n                        if (scrollbarsClickScrollingChanged)\r\n                            refreshScrollbarsInteractive(true, scrollbarsClickScrolling);\r\n                        if (scrollbarsDragScrollingChanged)\r\n                            refreshScrollbarsInteractive(false, scrollbarsDragScrolling);\r\n\r\n                        //callbacks:\r\n                        dispatchCallback('onDirectionChanged', {\r\n                            isRTL: _isRTL,\r\n                            dir: cssDirection\r\n                        }, cssDirectionChanged);\r\n                        dispatchCallback('onHostSizeChanged', {\r\n                            width: _hostSizeCache.w,\r\n                            height: _hostSizeCache.h\r\n                        }, hostSizeChanged);\r\n                        dispatchCallback('onContentSizeChanged', {\r\n                            width: _contentScrollSizeCache.w,\r\n                            height: _contentScrollSizeCache.h\r\n                        }, contentSizeChanged);\r\n                        dispatchCallback('onOverflowChanged', {\r\n                            x: hasOverflow.x,\r\n                            y: hasOverflow.y,\r\n                            xScrollable: hideOverflow.xs,\r\n                            yScrollable: hideOverflow.ys,\r\n                            clipped: hideOverflow.x || hideOverflow.y\r\n                        }, hasOverflow.c || hideOverflow.c);\r\n                        dispatchCallback('onOverflowAmountChanged', {\r\n                            x: overflowAmount.x,\r\n                            y: overflowAmount.y\r\n                        }, overflowAmount.c);\r\n                    }\r\n\r\n                    //fix body min size\r\n                    if (_isBody && _bodyMinSizeCache && (_hasOverflowCache.c || _bodyMinSizeCache.c)) {\r\n                        //its possible that no min size was measured until now, because the content arrange element was just added now, in this case, measure now the min size.\r\n                        if (!_bodyMinSizeCache.f)\r\n                            bodyMinSizeChanged();\r\n                        if (_nativeScrollbarIsOverlaid.y && _hasOverflowCache.x)\r\n                            _contentElement.css(_strMinMinus + _strWidth, _bodyMinSizeCache.w + _overlayScrollbarDummySize.y);\r\n                        if (_nativeScrollbarIsOverlaid.x && _hasOverflowCache.y)\r\n                            _contentElement.css(_strMinMinus + _strHeight, _bodyMinSizeCache.h + _overlayScrollbarDummySize.x);\r\n                        _bodyMinSizeCache.c = false;\r\n                    }\r\n\r\n                    if (_initialized && changedOptions.updateOnLoad) {\r\n                        updateElementsOnLoad();\r\n                    }\r\n\r\n                    //freezeResizeObserver(_sizeObserverElement, false);\r\n                    //freezeResizeObserver(_sizeAutoObserverElement, false);\r\n\r\n                    dispatchCallback('onUpdated', { forced: force });\r\n                }\r\n\r\n                /**\r\n                 * Updates the found elements of which the load event shall be handled.\r\n                 */\r\n                function updateElementsOnLoad() {\r\n                    if (!_isTextarea) {\r\n                        eachUpdateOnLoad(function (i, updateOnLoadSelector) {\r\n                            _contentElement.find(updateOnLoadSelector).each(function (i, el) {\r\n                                // if element doesn't have a updateOnLoadCallback applied\r\n                                if (COMPATIBILITY.inA(el, _updateOnLoadElms) < 0) {\r\n                                    _updateOnLoadElms.push(el);\r\n                                    FRAMEWORK(el)\r\n                                        .off(_updateOnLoadEventName, updateOnLoadCallback)\r\n                                        .on(_updateOnLoadEventName, updateOnLoadCallback);\r\n                                }\r\n                            });\r\n                        });\r\n                    }\r\n                }\r\n\r\n                //==== Options ====//\r\n\r\n                /**\r\n                 * Sets new options but doesn't call the update method.\r\n                 * @param newOptions The object which contains the new options.\r\n                 * @returns {*} A object which contains the changed options.\r\n                 */\r\n                function setOptions(newOptions) {\r\n                    var validatedOpts = _pluginsOptions._validate(newOptions, _pluginsOptions._template, true, _currentOptions)\r\n\r\n                    _currentOptions = extendDeep({}, _currentOptions, validatedOpts._default);\r\n                    _currentPreparedOptions = extendDeep({}, _currentPreparedOptions, validatedOpts._prepared);\r\n\r\n                    return validatedOpts._prepared;\r\n                }\r\n\r\n\r\n                //==== Structure ====//\r\n\r\n                /**\r\n                 * Builds or destroys the wrapper and helper DOM elements.\r\n                 * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n                 */\r\n                /**\r\n                 * Builds or destroys the wrapper and helper DOM elements.\r\n                 * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n                 */\r\n                function setupStructureDOM(destroy) {\r\n                    var strParent = 'parent';\r\n                    var classNameResizeObserverHost = 'os-resize-observer-host';\r\n                    var classNameTextareaElementFull = _classNameTextareaElement + _strSpace + _classNameTextInherit;\r\n                    var textareaClass = _isTextarea ? _strSpace + _classNameTextInherit : _strEmpty;\r\n                    var adoptAttrs = _currentPreparedOptions.textarea.inheritedAttrs;\r\n                    var adoptAttrsMap = {};\r\n                    var applyAdoptedAttrs = function () {\r\n                        var applyAdoptedAttrsElm = destroy ? _targetElement : _hostElement;\r\n                        each(adoptAttrsMap, function (key, value) {\r\n                            if (type(value) == TYPES.s) {\r\n                                if (key == LEXICON.c)\r\n                                    applyAdoptedAttrsElm.addClass(value);\r\n                                else\r\n                                    applyAdoptedAttrsElm.attr(key, value);\r\n                            }\r\n                        });\r\n                    };\r\n                    var hostElementClassNames = [\r\n                        _classNameHostElement,\r\n                        _classNameHostElementForeign,\r\n                        _classNameHostTextareaElement,\r\n                        _classNameHostResizeDisabled,\r\n                        _classNameHostRTL,\r\n                        _classNameHostScrollbarHorizontalHidden,\r\n                        _classNameHostScrollbarVerticalHidden,\r\n                        _classNameHostTransition,\r\n                        _classNameHostScrolling,\r\n                        _classNameHostOverflow,\r\n                        _classNameHostOverflowX,\r\n                        _classNameHostOverflowY,\r\n                        _classNameThemeNone,\r\n                        _classNameTextareaElement,\r\n                        _classNameTextInherit,\r\n                        _classNameCache].join(_strSpace);\r\n                    var hostElementCSS = {};\r\n\r\n                    //get host element as first element, because that's the most upper element and required for the other elements\r\n                    _hostElement = _hostElement || (_isTextarea ? (_domExists ? _targetElement[strParent]()[strParent]()[strParent]()[strParent]() : FRAMEWORK(generateDiv(_classNameHostTextareaElement))) : _targetElement);\r\n                    _contentElement = _contentElement || selectOrGenerateDivByClass(_classNameContentElement + textareaClass);\r\n                    _viewportElement = _viewportElement || selectOrGenerateDivByClass(_classNameViewportElement + textareaClass);\r\n                    _paddingElement = _paddingElement || selectOrGenerateDivByClass(_classNamePaddingElement + textareaClass);\r\n                    _sizeObserverElement = _sizeObserverElement || selectOrGenerateDivByClass(classNameResizeObserverHost);\r\n                    _textareaCoverElement = _textareaCoverElement || (_isTextarea ? selectOrGenerateDivByClass(_classNameTextareaCoverElement) : undefined);\r\n\r\n                    //add this class to workaround class changing issues with UI frameworks especially Vue\r\n                    if (_domExists)\r\n                        addClass(_hostElement, _classNameHostElementForeign);\r\n\r\n                    //on destroy, remove all generated class names from the host element before collecting the adopted attributes \r\n                    //to prevent adopting generated class names\r\n                    if (destroy)\r\n                        removeClass(_hostElement, hostElementClassNames);\r\n\r\n                    //collect all adopted attributes\r\n                    adoptAttrs = type(adoptAttrs) == TYPES.s ? adoptAttrs.split(_strSpace) : adoptAttrs;\r\n                    if (COMPATIBILITY.isA(adoptAttrs) && _isTextarea) {\r\n                        each(adoptAttrs, function (i, v) {\r\n                            if (type(v) == TYPES.s) {\r\n                                adoptAttrsMap[v] = destroy ? _hostElement.attr(v) : _targetElement.attr(v);\r\n                            }\r\n                        });\r\n                    }\r\n\r\n                    if (!destroy) {\r\n                        if (_isTextarea) {\r\n                            if (!_currentPreparedOptions.sizeAutoCapable) {\r\n                                hostElementCSS[_strWidth] = _targetElement.css(_strWidth);\r\n                                hostElementCSS[_strHeight] = _targetElement.css(_strHeight);\r\n                            }\r\n\r\n                            if (!_domExists)\r\n                                _targetElement.addClass(_classNameTextInherit).wrap(_hostElement);\r\n\r\n                            //jQuery clones elements in wrap functions, so we have to select them again\r\n                            _hostElement = _targetElement[strParent]().css(hostElementCSS);\r\n                        }\r\n\r\n                        if (!_domExists) {\r\n                            //add the correct class to the target element\r\n                            addClass(_targetElement, _isTextarea ? classNameTextareaElementFull : _classNameHostElement);\r\n\r\n                            //wrap the content into the generated elements to create the required DOM\r\n                            _hostElement.wrapInner(_contentElement)\r\n                                .wrapInner(_viewportElement)\r\n                                .wrapInner(_paddingElement)\r\n                                .prepend(_sizeObserverElement);\r\n\r\n                            //jQuery clones elements in wrap functions, so we have to select them again\r\n                            _contentElement = findFirst(_hostElement, _strDot + _classNameContentElement);\r\n                            _viewportElement = findFirst(_hostElement, _strDot + _classNameViewportElement);\r\n                            _paddingElement = findFirst(_hostElement, _strDot + _classNamePaddingElement);\r\n\r\n                            if (_isTextarea) {\r\n                                _contentElement.prepend(_textareaCoverElement);\r\n                                applyAdoptedAttrs();\r\n                            }\r\n                        }\r\n\r\n                        if (_nativeScrollbarStyling)\r\n                            addClass(_viewportElement, _classNameViewportNativeScrollbarsInvisible);\r\n                        if (_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y)\r\n                            addClass(_viewportElement, _classNameViewportNativeScrollbarsOverlaid);\r\n                        if (_isBody)\r\n                            addClass(_htmlElement, _classNameHTMLElement);\r\n\r\n                        _sizeObserverElementNative = _sizeObserverElement[0];\r\n                        _hostElementNative = _hostElement[0];\r\n                        _paddingElementNative = _paddingElement[0];\r\n                        _viewportElementNative = _viewportElement[0];\r\n                        _contentElementNative = _contentElement[0];\r\n\r\n                        updateViewportAttrsFromTarget();\r\n                    }\r\n                    else {\r\n                        if (_domExists && _initialized) {\r\n                            //clear size observer\r\n                            _sizeObserverElement.children().remove();\r\n\r\n                            //remove the style property and classes from already generated elements\r\n                            each([_paddingElement, _viewportElement, _contentElement, _textareaCoverElement], function (i, elm) {\r\n                                if (elm) {\r\n                                    removeClass(elm.removeAttr(LEXICON.s), _classNamesDynamicDestroy);\r\n                                }\r\n                            });\r\n\r\n                            //add classes to the host element which was removed previously to match the expected DOM\r\n                            addClass(_hostElement, _isTextarea ? _classNameHostTextareaElement : _classNameHostElement);\r\n                        }\r\n                        else {\r\n                            //remove size observer\r\n                            remove(_sizeObserverElement);\r\n\r\n                            //unwrap the content to restore DOM\r\n                            _contentElement.contents()\r\n                                .unwrap()\r\n                                .unwrap()\r\n                                .unwrap();\r\n\r\n                            if (_isTextarea) {\r\n                                _targetElement.unwrap();\r\n                                remove(_hostElement);\r\n                                remove(_textareaCoverElement);\r\n                                applyAdoptedAttrs();\r\n                            }\r\n                        }\r\n\r\n                        if (_isTextarea)\r\n                            _targetElement.removeAttr(LEXICON.s);\r\n\r\n                        if (_isBody)\r\n                            removeClass(_htmlElement, _classNameHTMLElement);\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Adds or removes all wrapper elements interactivity events.\r\n                 * @param destroy Indicates whether the Events shall be added or removed.\r\n                 */\r\n                function setupStructureEvents() {\r\n                    var textareaKeyDownRestrictedKeyCodes = [\r\n                        112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123,    //F1 to F12\r\n                        33, 34,                                                   //page up, page down\r\n                        37, 38, 39, 40,                                           //left, up, right, down arrows\r\n                        16, 17, 18, 19, 20, 144                                   //Shift, Ctrl, Alt, Pause, CapsLock, NumLock\r\n                    ];\r\n                    var textareaKeyDownKeyCodesList = [];\r\n                    var textareaUpdateIntervalID;\r\n                    var scrollStopTimeoutId;\r\n                    var scrollStopDelay = 175;\r\n                    var strFocus = 'focus';\r\n\r\n                    function updateTextarea(doClearInterval) {\r\n                        textareaUpdate();\r\n                        _base.update(_strAuto);\r\n                        if (doClearInterval && _autoUpdateRecommended)\r\n                            clearInterval(textareaUpdateIntervalID);\r\n                    }\r\n                    function textareaOnScroll(event) {\r\n                        _targetElement[_strScrollLeft](_rtlScrollBehavior.i && _normalizeRTLCache ? 9999999 : 0);\r\n                        _targetElement[_strScrollTop](0);\r\n                        COMPATIBILITY.prvD(event);\r\n                        COMPATIBILITY.stpP(event);\r\n                        return false;\r\n                    }\r\n                    function textareaOnDrop(event) {\r\n                        setTimeout(function () {\r\n                            if (!_destroyed)\r\n                                updateTextarea();\r\n                        }, 50);\r\n                    }\r\n                    function textareaOnFocus() {\r\n                        _textareaHasFocus = true;\r\n                        addClass(_hostElement, strFocus);\r\n                    }\r\n                    function textareaOnFocusout() {\r\n                        _textareaHasFocus = false;\r\n                        textareaKeyDownKeyCodesList = [];\r\n                        removeClass(_hostElement, strFocus);\r\n                        updateTextarea(true);\r\n                    }\r\n                    function textareaOnKeyDown(event) {\r\n                        var keyCode = event.keyCode;\r\n\r\n                        if (inArray(keyCode, textareaKeyDownRestrictedKeyCodes) < 0) {\r\n                            if (!textareaKeyDownKeyCodesList[LEXICON.l]) {\r\n                                updateTextarea();\r\n                                textareaUpdateIntervalID = setInterval(updateTextarea, 1000 / 60);\r\n                            }\r\n                            if (inArray(keyCode, textareaKeyDownKeyCodesList) < 0)\r\n                                textareaKeyDownKeyCodesList.push(keyCode);\r\n                        }\r\n                    }\r\n                    function textareaOnKeyUp(event) {\r\n                        var keyCode = event.keyCode;\r\n                        var index = inArray(keyCode, textareaKeyDownKeyCodesList);\r\n\r\n                        if (inArray(keyCode, textareaKeyDownRestrictedKeyCodes) < 0) {\r\n                            if (index > -1)\r\n                                textareaKeyDownKeyCodesList.splice(index, 1);\r\n                            if (!textareaKeyDownKeyCodesList[LEXICON.l])\r\n                                updateTextarea(true);\r\n                        }\r\n                    }\r\n                    function contentOnTransitionEnd(event) {\r\n                        if (_autoUpdateCache === true)\r\n                            return;\r\n                        event = event.originalEvent || event;\r\n                        if (isSizeAffectingCSSProperty(event.propertyName))\r\n                            _base.update(_strAuto);\r\n                    }\r\n                    function viewportOnScroll(event) {\r\n                        if (!_sleeping) {\r\n                            if (scrollStopTimeoutId !== undefined)\r\n                                clearTimeout(scrollStopTimeoutId);\r\n                            else {\r\n                                if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove)\r\n                                    refreshScrollbarsAutoHide(true);\r\n\r\n                                if (!nativeOverlayScrollbarsAreActive())\r\n                                    addClass(_hostElement, _classNameHostScrolling);\r\n\r\n                                dispatchCallback('onScrollStart', event);\r\n                            }\r\n\r\n                            //if a scrollbars handle gets dragged, the mousemove event is responsible for refreshing the handle offset\r\n                            //because if CSS scroll-snap is used, the handle offset gets only refreshed on every snap point\r\n                            //this looks laggy & clunky, it looks much better if the offset refreshes with the mousemove\r\n                            if (!_scrollbarsHandlesDefineScrollPos) {\r\n                                refreshScrollbarHandleOffset(true);\r\n                                refreshScrollbarHandleOffset(false);\r\n                            }\r\n                            dispatchCallback('onScroll', event);\r\n\r\n                            scrollStopTimeoutId = setTimeout(function () {\r\n                                if (!_destroyed) {\r\n                                    //OnScrollStop:\r\n                                    clearTimeout(scrollStopTimeoutId);\r\n                                    scrollStopTimeoutId = undefined;\r\n\r\n                                    if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove)\r\n                                        refreshScrollbarsAutoHide(false);\r\n\r\n                                    if (!nativeOverlayScrollbarsAreActive())\r\n                                        removeClass(_hostElement, _classNameHostScrolling);\r\n\r\n                                    dispatchCallback('onScrollStop', event);\r\n                                }\r\n                            }, scrollStopDelay);\r\n                        }\r\n                    }\r\n\r\n\r\n                    if (_isTextarea) {\r\n                        if (_msieVersion > 9 || !_autoUpdateRecommended) {\r\n                            addDestroyEventListener(_targetElement, 'input', updateTextarea);\r\n                        }\r\n                        else {\r\n                            addDestroyEventListener(_targetElement,\r\n                                [_strKeyDownEvent, _strKeyUpEvent],\r\n                                [textareaOnKeyDown, textareaOnKeyUp]);\r\n                        }\r\n\r\n                        addDestroyEventListener(_targetElement,\r\n                            [_strScroll, 'drop', strFocus, strFocus + 'out'],\r\n                            [textareaOnScroll, textareaOnDrop, textareaOnFocus, textareaOnFocusout]);\r\n                    }\r\n                    else {\r\n                        addDestroyEventListener(_contentElement, _strTransitionEndEvent, contentOnTransitionEnd);\r\n                    }\r\n                    addDestroyEventListener(_viewportElement, _strScroll, viewportOnScroll, true);\r\n                }\r\n\r\n\r\n                //==== Scrollbars ====//\r\n\r\n                /**\r\n                 * Builds or destroys all scrollbar DOM elements (scrollbar, track, handle)\r\n                 * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n                 */\r\n                function setupScrollbarsDOM(destroy) {\r\n                    var selectOrGenerateScrollbarDOM = function (isHorizontal) {\r\n                        var scrollbarClassName = isHorizontal ? _classNameScrollbarHorizontal : _classNameScrollbarVertical;\r\n                        var scrollbar = selectOrGenerateDivByClass(_classNameScrollbar + _strSpace + scrollbarClassName, true);\r\n                        var track = selectOrGenerateDivByClass(_classNameScrollbarTrack, scrollbar);\r\n                        var handle = selectOrGenerateDivByClass(_classNameScrollbarHandle, scrollbar);\r\n\r\n                        if (!_domExists && !destroy) {\r\n                            scrollbar.append(track);\r\n                            track.append(handle);\r\n                        }\r\n\r\n                        return {\r\n                            _scrollbar: scrollbar,\r\n                            _track: track,\r\n                            _handle: handle\r\n                        };\r\n                    };\r\n                    function resetScrollbarDOM(isHorizontal) {\r\n                        var scrollbarVars = getScrollbarVars(isHorizontal);\r\n                        var scrollbar = scrollbarVars._scrollbar;\r\n                        var track = scrollbarVars._track;\r\n                        var handle = scrollbarVars._handle;\r\n\r\n                        if (_domExists && _initialized) {\r\n                            each([scrollbar, track, handle], function (i, elm) {\r\n                                removeClass(elm.removeAttr(LEXICON.s), _classNamesDynamicDestroy);\r\n                            });\r\n                        }\r\n                        else {\r\n                            remove(scrollbar || selectOrGenerateScrollbarDOM(isHorizontal)._scrollbar);\r\n                        }\r\n                    }\r\n                    var horizontalElements;\r\n                    var verticalElements;\r\n\r\n                    if (!destroy) {\r\n                        horizontalElements = selectOrGenerateScrollbarDOM(true);\r\n                        verticalElements = selectOrGenerateScrollbarDOM();\r\n\r\n                        _scrollbarHorizontalElement = horizontalElements._scrollbar;\r\n                        _scrollbarHorizontalTrackElement = horizontalElements._track;\r\n                        _scrollbarHorizontalHandleElement = horizontalElements._handle;\r\n                        _scrollbarVerticalElement = verticalElements._scrollbar;\r\n                        _scrollbarVerticalTrackElement = verticalElements._track;\r\n                        _scrollbarVerticalHandleElement = verticalElements._handle;\r\n\r\n                        if (!_domExists) {\r\n                            _paddingElement.after(_scrollbarVerticalElement);\r\n                            _paddingElement.after(_scrollbarHorizontalElement);\r\n                        }\r\n                    }\r\n                    else {\r\n                        resetScrollbarDOM(true);\r\n                        resetScrollbarDOM();\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Initializes all scrollbar interactivity events. (track and handle dragging, clicking, scrolling)\r\n                 * @param isHorizontal True if the target scrollbar is the horizontal scrollbar, false if the target scrollbar is the vertical scrollbar.\r\n                 */\r\n                function setupScrollbarEvents(isHorizontal) {\r\n                    var scrollbarVars = getScrollbarVars(isHorizontal);\r\n                    var scrollbarVarsInfo = scrollbarVars._info;\r\n                    var insideIFrame = _windowElementNative.top !== _windowElementNative;\r\n                    var xy = scrollbarVars._x_y;\r\n                    var XY = scrollbarVars._X_Y;\r\n                    var scroll = _strScroll + scrollbarVars._Left_Top;\r\n                    var strActive = 'active';\r\n                    var strSnapHandle = 'snapHandle';\r\n                    var strClickEvent = 'click';\r\n                    var scrollDurationFactor = 1;\r\n                    var increaseDecreaseScrollAmountKeyCodes = [16, 17]; //shift, ctrl\r\n                    var trackTimeout;\r\n                    var mouseDownScroll;\r\n                    var mouseDownOffset;\r\n                    var mouseDownInvertedScale;\r\n\r\n                    function getPointerPosition(event) {\r\n                        return _msieVersion && insideIFrame ? event['screen' + XY] : COMPATIBILITY.page(event)[xy]; //use screen coordinates in EDGE & IE because the page values are incorrect in frames.\r\n                    }\r\n                    function getPreparedScrollbarsOption(name) {\r\n                        return _currentPreparedOptions.scrollbars[name];\r\n                    }\r\n                    function increaseTrackScrollAmount() {\r\n                        scrollDurationFactor = 0.5;\r\n                    }\r\n                    function decreaseTrackScrollAmount() {\r\n                        scrollDurationFactor = 1;\r\n                    }\r\n                    function stopClickEventPropagation(event) {\r\n                        COMPATIBILITY.stpP(event);\r\n                    }\r\n                    function documentKeyDown(event) {\r\n                        if (inArray(event.keyCode, increaseDecreaseScrollAmountKeyCodes) > -1)\r\n                            increaseTrackScrollAmount();\r\n                    }\r\n                    function documentKeyUp(event) {\r\n                        if (inArray(event.keyCode, increaseDecreaseScrollAmountKeyCodes) > -1)\r\n                            decreaseTrackScrollAmount();\r\n                    }\r\n                    function onMouseTouchDownContinue(event) {\r\n                        var originalEvent = event.originalEvent || event;\r\n                        var isTouchEvent = originalEvent.touches !== undefined;\r\n                        return _sleeping || _destroyed || nativeOverlayScrollbarsAreActive() || !_scrollbarsDragScrollingCache || (isTouchEvent && !getPreparedScrollbarsOption('touchSupport')) ? false : COMPATIBILITY.mBtn(event) === 1 || isTouchEvent;\r\n                    }\r\n                    function documentDragMove(event) {\r\n                        if (onMouseTouchDownContinue(event)) {\r\n                            var trackLength = scrollbarVarsInfo._trackLength;\r\n                            var handleLength = scrollbarVarsInfo._handleLength;\r\n                            var scrollRange = scrollbarVarsInfo._maxScroll;\r\n                            var scrollRaw = (getPointerPosition(event) - mouseDownOffset) * mouseDownInvertedScale;\r\n                            var scrollDeltaPercent = scrollRaw / (trackLength - handleLength);\r\n                            var scrollDelta = (scrollRange * scrollDeltaPercent);\r\n                            scrollDelta = isFinite(scrollDelta) ? scrollDelta : 0;\r\n                            if (_isRTL && isHorizontal && !_rtlScrollBehavior.i)\r\n                                scrollDelta *= -1;\r\n\r\n                            _viewportElement[scroll](MATH.round(mouseDownScroll + scrollDelta));\r\n\r\n                            if (_scrollbarsHandlesDefineScrollPos)\r\n                                refreshScrollbarHandleOffset(isHorizontal, mouseDownScroll + scrollDelta);\r\n\r\n                            if (!_supportPassiveEvents)\r\n                                COMPATIBILITY.prvD(event);\r\n                        }\r\n                        else\r\n                            documentMouseTouchUp(event);\r\n                    }\r\n                    function documentMouseTouchUp(event) {\r\n                        event = event || event.originalEvent;\r\n\r\n                        setupResponsiveEventListener(_documentElement,\r\n                            [_strMouseTouchMoveEvent, _strMouseTouchUpEvent, _strKeyDownEvent, _strKeyUpEvent, _strSelectStartEvent],\r\n                            [documentDragMove, documentMouseTouchUp, documentKeyDown, documentKeyUp, documentOnSelectStart],\r\n                            true);\r\n                        COMPATIBILITY.rAF()(function() {\r\n                            setupResponsiveEventListener(_documentElement, strClickEvent, stopClickEventPropagation, true, { _capture: true });\r\n                        });\r\n                        \r\n                            \r\n                        if (_scrollbarsHandlesDefineScrollPos)\r\n                            refreshScrollbarHandleOffset(isHorizontal, true);\r\n\r\n                        _scrollbarsHandlesDefineScrollPos = false;\r\n                        removeClass(_bodyElement, _classNameDragging);\r\n                        removeClass(scrollbarVars._handle, strActive);\r\n                        removeClass(scrollbarVars._track, strActive);\r\n                        removeClass(scrollbarVars._scrollbar, strActive);\r\n\r\n                        mouseDownScroll = undefined;\r\n                        mouseDownOffset = undefined;\r\n                        mouseDownInvertedScale = 1;\r\n\r\n                        decreaseTrackScrollAmount();\r\n\r\n                        if (trackTimeout !== undefined) {\r\n                            _base.scrollStop();\r\n                            clearTimeout(trackTimeout);\r\n                            trackTimeout = undefined;\r\n                        }\r\n\r\n                        if (event) {\r\n                            var rect = _hostElementNative[LEXICON.bCR]();\r\n                            var mouseInsideHost = event.clientX >= rect.left && event.clientX <= rect.right && event.clientY >= rect.top && event.clientY <= rect.bottom;\r\n\r\n                            //if mouse is outside host element\r\n                            if (!mouseInsideHost)\r\n                                hostOnMouseLeave();\r\n\r\n                            if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove)\r\n                                refreshScrollbarsAutoHide(false);\r\n                        }\r\n                    }\r\n                    function onHandleMouseTouchDown(event) {\r\n                        if (onMouseTouchDownContinue(event))\r\n                            onHandleMouseTouchDownAction(event);\r\n                    }\r\n                    function onHandleMouseTouchDownAction(event) {\r\n                        mouseDownScroll = _viewportElement[scroll]();\r\n                        mouseDownScroll = isNaN(mouseDownScroll) ? 0 : mouseDownScroll;\r\n                        if (_isRTL && isHorizontal && !_rtlScrollBehavior.n || !_isRTL)\r\n                            mouseDownScroll = mouseDownScroll < 0 ? 0 : mouseDownScroll;\r\n\r\n                        mouseDownInvertedScale = getHostElementInvertedScale()[xy];\r\n                        mouseDownOffset = getPointerPosition(event);\r\n\r\n                        _scrollbarsHandlesDefineScrollPos = !getPreparedScrollbarsOption(strSnapHandle);\r\n                        addClass(_bodyElement, _classNameDragging);\r\n                        addClass(scrollbarVars._handle, strActive);\r\n                        addClass(scrollbarVars._scrollbar, strActive);\r\n\r\n                        setupResponsiveEventListener(_documentElement,\r\n                            [_strMouseTouchMoveEvent, _strMouseTouchUpEvent, _strSelectStartEvent],\r\n                            [documentDragMove, documentMouseTouchUp, documentOnSelectStart]);\r\n                        COMPATIBILITY.rAF()(function() {\r\n                            setupResponsiveEventListener(_documentElement, strClickEvent, stopClickEventPropagation, false, { _capture: true });\r\n                        });\r\n                        \r\n\r\n                        if (_msieVersion || !_documentMixed)\r\n                            COMPATIBILITY.prvD(event);\r\n                        COMPATIBILITY.stpP(event);\r\n                    }\r\n                    function onTrackMouseTouchDown(event) {\r\n                        if (onMouseTouchDownContinue(event)) {\r\n                            var handleToViewportRatio = scrollbarVars._info._handleLength / Math.round(MATH.min(1, _viewportSize[scrollbarVars._w_h] / _contentScrollSizeCache[scrollbarVars._w_h]) * scrollbarVars._info._trackLength);\r\n                            var scrollDistance = MATH.round(_viewportSize[scrollbarVars._w_h] * handleToViewportRatio);\r\n                            var scrollBaseDuration = 270 * handleToViewportRatio;\r\n                            var scrollFirstIterationDelay = 400 * handleToViewportRatio;\r\n                            var trackOffset = scrollbarVars._track.offset()[scrollbarVars._left_top];\r\n                            var ctrlKey = event.ctrlKey;\r\n                            var instantScroll = event.shiftKey;\r\n                            var instantScrollTransition = instantScroll && ctrlKey;\r\n                            var isFirstIteration = true;\r\n                            var easing = 'linear';\r\n                            var decreaseScroll;\r\n                            var finishedCondition;\r\n                            var scrollActionFinsished = function (transition) {\r\n                                if (_scrollbarsHandlesDefineScrollPos)\r\n                                    refreshScrollbarHandleOffset(isHorizontal, transition);\r\n                            };\r\n                            var scrollActionInstantFinished = function () {\r\n                                scrollActionFinsished();\r\n                                onHandleMouseTouchDownAction(event);\r\n                            };\r\n                            var scrollAction = function () {\r\n                                if (!_destroyed) {\r\n                                    var mouseOffset = (mouseDownOffset - trackOffset) * mouseDownInvertedScale;\r\n                                    var handleOffset = scrollbarVarsInfo._handleOffset;\r\n                                    var trackLength = scrollbarVarsInfo._trackLength;\r\n                                    var handleLength = scrollbarVarsInfo._handleLength;\r\n                                    var scrollRange = scrollbarVarsInfo._maxScroll;\r\n                                    var currScroll = scrollbarVarsInfo._currentScroll;\r\n                                    var scrollDuration = scrollBaseDuration * scrollDurationFactor;\r\n                                    var timeoutDelay = isFirstIteration ? MATH.max(scrollFirstIterationDelay, scrollDuration) : scrollDuration;\r\n                                    var instantScrollPosition = scrollRange * ((mouseOffset - (handleLength / 2)) / (trackLength - handleLength)); // 100% * positionPercent\r\n                                    var rtlIsNormal = _isRTL && isHorizontal && ((!_rtlScrollBehavior.i && !_rtlScrollBehavior.n) || _normalizeRTLCache);\r\n                                    var decreaseScrollCondition = rtlIsNormal ? handleOffset < mouseOffset : handleOffset > mouseOffset;\r\n                                    var scrollObj = {};\r\n                                    var animationObj = {\r\n                                        easing: easing,\r\n                                        step: function (now) {\r\n                                            if (_scrollbarsHandlesDefineScrollPos) {\r\n                                                _viewportElement[scroll](now); //https://github.com/jquery/jquery/issues/4340\r\n                                                refreshScrollbarHandleOffset(isHorizontal, now);\r\n                                            }\r\n                                        }\r\n                                    };\r\n                                    instantScrollPosition = isFinite(instantScrollPosition) ? instantScrollPosition : 0;\r\n                                    instantScrollPosition = _isRTL && isHorizontal && !_rtlScrollBehavior.i ? (scrollRange - instantScrollPosition) : instantScrollPosition;\r\n\r\n                                    //_base.scrollStop();\r\n\r\n                                    if (instantScroll) {\r\n                                        _viewportElement[scroll](instantScrollPosition); //scroll instantly to new position\r\n                                        if (instantScrollTransition) {\r\n                                            //get the scroll position after instant scroll (in case CSS Snap Points are used) to get the correct snapped scroll position\r\n                                            //and the animation stops at the correct point\r\n                                            instantScrollPosition = _viewportElement[scroll]();\r\n                                            //scroll back to the position before instant scrolling so animation can be performed\r\n                                            _viewportElement[scroll](currScroll);\r\n\r\n                                            instantScrollPosition = rtlIsNormal && _rtlScrollBehavior.i ? (scrollRange - instantScrollPosition) : instantScrollPosition;\r\n                                            instantScrollPosition = rtlIsNormal && _rtlScrollBehavior.n ? -instantScrollPosition : instantScrollPosition;\r\n\r\n                                            scrollObj[xy] = instantScrollPosition;\r\n                                            _base.scroll(scrollObj, extendDeep(animationObj, {\r\n                                                duration: 130,\r\n                                                complete: scrollActionInstantFinished\r\n                                            }));\r\n                                        }\r\n                                        else\r\n                                            scrollActionInstantFinished();\r\n                                    }\r\n                                    else {\r\n                                        decreaseScroll = isFirstIteration ? decreaseScrollCondition : decreaseScroll;\r\n                                        finishedCondition = rtlIsNormal\r\n                                            ? (decreaseScroll ? handleOffset + handleLength >= mouseOffset : handleOffset <= mouseOffset)\r\n                                            : (decreaseScroll ? handleOffset <= mouseOffset : handleOffset + handleLength >= mouseOffset);\r\n\r\n                                        if (finishedCondition) {\r\n                                            clearTimeout(trackTimeout);\r\n                                            _base.scrollStop();\r\n                                            trackTimeout = undefined;\r\n                                            scrollActionFinsished(true);\r\n                                        }\r\n                                        else {\r\n                                            trackTimeout = setTimeout(scrollAction, timeoutDelay);\r\n\r\n                                            scrollObj[xy] = (decreaseScroll ? '-=' : '+=') + scrollDistance;\r\n                                            _base.scroll(scrollObj, extendDeep(animationObj, {\r\n                                                duration: scrollDuration\r\n                                            }));\r\n                                        }\r\n                                        isFirstIteration = false;\r\n                                    }\r\n                                }\r\n                            };\r\n                            if (ctrlKey)\r\n                                increaseTrackScrollAmount();\r\n\r\n                            mouseDownInvertedScale = getHostElementInvertedScale()[xy];\r\n                            mouseDownOffset = COMPATIBILITY.page(event)[xy];\r\n\r\n                            _scrollbarsHandlesDefineScrollPos = !getPreparedScrollbarsOption(strSnapHandle);\r\n                            addClass(_bodyElement, _classNameDragging);\r\n                            addClass(scrollbarVars._track, strActive);\r\n                            addClass(scrollbarVars._scrollbar, strActive);\r\n\r\n                            setupResponsiveEventListener(_documentElement,\r\n                                [_strMouseTouchUpEvent, _strKeyDownEvent, _strKeyUpEvent, _strSelectStartEvent],\r\n                                [documentMouseTouchUp, documentKeyDown, documentKeyUp, documentOnSelectStart]);\r\n\r\n                            scrollAction();\r\n                            COMPATIBILITY.prvD(event);\r\n                            COMPATIBILITY.stpP(event);\r\n                        }\r\n                    }\r\n                    function onTrackMouseTouchEnter(event) {\r\n                        //make sure both scrollbars will stay visible if one scrollbar is hovered if autoHide is \"scroll\" or \"move\".\r\n                        _scrollbarsHandleHovered = true;\r\n                        if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove)\r\n                            refreshScrollbarsAutoHide(true);\r\n                    }\r\n                    function onTrackMouseTouchLeave(event) {\r\n                        _scrollbarsHandleHovered = false;\r\n                        if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove)\r\n                            refreshScrollbarsAutoHide(false);\r\n                    }\r\n                    function onScrollbarMouseTouchDown(event) {\r\n                        COMPATIBILITY.stpP(event);\r\n                    }\r\n\r\n                    addDestroyEventListener(scrollbarVars._handle,\r\n                        _strMouseTouchDownEvent,\r\n                        onHandleMouseTouchDown);\r\n                    addDestroyEventListener(scrollbarVars._track,\r\n                        [_strMouseTouchDownEvent, _strMouseEnter, _strMouseLeave],\r\n                        [onTrackMouseTouchDown, onTrackMouseTouchEnter, onTrackMouseTouchLeave]);\r\n                    addDestroyEventListener(scrollbarVars._scrollbar,\r\n                        _strMouseTouchDownEvent,\r\n                        onScrollbarMouseTouchDown);\r\n\r\n                    if (_supportTransition) {\r\n                        addDestroyEventListener(scrollbarVars._scrollbar, _strTransitionEndEvent, function (event) {\r\n                            if (event.target !== scrollbarVars._scrollbar[0])\r\n                                return;\r\n                            refreshScrollbarHandleLength(isHorizontal);\r\n                            refreshScrollbarHandleOffset(isHorizontal);\r\n                        });\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Shows or hides the given scrollbar and applied a class name which indicates if the scrollbar is scrollable or not.\r\n                 * @param isHorizontal True if the horizontal scrollbar is the target, false if the vertical scrollbar is the target.\r\n                 * @param shallBeVisible True if the scrollbar shall be shown, false if hidden.\r\n                 * @param canScroll True if the scrollbar is scrollable, false otherwise.\r\n                 */\r\n                function refreshScrollbarAppearance(isHorizontal, shallBeVisible, canScroll) {\r\n                    var scrollbarHiddenClassName = isHorizontal ? _classNameHostScrollbarHorizontalHidden : _classNameHostScrollbarVerticalHidden;\r\n                    var scrollbarElement = isHorizontal ? _scrollbarHorizontalElement : _scrollbarVerticalElement;\r\n\r\n                    addRemoveClass(_hostElement, scrollbarHiddenClassName, !shallBeVisible);\r\n                    addRemoveClass(scrollbarElement, _classNameScrollbarUnusable, !canScroll);\r\n                }\r\n\r\n                /**\r\n                 * Autoshows / autohides both scrollbars with.\r\n                 * @param shallBeVisible True if the scrollbars shall be autoshown (only the case if they are hidden by a autohide), false if the shall be auto hidden.\r\n                 * @param delayfree True if the scrollbars shall be hidden without a delay, false or undefined otherwise.\r\n                 */\r\n                function refreshScrollbarsAutoHide(shallBeVisible, delayfree) {\r\n                    clearTimeout(_scrollbarsAutoHideTimeoutId);\r\n                    if (shallBeVisible) {\r\n                        //if(_hasOverflowCache.x && _hideOverflowCache.xs)\r\n                        removeClass(_scrollbarHorizontalElement, _classNameScrollbarAutoHidden);\r\n                        //if(_hasOverflowCache.y && _hideOverflowCache.ys)\r\n                        removeClass(_scrollbarVerticalElement, _classNameScrollbarAutoHidden);\r\n                    }\r\n                    else {\r\n                        var anyActive;\r\n                        var strActive = 'active';\r\n                        var hide = function () {\r\n                            if (!_scrollbarsHandleHovered && !_destroyed) {\r\n                                anyActive = _scrollbarHorizontalHandleElement.hasClass(strActive) || _scrollbarVerticalHandleElement.hasClass(strActive);\r\n                                if (!anyActive && (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove || _scrollbarsAutoHideLeave))\r\n                                    addClass(_scrollbarHorizontalElement, _classNameScrollbarAutoHidden);\r\n                                if (!anyActive && (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove || _scrollbarsAutoHideLeave))\r\n                                    addClass(_scrollbarVerticalElement, _classNameScrollbarAutoHidden);\r\n                            }\r\n                        };\r\n                        if (_scrollbarsAutoHideDelay > 0 && delayfree !== true)\r\n                            _scrollbarsAutoHideTimeoutId = setTimeout(hide, _scrollbarsAutoHideDelay);\r\n                        else\r\n                            hide();\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Refreshes the handle length of the given scrollbar.\r\n                 * @param isHorizontal True if the horizontal scrollbar handle shall be refreshed, false if the vertical one shall be refreshed.\r\n                 */\r\n                function refreshScrollbarHandleLength(isHorizontal) {\r\n                    var handleCSS = {};\r\n                    var scrollbarVars = getScrollbarVars(isHorizontal);\r\n                    var scrollbarVarsInfo = scrollbarVars._info;\r\n                    var digit = 1000000;\r\n                    //get and apply intended handle length\r\n                    var handleRatio = MATH.min(1, _viewportSize[scrollbarVars._w_h] / _contentScrollSizeCache[scrollbarVars._w_h]);\r\n                    handleCSS[scrollbarVars._width_height] = (MATH.floor(handleRatio * 100 * digit) / digit) + '%'; //the last * digit / digit is for flooring to the 4th digit\r\n\r\n                    if (!nativeOverlayScrollbarsAreActive())\r\n                        scrollbarVars._handle.css(handleCSS);\r\n\r\n                    //measure the handle length to respect min & max length\r\n                    scrollbarVarsInfo._handleLength = scrollbarVars._handle[0]['offset' + scrollbarVars._Width_Height];\r\n                    scrollbarVarsInfo._handleLengthRatio = handleRatio;\r\n                }\r\n\r\n                /**\r\n                 * Refreshes the handle offset of the given scrollbar.\r\n                 * @param isHorizontal True if the horizontal scrollbar handle shall be refreshed, false if the vertical one shall be refreshed.\r\n                 * @param scrollOrTransition The scroll position of the given scrollbar axis to which the handle shall be moved or a boolean which indicates whether a transition shall be applied. If undefined or boolean if the current scroll-offset is taken. (if isHorizontal ? scrollLeft : scrollTop)\r\n                 */\r\n                function refreshScrollbarHandleOffset(isHorizontal, scrollOrTransition) {\r\n                    var transition = type(scrollOrTransition) == TYPES.b;\r\n                    var transitionDuration = 250;\r\n                    var isRTLisHorizontal = _isRTL && isHorizontal;\r\n                    var scrollbarVars = getScrollbarVars(isHorizontal);\r\n                    var scrollbarVarsInfo = scrollbarVars._info;\r\n                    var strTranslateBrace = 'translate(';\r\n                    var strTransform = VENDORS._cssProperty('transform');\r\n                    var strTransition = VENDORS._cssProperty('transition');\r\n                    var nativeScroll = isHorizontal ? _viewportElement[_strScrollLeft]() : _viewportElement[_strScrollTop]();\r\n                    var currentScroll = scrollOrTransition === undefined || transition ? nativeScroll : scrollOrTransition;\r\n\r\n                    //measure the handle length to respect min & max length\r\n                    var handleLength = scrollbarVarsInfo._handleLength;\r\n                    var trackLength = scrollbarVars._track[0]['offset' + scrollbarVars._Width_Height];\r\n                    var handleTrackDiff = trackLength - handleLength;\r\n                    var handleCSS = {};\r\n                    var transformOffset;\r\n                    var translateValue;\r\n\r\n                    //DONT use the variable '_contentScrollSizeCache[scrollbarVars._w_h]' instead of '_viewportElement[0]['scroll' + scrollbarVars._Width_Height]'\r\n                    // because its a bit behind during the small delay when content size updates\r\n                    //(delay = mutationObserverContentLag, if its 0 then this var could be used)\r\n                    var maxScroll = (_viewportElementNative[_strScroll + scrollbarVars._Width_Height] - _viewportElementNative['client' + scrollbarVars._Width_Height]) * (_rtlScrollBehavior.n && isRTLisHorizontal ? -1 : 1); //* -1 if rtl scroll max is negative\r\n                    var getScrollRatio = function (base) {\r\n                        return isNaN(base / maxScroll) ? 0 : MATH.max(0, MATH.min(1, base / maxScroll));\r\n                    };\r\n                    var getHandleOffset = function (scrollRatio) {\r\n                        var offset = handleTrackDiff * scrollRatio;\r\n                        offset = isNaN(offset) ? 0 : offset;\r\n                        offset = (isRTLisHorizontal && !_rtlScrollBehavior.i) ? (trackLength - handleLength - offset) : offset;\r\n                        offset = MATH.max(0, offset);\r\n                        return offset;\r\n                    };\r\n                    var scrollRatio = getScrollRatio(nativeScroll);\r\n                    var unsnappedScrollRatio = getScrollRatio(currentScroll);\r\n                    var handleOffset = getHandleOffset(unsnappedScrollRatio);\r\n                    var snappedHandleOffset = getHandleOffset(scrollRatio);\r\n\r\n                    scrollbarVarsInfo._maxScroll = maxScroll;\r\n                    scrollbarVarsInfo._currentScroll = nativeScroll;\r\n                    scrollbarVarsInfo._currentScrollRatio = scrollRatio;\r\n\r\n                    if (_supportTransform) {\r\n                        transformOffset = isRTLisHorizontal ? -(trackLength - handleLength - handleOffset) : handleOffset; //in px\r\n                        //transformOffset = (transformOffset / trackLength * 100) * (trackLength / handleLength); //in %\r\n                        translateValue = isHorizontal ? strTranslateBrace + transformOffset + 'px, 0)' : strTranslateBrace + '0, ' + transformOffset + 'px)';\r\n\r\n                        handleCSS[strTransform] = translateValue;\r\n\r\n                        //apply or clear up transition\r\n                        if (_supportTransition)\r\n                            handleCSS[strTransition] = transition && MATH.abs(handleOffset - scrollbarVarsInfo._handleOffset) > 1 ? getCSSTransitionString(scrollbarVars._handle) + ', ' + (strTransform + _strSpace + transitionDuration + 'ms') : _strEmpty;\r\n                    }\r\n                    else\r\n                        handleCSS[scrollbarVars._left_top] = handleOffset;\r\n\r\n\r\n                    //only apply css if offset has changed and overflow exists.\r\n                    if (!nativeOverlayScrollbarsAreActive()) {\r\n                        scrollbarVars._handle.css(handleCSS);\r\n\r\n                        //clear up transition\r\n                        if (_supportTransform && _supportTransition && transition) {\r\n                            scrollbarVars._handle.one(_strTransitionEndEvent, function () {\r\n                                if (!_destroyed)\r\n                                    scrollbarVars._handle.css(strTransition, _strEmpty);\r\n                            });\r\n                        }\r\n                    }\r\n\r\n                    scrollbarVarsInfo._handleOffset = handleOffset;\r\n                    scrollbarVarsInfo._snappedHandleOffset = snappedHandleOffset;\r\n                    scrollbarVarsInfo._trackLength = trackLength;\r\n                }\r\n\r\n                /**\r\n                 * Refreshes the interactivity of the given scrollbar element.\r\n                 * @param isTrack True if the track element is the target, false if the handle element is the target.\r\n                 * @param value True for interactivity false for no interactivity.\r\n                 */\r\n                function refreshScrollbarsInteractive(isTrack, value) {\r\n                    var action = value ? 'removeClass' : 'addClass';\r\n                    var element1 = isTrack ? _scrollbarHorizontalTrackElement : _scrollbarHorizontalHandleElement;\r\n                    var element2 = isTrack ? _scrollbarVerticalTrackElement : _scrollbarVerticalHandleElement;\r\n                    var className = isTrack ? _classNameScrollbarTrackOff : _classNameScrollbarHandleOff;\r\n\r\n                    element1[action](className);\r\n                    element2[action](className);\r\n                }\r\n\r\n                /**\r\n                 * Returns a object which is used for fast access for specific variables.\r\n                 * @param isHorizontal True if the horizontal scrollbar vars shall be accessed, false if the vertical scrollbar vars shall be accessed.\r\n                 * @returns {{wh: string, WH: string, lt: string, _wh: string, _lt: string, t: *, h: *, c: {}, s: *}}\r\n                 */\r\n                function getScrollbarVars(isHorizontal) {\r\n                    return {\r\n                        _width_height: isHorizontal ? _strWidth : _strHeight,\r\n                        _Width_Height: isHorizontal ? 'Width' : 'Height',\r\n                        _left_top: isHorizontal ? _strLeft : _strTop,\r\n                        _Left_Top: isHorizontal ? 'Left' : 'Top',\r\n                        _x_y: isHorizontal ? _strX : _strY,\r\n                        _X_Y: isHorizontal ? 'X' : 'Y',\r\n                        _w_h: isHorizontal ? 'w' : 'h',\r\n                        _l_t: isHorizontal ? 'l' : 't',\r\n                        _track: isHorizontal ? _scrollbarHorizontalTrackElement : _scrollbarVerticalTrackElement,\r\n                        _handle: isHorizontal ? _scrollbarHorizontalHandleElement : _scrollbarVerticalHandleElement,\r\n                        _scrollbar: isHorizontal ? _scrollbarHorizontalElement : _scrollbarVerticalElement,\r\n                        _info: isHorizontal ? _scrollHorizontalInfo : _scrollVerticalInfo\r\n                    };\r\n                }\r\n\r\n\r\n                //==== Scrollbar Corner ====//\r\n\r\n                /**\r\n                 * Builds or destroys the scrollbar corner DOM element.\r\n                 * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n                 */\r\n                function setupScrollbarCornerDOM(destroy) {\r\n                    _scrollbarCornerElement = _scrollbarCornerElement || selectOrGenerateDivByClass(_classNameScrollbarCorner, true);\r\n\r\n                    if (!destroy) {\r\n                        if (!_domExists) {\r\n                            _hostElement.append(_scrollbarCornerElement);\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (_domExists && _initialized) {\r\n                            removeClass(_scrollbarCornerElement.removeAttr(LEXICON.s), _classNamesDynamicDestroy);\r\n                        }\r\n                        else {\r\n                            remove(_scrollbarCornerElement);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Initializes all scrollbar corner interactivity events.\r\n                 */\r\n                function setupScrollbarCornerEvents() {\r\n                    var insideIFrame = _windowElementNative.top !== _windowElementNative;\r\n                    var mouseDownPosition = {};\r\n                    var mouseDownSize = {};\r\n                    var mouseDownInvertedScale = {};\r\n                    var reconnectMutationObserver;\r\n\r\n                    function documentDragMove(event) {\r\n                        if (onMouseTouchDownContinue(event)) {\r\n                            var pageOffset = getCoordinates(event);\r\n                            var hostElementCSS = {};\r\n                            if (_resizeHorizontal || _resizeBoth)\r\n                                hostElementCSS[_strWidth] = (mouseDownSize.w + (pageOffset.x - mouseDownPosition.x) * mouseDownInvertedScale.x);\r\n                            if (_resizeVertical || _resizeBoth)\r\n                                hostElementCSS[_strHeight] = (mouseDownSize.h + (pageOffset.y - mouseDownPosition.y) * mouseDownInvertedScale.y);\r\n                            _hostElement.css(hostElementCSS);\r\n                            COMPATIBILITY.stpP(event);\r\n                        }\r\n                        else {\r\n                            documentMouseTouchUp(event);\r\n                        }\r\n                    }\r\n                    function documentMouseTouchUp(event) {\r\n                        var eventIsTrusted = event !== undefined;\r\n\r\n                        setupResponsiveEventListener(_documentElement,\r\n                            [_strSelectStartEvent, _strMouseTouchMoveEvent, _strMouseTouchUpEvent],\r\n                            [documentOnSelectStart, documentDragMove, documentMouseTouchUp],\r\n                            true);\r\n\r\n                        removeClass(_bodyElement, _classNameDragging);\r\n                        if (_scrollbarCornerElement.releaseCapture)\r\n                            _scrollbarCornerElement.releaseCapture();\r\n\r\n                        if (eventIsTrusted) {\r\n                            if (reconnectMutationObserver)\r\n                                connectMutationObservers();\r\n                            _base.update(_strAuto);\r\n                        }\r\n                        reconnectMutationObserver = false;\r\n                    }\r\n                    function onMouseTouchDownContinue(event) {\r\n                        var originalEvent = event.originalEvent || event;\r\n                        var isTouchEvent = originalEvent.touches !== undefined;\r\n                        return _sleeping || _destroyed ? false : COMPATIBILITY.mBtn(event) === 1 || isTouchEvent;\r\n                    }\r\n                    function getCoordinates(event) {\r\n                        return _msieVersion && insideIFrame ? { x: event.screenX, y: event.screenY } : COMPATIBILITY.page(event);\r\n                    }\r\n\r\n                    addDestroyEventListener(_scrollbarCornerElement, _strMouseTouchDownEvent, function (event) {\r\n                        if (onMouseTouchDownContinue(event) && !_resizeNone) {\r\n                            if (_mutationObserversConnected) {\r\n                                reconnectMutationObserver = true;\r\n                                disconnectMutationObservers();\r\n                            }\r\n\r\n                            mouseDownPosition = getCoordinates(event);\r\n\r\n                            mouseDownSize.w = _hostElementNative[LEXICON.oW] - (!_isBorderBox ? _paddingX : 0);\r\n                            mouseDownSize.h = _hostElementNative[LEXICON.oH] - (!_isBorderBox ? _paddingY : 0);\r\n                            mouseDownInvertedScale = getHostElementInvertedScale();\r\n\r\n                            setupResponsiveEventListener(_documentElement,\r\n                                [_strSelectStartEvent, _strMouseTouchMoveEvent, _strMouseTouchUpEvent],\r\n                                [documentOnSelectStart, documentDragMove, documentMouseTouchUp]);\r\n\r\n                            addClass(_bodyElement, _classNameDragging);\r\n                            if (_scrollbarCornerElement.setCapture)\r\n                                _scrollbarCornerElement.setCapture();\r\n\r\n                            COMPATIBILITY.prvD(event);\r\n                            COMPATIBILITY.stpP(event);\r\n                        }\r\n                    });\r\n                }\r\n\r\n\r\n                //==== Utils ====//\r\n\r\n                /**\r\n                 * Calls the callback with the given name. The Context of this callback is always _base (this).\r\n                 * @param name The name of the target which shall be called.\r\n                 * @param args The args with which the callback shall be called.\r\n                 * @param dependent Boolean which decides whether the callback shall be fired, undefined is like a \"true\" value.\r\n                 */\r\n                function dispatchCallback(name, args, dependent) {\r\n                    if (dependent === false)\r\n                        return;\r\n                    if (_initialized) {\r\n                        var callback = _currentPreparedOptions.callbacks[name];\r\n                        var extensionOnName = name;\r\n                        var ext;\r\n\r\n                        if (extensionOnName.substr(0, 2) === 'on')\r\n                            extensionOnName = extensionOnName.substr(2, 1).toLowerCase() + extensionOnName.substr(3);\r\n\r\n                        if (type(callback) == TYPES.f)\r\n                            callback.call(_base, args);\r\n\r\n                        each(_extensions, function () {\r\n                            ext = this;\r\n                            if (type(ext.on) == TYPES.f)\r\n                                ext.on(extensionOnName, args);\r\n                        });\r\n                    }\r\n                    else if (!_destroyed)\r\n                        _callbacksInitQeueue.push({ n: name, a: args });\r\n                }\r\n\r\n                /**\r\n                 * Sets the \"top, right, bottom, left\" properties, with a given prefix, of the given css object.\r\n                 * @param targetCSSObject The css object to which the values shall be applied.\r\n                 * @param prefix The prefix of the \"top, right, bottom, left\" css properties. (example: 'padding-' is a valid prefix)\r\n                 * @param values A array of values which shall be applied to the \"top, right, bottom, left\" -properties. The array order is [top, right, bottom, left].\r\n                 * If this argument is undefined the value '' (empty string) will be applied to all properties.\r\n                 */\r\n                function setTopRightBottomLeft(targetCSSObject, prefix, values) {\r\n                    prefix = prefix || _strEmpty;\r\n                    values = values || [_strEmpty, _strEmpty, _strEmpty, _strEmpty];\r\n\r\n                    targetCSSObject[prefix + _strTop] = values[0];\r\n                    targetCSSObject[prefix + _strRight] = values[1];\r\n                    targetCSSObject[prefix + _strBottom] = values[2];\r\n                    targetCSSObject[prefix + _strLeft] = values[3];\r\n                }\r\n\r\n                /**\r\n                 * Gets the \"top, right, bottom, left\" CSS properties of the CSS property with the given prefix from the host element.\r\n                 * @param prefix The prefix of the \"top, right, bottom, left\" css properties. (example: 'padding-' is a valid prefix)\r\n                 * @param suffix The suffix of the \"top, right, bottom, left\" css properties. (example: 'border-' is a valid prefix with '-width' is a valid suffix)\r\n                 * @param zeroX True if the x axis shall be 0.\r\n                 * @param zeroY True if the y axis shall be 0.\r\n                 * @returns {{}} The object which contains the numbers of the read CSS properties.\r\n                 */\r\n                function getTopRightBottomLeftHost(prefix, suffix, zeroX, zeroY) {\r\n                    suffix = suffix || _strEmpty;\r\n                    prefix = prefix || _strEmpty;\r\n                    return {\r\n                        t: zeroY ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strTop + suffix)),\r\n                        r: zeroX ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strRight + suffix)),\r\n                        b: zeroY ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strBottom + suffix)),\r\n                        l: zeroX ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strLeft + suffix))\r\n                    };\r\n                }\r\n\r\n                /**\r\n                 * Returns the computed CSS transition string from the given element.\r\n                 * @param element The element from which the transition string shall be returned.\r\n                 * @returns {string} The CSS transition string from the given element.\r\n                 */\r\n                function getCSSTransitionString(element) {\r\n                    var transitionStr = VENDORS._cssProperty('transition');\r\n                    var assembledValue = element.css(transitionStr);\r\n                    if (assembledValue)\r\n                        return assembledValue;\r\n                    var regExpString = '\\\\s*(' + '([^,(]+(\\\\(.+?\\\\))?)+' + ')[\\\\s,]*';\r\n                    var regExpMain = new RegExp(regExpString);\r\n                    var regExpValidate = new RegExp('^(' + regExpString + ')+$');\r\n                    var properties = 'property duration timing-function delay'.split(' ');\r\n                    var result = [];\r\n                    var strResult;\r\n                    var valueArray;\r\n                    var i = 0;\r\n                    var j;\r\n                    var splitCssStyleByComma = function (str) {\r\n                        strResult = [];\r\n                        if (!str.match(regExpValidate))\r\n                            return str;\r\n                        while (str.match(regExpMain)) {\r\n                            strResult.push(RegExp.$1);\r\n                            str = str.replace(regExpMain, _strEmpty);\r\n                        }\r\n\r\n                        return strResult;\r\n                    };\r\n                    for (; i < properties[LEXICON.l]; i++) {\r\n                        valueArray = splitCssStyleByComma(element.css(transitionStr + '-' + properties[i]));\r\n                        for (j = 0; j < valueArray[LEXICON.l]; j++)\r\n                            result[j] = (result[j] ? result[j] + _strSpace : _strEmpty) + valueArray[j];\r\n                    }\r\n                    return result.join(', ');\r\n                }\r\n\r\n                /**\r\n                 * Generates a Regular Expression which matches with a string which starts with 'os-host'.\r\n                 * @param {boolean} withCurrClassNameOption The Regular Expression also matches if the string is the current ClassName option (multiple values splitted by space possible).\r\n                 * @param {boolean} withOldClassNameOption The Regular Expression also matches if the string is the old ClassName option (multiple values splitted by space possible).\r\n                 */\r\n                function createHostClassNameRegExp(withCurrClassNameOption, withOldClassNameOption) {\r\n                    var i;\r\n                    var split;\r\n                    var appendix;\r\n                    var appendClasses = function (classes, condition) {\r\n                        appendix = '';\r\n                        if (condition && typeof classes == TYPES.s) {\r\n                            split = classes.split(_strSpace);\r\n                            for (i = 0; i < split[LEXICON.l]; i++)\r\n                                appendix += '|' + split[i] + '$';\r\n                            // split[i].replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') for escaping regex characters\r\n                        }\r\n                        return appendix;\r\n                    };\r\n\r\n                    return new RegExp(\r\n                        '(^' + _classNameHostElement + '([-_].+|)$)' +\r\n                        appendClasses(_classNameCache, withCurrClassNameOption) +\r\n                        appendClasses(_oldClassName, withOldClassNameOption), 'g');\r\n                }\r\n\r\n                /**\r\n                 * Calculates the host-elements inverted scale. (invertedScale = 1 / scale)\r\n                 * @returns {{x: number, y: number}} The scale of the host-element.\r\n                 */\r\n                function getHostElementInvertedScale() {\r\n                    var rect = _paddingElementNative[LEXICON.bCR]();\r\n                    return {\r\n                        x: _supportTransform ? 1 / (MATH.round(rect.width) / _paddingElementNative[LEXICON.oW]) || 1 : 1,\r\n                        y: _supportTransform ? 1 / (MATH.round(rect.height) / _paddingElementNative[LEXICON.oH]) || 1 : 1\r\n                    };\r\n                }\r\n\r\n                /**\r\n                 * Checks whether the given object is a HTMLElement.\r\n                 * @param o The object which shall be checked.\r\n                 * @returns {boolean} True the given object is a HTMLElement, false otherwise.\r\n                 */\r\n                function isHTMLElement(o) {\r\n                    var strOwnerDocument = 'ownerDocument';\r\n                    var strHTMLElement = 'HTMLElement';\r\n                    var wnd = o && o[strOwnerDocument] ? (o[strOwnerDocument].parentWindow || window) : window;\r\n                    return (\r\n                        typeof wnd[strHTMLElement] == TYPES.o ? o instanceof wnd[strHTMLElement] : //DOM2\r\n                            o && typeof o == TYPES.o && o !== null && o.nodeType === 1 && typeof o.nodeName == TYPES.s\r\n                    );\r\n                }\r\n\r\n                /**\r\n                 * Compares 2 arrays and returns the differences between them as a array.\r\n                 * @param a1 The first array which shall be compared.\r\n                 * @param a2 The second array which shall be compared.\r\n                 * @returns {Array} The differences between the two arrays.\r\n                 */\r\n                function getArrayDifferences(a1, a2) {\r\n                    var a = [];\r\n                    var diff = [];\r\n                    var i;\r\n                    var k;\r\n                    for (i = 0; i < a1.length; i++)\r\n                        a[a1[i]] = true;\r\n                    for (i = 0; i < a2.length; i++) {\r\n                        if (a[a2[i]])\r\n                            delete a[a2[i]];\r\n                        else\r\n                            a[a2[i]] = true;\r\n                    }\r\n                    for (k in a)\r\n                        diff.push(k);\r\n                    return diff;\r\n                }\r\n\r\n                /**\r\n                 * Returns Zero or the number to which the value can be parsed.\r\n                 * @param value The value which shall be parsed.\r\n                 * @param toFloat Indicates whether the number shall be parsed to a float.\r\n                 */\r\n                function parseToZeroOrNumber(value, toFloat) {\r\n                    var num = toFloat ? parseFloat(value) : parseInt(value, 10);\r\n                    return isNaN(num) ? 0 : num;\r\n                }\r\n\r\n                /**\r\n                 * Gets several information of the textarea and returns them as a object or undefined if the browser doesn't support it.\r\n                 * @returns {{cursorRow: Number, cursorCol, rows: Number, cols: number, wRow: number, pos: number, max : number}} or undefined if not supported.\r\n                 */\r\n                function getTextareaInfo() {\r\n                    //read needed values\r\n                    var textareaCursorPosition = _targetElementNative.selectionStart;\r\n                    if (textareaCursorPosition === undefined)\r\n                        return;\r\n\r\n                    var textareaValue = _targetElement.val();\r\n                    var textareaLength = textareaValue[LEXICON.l];\r\n                    var textareaRowSplit = textareaValue.split('\\n');\r\n                    var textareaLastRow = textareaRowSplit[LEXICON.l];\r\n                    var textareaCurrentCursorRowSplit = textareaValue.substr(0, textareaCursorPosition).split('\\n');\r\n                    var widestRow = 0;\r\n                    var textareaLastCol = 0;\r\n                    var cursorRow = textareaCurrentCursorRowSplit[LEXICON.l];\r\n                    var cursorCol = textareaCurrentCursorRowSplit[textareaCurrentCursorRowSplit[LEXICON.l] - 1][LEXICON.l];\r\n                    var rowCols;\r\n                    var i;\r\n\r\n                    //get widest Row and the last column of the textarea\r\n                    for (i = 0; i < textareaRowSplit[LEXICON.l]; i++) {\r\n                        rowCols = textareaRowSplit[i][LEXICON.l];\r\n                        if (rowCols > textareaLastCol) {\r\n                            widestRow = i + 1;\r\n                            textareaLastCol = rowCols;\r\n                        }\r\n                    }\r\n\r\n                    return {\r\n                        _cursorRow: cursorRow, //cursorRow\r\n                        _cursorColumn: cursorCol, //cursorCol\r\n                        _rows: textareaLastRow, //rows\r\n                        _columns: textareaLastCol, //cols\r\n                        _widestRow: widestRow, //wRow\r\n                        _cursorPosition: textareaCursorPosition, //pos\r\n                        _cursorMax: textareaLength //max\r\n                    };\r\n                }\r\n\r\n                /**\r\n                 * Determines whether native overlay scrollbars are active.\r\n                 * @returns {boolean} True if native overlay scrollbars are active, false otherwise.\r\n                 */\r\n                function nativeOverlayScrollbarsAreActive() {\r\n                    return (_ignoreOverlayScrollbarHidingCache && (_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y));\r\n                }\r\n\r\n                /**\r\n                 * Gets the element which is used to measure the content size.\r\n                 * @returns {*} TextareaCover if target element is textarea else the ContentElement.\r\n                 */\r\n                function getContentMeasureElement() {\r\n                    return _isTextarea ? _textareaCoverElement[0] : _contentElementNative;\r\n                }\r\n\r\n                /**\r\n                 * Generates a string which represents a HTML div with the given classes or attributes.\r\n                 * @param classesOrAttrs The class of the div as string or a object which represents the attributes of the div. (The class attribute can also be written as \"className\".)\r\n                 * @param content The content of the div as string.\r\n                 * @returns {string} The concated string which represents a HTML div and its content.\r\n                 */\r\n                function generateDiv(classesOrAttrs, content) {\r\n                    return '<div ' + (classesOrAttrs ? type(classesOrAttrs) == TYPES.s ?\r\n                        'class=\"' + classesOrAttrs + '\"' :\r\n                        (function () {\r\n                            var key;\r\n                            var attrs = _strEmpty;\r\n                            if (FRAMEWORK.isPlainObject(classesOrAttrs)) {\r\n                                for (key in classesOrAttrs)\r\n                                    attrs += (key === 'c' ? 'class' : key) + '=\"' + classesOrAttrs[key] + '\" ';\r\n                            }\r\n                            return attrs;\r\n                        })() :\r\n                        _strEmpty) +\r\n                        '>' +\r\n                        (content || _strEmpty) +\r\n                        '</div>';\r\n                }\r\n\r\n                /**\r\n                 * Selects or generates a div with the given class attribute.\r\n                 * @param className The class names (divided by spaces) of the div which shall be selected or generated.\r\n                 * @param selectParentOrOnlyChildren The parent element from which of the element shall be selected. (if undefined or boolean its hostElement)\r\n                 * If its a boolean it decides whether only the children of the host element shall be selected.\r\n                 * @returns {*} The generated or selected element.\r\n                 */\r\n                function selectOrGenerateDivByClass(className, selectParentOrOnlyChildren) {\r\n                    var onlyChildren = type(selectParentOrOnlyChildren) == TYPES.b;\r\n                    var selectParent = onlyChildren ? _hostElement : (selectParentOrOnlyChildren || _hostElement);\r\n\r\n                    return (_domExists && !selectParent[LEXICON.l])\r\n                        ? null\r\n                        : _domExists\r\n                            ? selectParent[onlyChildren ? 'children' : 'find'](_strDot + className.replace(/\\s/g, _strDot)).eq(0)\r\n                            : FRAMEWORK(generateDiv(className))\r\n                }\r\n\r\n                /**\r\n                 * Gets the value of the given property from the given object.\r\n                 * @param obj The object from which the property value shall be got.\r\n                 * @param path The property of which the value shall be got.\r\n                 * @returns {*} Returns the value of the searched property or undefined of the property wasn't found.\r\n                 */\r\n                function getObjectPropVal(obj, path) {\r\n                    var splits = path.split(_strDot);\r\n                    var i = 0;\r\n                    var val;\r\n                    for (; i < splits.length; i++) {\r\n                        if (!obj[LEXICON.hOP](splits[i]))\r\n                            return;\r\n                        val = obj[splits[i]];\r\n                        if (i < splits.length && type(val) == TYPES.o)\r\n                            obj = val;\r\n                    }\r\n                    return val;\r\n                }\r\n\r\n                /**\r\n                 * Sets the value of the given property from the given object.\r\n                 * @param obj The object from which the property value shall be set.\r\n                 * @param path The property of which the value shall be set.\r\n                 * @param val The value of the property which shall be set.\r\n                 */\r\n                function setObjectPropVal(obj, path, val) {\r\n                    var splits = path.split(_strDot);\r\n                    var splitsLength = splits.length;\r\n                    var i = 0;\r\n                    var extendObj = {};\r\n                    var extendObjRoot = extendObj;\r\n                    for (; i < splitsLength; i++)\r\n                        extendObj = extendObj[splits[i]] = i + 1 < splitsLength ? {} : val;\r\n                    FRAMEWORK.extend(obj, extendObjRoot, true);\r\n                }\r\n\r\n                /**\t\r\n                 * Runs a action for each selector inside the updateOnLoad option.\t\r\n                 * @param {Function} action The action for each updateOnLoad selector, the arguments the function takes is the index and the value (the selector).\t\r\n                 */\r\n                function eachUpdateOnLoad(action) {\r\n                    var updateOnLoad = _currentPreparedOptions.updateOnLoad;\r\n                    updateOnLoad = type(updateOnLoad) == TYPES.s ? updateOnLoad.split(_strSpace) : updateOnLoad;\r\n\r\n                    if (COMPATIBILITY.isA(updateOnLoad) && !_destroyed) {\r\n                        each(updateOnLoad, action);\r\n                    }\r\n                }\r\n\r\n\r\n                //==== Utils Cache ====//\r\n\r\n                /**\r\n                 * Compares two values or objects and returns true if they aren't equal.\r\n                 * @param current The first value or object which shall be compared.\r\n                 * @param cache The second value or object which shall be compared.\r\n                 * @param force If true the returned value is always true.\r\n                 * @returns {boolean} True if both values or objects aren't equal or force is true, false otherwise.\r\n                 */\r\n                function checkCache(current, cache, force) {\r\n                    if (force)\r\n                        return force;\r\n                    if (type(current) == TYPES.o && type(cache) == TYPES.o) {\r\n                        for (var prop in current) {\r\n                            if (prop !== 'c') {\r\n                                if (current[LEXICON.hOP](prop) && cache[LEXICON.hOP](prop)) {\r\n                                    if (checkCache(current[prop], cache[prop]))\r\n                                        return true;\r\n                                }\r\n                                else {\r\n                                    return true;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        return current !== cache;\r\n                    }\r\n                    return false;\r\n                }\r\n\r\n\r\n                //==== Shortcuts ====//\r\n\r\n                /**\r\n                 * jQuery extend method shortcut with a appended \"true\" as first argument.\r\n                 */\r\n                function extendDeep() {\r\n                    return FRAMEWORK.extend.apply(this, [true].concat([].slice.call(arguments)));\r\n                }\r\n\r\n                /**\r\n                 * jQuery addClass method shortcut.\r\n                 */\r\n                function addClass(el, classes) {\r\n                    return _frameworkProto.addClass.call(el, classes);\r\n                }\r\n\r\n                /**\r\n                 * jQuery removeClass method shortcut.\r\n                 */\r\n                function removeClass(el, classes) {\r\n                    return _frameworkProto.removeClass.call(el, classes);\r\n                }\r\n\r\n                /**\r\n                 * Adds or removes the given classes dependent on the boolean value. True for add, false for remove.\r\n                 */\r\n                function addRemoveClass(el, classes, doAdd) {\r\n                    return doAdd ? addClass(el, classes) : removeClass(el, classes);\r\n                }\r\n\r\n                /**\r\n                 * jQuery remove method shortcut.\r\n                 */\r\n                function remove(el) {\r\n                    return _frameworkProto.remove.call(el);\r\n                }\r\n\r\n                /**\r\n                 * Finds the first child element with the given selector of the given element.\r\n                 * @param el The root element from which the selector shall be valid.\r\n                 * @param selector The selector of the searched element.\r\n                 * @returns {*} The first element which is a child of the given element and matches the givens selector.\r\n                 */\r\n                function findFirst(el, selector) {\r\n                    return _frameworkProto.find.call(el, selector).eq(0);\r\n                }\r\n\r\n\r\n                //==== API ====//\r\n\r\n                /**\r\n                 * Puts the instance to sleep. It wont respond to any changes in the DOM and won't update. Scrollbar Interactivity is also disabled as well as the resize handle.\r\n                 * This behavior can be reset by calling the update method.\r\n                 */\r\n                _base.sleep = function () {\r\n                    _sleeping = true;\r\n                };\r\n\r\n                /**\r\n                 * Updates the plugin and DOM to the current options.\r\n                 * This method should only be called if a update is 100% required.\r\n                 * @param force True if every property shall be updated and the cache shall be ignored.\r\n                 * !INTERNAL USAGE! : force can be a string \"auto\", \"sync\" or \"zoom\" too\r\n                 * if \"auto\" then before a real update the content size and host element attributes gets checked, and if they changed only then the update method will be called.\r\n                 * if \"sync\" then the async update process (MutationObserver or UpdateLoop) gets synchronized and a corresponding update takes place if one was needed due to pending changes.\r\n                 * if \"zoom\" then a update takes place where it's assumed that content and host size changed\r\n                 * @returns {boolean|undefined} \r\n                 * If force is \"sync\" then a boolean is returned which indicates whether a update was needed due to pending changes.\r\n                 * If force is \"auto\" then a boolean is returned whether a update was needed due to attribute or size changes.\r\n                 * undefined otherwise.\r\n                 */\r\n                _base.update = function (force) {\r\n                    if (_destroyed)\r\n                        return;\r\n\r\n                    var attrsChanged;\r\n                    var contentSizeC;\r\n                    var isString = type(force) == TYPES.s;\r\n                    var doUpdateAuto;\r\n                    var mutHost;\r\n                    var mutContent;\r\n\r\n                    if (isString) {\r\n                        if (force === _strAuto) {\r\n                            attrsChanged = meaningfulAttrsChanged();\r\n                            contentSizeC = updateAutoContentSizeChanged();\r\n                            doUpdateAuto = attrsChanged || contentSizeC;\r\n                            if (doUpdateAuto) {\r\n                                update({\r\n                                    _contentSizeChanged: contentSizeC,\r\n                                    _changedOptions: _initialized ? undefined : _currentPreparedOptions\r\n                                });\r\n                            }\r\n                        }\r\n                        else if (force === _strSync) {\r\n                            if (_mutationObserversConnected) {\r\n                                mutHost = _mutationObserverHostCallback(_mutationObserverHost.takeRecords());\r\n                                mutContent = _mutationObserverContentCallback(_mutationObserverContent.takeRecords());\r\n                            }\r\n                            else {\r\n                                mutHost = _base.update(_strAuto);\r\n                            }\r\n                        }\r\n                        else if (force === 'zoom') {\r\n                            update({\r\n                                _hostSizeChanged: true,\r\n                                _contentSizeChanged: true\r\n                            });\r\n                        }\r\n                    }\r\n                    else {\r\n                        force = _sleeping || force;\r\n                        _sleeping = false;\r\n                        if (!_base.update(_strSync) || force)\r\n                            update({ _force: force });\r\n                    }\r\n\r\n                    updateElementsOnLoad();\r\n\r\n                    return doUpdateAuto || mutHost || mutContent;\r\n                };\r\n\r\n                /**\r\n                 Gets or sets the current options. The update method will be called automatically if new options were set.\r\n                 * @param newOptions If new options are given, then the new options will be set, if new options aren't given (undefined or a not a plain object) then the current options will be returned.\r\n                 * @param value If new options is a property path string, then this value will be used to set the option to which the property path string leads.\r\n                 * @returns {*}\r\n                 */\r\n                _base.options = function (newOptions, value) {\r\n                    var option = {};\r\n                    var changedOps;\r\n\r\n                    //return current options if newOptions are undefined or empty\r\n                    if (FRAMEWORK.isEmptyObject(newOptions) || !FRAMEWORK.isPlainObject(newOptions)) {\r\n                        if (type(newOptions) == TYPES.s) {\r\n                            if (arguments.length > 1) {\r\n                                setObjectPropVal(option, newOptions, value);\r\n                                changedOps = setOptions(option);\r\n                            }\r\n                            else\r\n                                return getObjectPropVal(_currentOptions, newOptions);\r\n                        }\r\n                        else\r\n                            return _currentOptions;\r\n                    }\r\n                    else {\r\n                        changedOps = setOptions(newOptions);\r\n                    }\r\n\r\n                    if (!FRAMEWORK.isEmptyObject(changedOps)) {\r\n                        update({ _changedOptions: changedOps });\r\n                    }\r\n                };\r\n\r\n                /**\r\n                 * Restore the DOM, disconnects all observers, remove all resize observers and put the instance to sleep.\r\n                 */\r\n                _base.destroy = function () {\r\n                    if (_destroyed)\r\n                        return;\r\n\r\n                    //remove this instance from auto update loop\r\n                    autoUpdateLoop.remove(_base);\r\n\r\n                    //disconnect all mutation observers\r\n                    disconnectMutationObservers();\r\n\r\n                    //remove all resize observers\r\n                    setupResizeObserver(_sizeObserverElement);\r\n                    setupResizeObserver(_sizeAutoObserverElement);\r\n\r\n                    //remove all extensions\r\n                    for (var extName in _extensions)\r\n                        _base.removeExt(extName);\r\n\r\n                    //remove all 'destroy' events\r\n                    while (_destroyEvents[LEXICON.l] > 0)\r\n                        _destroyEvents.pop()();\r\n\r\n                    //remove all events from host element\r\n                    setupHostMouseTouchEvents(true);\r\n\r\n                    //remove all helper / detection elements\r\n                    if (_contentGlueElement)\r\n                        remove(_contentGlueElement);\r\n                    if (_contentArrangeElement)\r\n                        remove(_contentArrangeElement);\r\n                    if (_sizeAutoObserverAdded)\r\n                        remove(_sizeAutoObserverElement);\r\n\r\n                    //remove all generated DOM\r\n                    setupScrollbarsDOM(true);\r\n                    setupScrollbarCornerDOM(true);\r\n                    setupStructureDOM(true);\r\n\r\n                    //remove all generated image load events\r\n                    for (var i = 0; i < _updateOnLoadElms[LEXICON.l]; i++)\r\n                        FRAMEWORK(_updateOnLoadElms[i]).off(_updateOnLoadEventName, updateOnLoadCallback);\r\n                    _updateOnLoadElms = undefined;\r\n\r\n                    _destroyed = true;\r\n                    _sleeping = true;\r\n\r\n                    //remove this instance from the instances list\r\n                    INSTANCES(pluginTargetElement, 0);\r\n                    dispatchCallback('onDestroyed');\r\n\r\n                    //remove all properties and methods\r\n                    //for (var property in _base)\r\n                    //    delete _base[property];\r\n                    //_base = undefined;\r\n                };\r\n\r\n                /**\r\n                 * Scrolls to a given position or element.\r\n                 * @param coordinates\r\n                 * 1. Can be \"coordinates\" which looks like:\r\n                 *    { x : ?, y : ? } OR          Object with x and y properties\r\n                 *    { left : ?, top : ? } OR     Object with left and top properties\r\n                 *    { l : ?, t : ? } OR          Object with l and t properties\r\n                 *    [ ?, ? ] OR                  Array where the first two element are the coordinates (first is x, second is y)\r\n                 *    ?                            A single value which stays for both axis\r\n                 *    A value can be a number, a string or a calculation.\r\n                 *\r\n                 *    Operators:\r\n                 *    [NONE]  The current scroll will be overwritten by the value.\r\n                 *    '+='    The value will be added to the current scroll offset\r\n                 *    '-='    The value will be subtracted from the current scroll offset\r\n                 *    '*='    The current scroll wil be multiplicated by the value.\r\n                 *    '/='    The current scroll wil be divided by the value.\r\n                 *\r\n                 *    Units:\r\n                 *    [NONE]  The value is the final scroll amount.                   final = (value * 1)\r\n                 *    'px'    Same as none\r\n                 *    '%'     The value is dependent on the current scroll value.     final = ((currentScrollValue / 100) * value)\r\n                 *    'vw'    The value is multiplicated by the viewport width.       final = (value * viewportWidth)\r\n                 *    'vh'    The value is multiplicated by the viewport height.      final = (value * viewportHeight)\r\n                 *\r\n                 *    example final values:\r\n                 *    200, '200px', '50%', '1vw', '1vh', '+=200', '/=1vw', '*=2px', '-=5vh', '+=33%', '+= 50% - 2px', '-= 1vw - 50%'\r\n                 *\r\n                 * 2. Can be a HTML or jQuery element:\r\n                 *    The final scroll offset is the offset (without margin) of the given HTML / jQuery element.\r\n                 *\r\n                 * 3. Can be a object with a HTML or jQuery element with additional settings:\r\n                 *    {\r\n                 *      el : [HTMLElement, jQuery element],             MUST be specified, else this object isn't valid.\r\n                 *      scroll : [string, array, object],               Default value is 'always'.\r\n                 *      block : [string, array, object],                Default value is 'begin'.\r\n                 *      margin : [number, boolean, array, object]       Default value is false.\r\n                 *    }\r\n                 *\r\n                 *    Possible scroll settings are:\r\n                 *    'always'      Scrolls always.\r\n                 *    'ifneeded'    Scrolls only if the element isnt fully in view.\r\n                 *    'never'       Scrolls never.\r\n                 *\r\n                 *    Possible block settings are:\r\n                 *    'begin'   Both axis shall be docked to the \"begin\" edge. - The element will be docked to the top and left edge of the viewport.\r\n                 *    'end'     Both axis shall be docked to the \"end\" edge. - The element will be docked to the bottom and right edge of the viewport. (If direction is RTL to the bottom and left edge.)\r\n                 *    'center'  Both axis shall be docked to \"center\". - The element will be centered in the viewport.\r\n                 *    'nearest' The element will be docked to the nearest edge(s).\r\n                 *\r\n                 *    Possible margin settings are: -- The actual margin of the element wont be affect, this option affects only the final scroll offset.\r\n                 *    [BOOLEAN]                                         If true the css margin of the element will be used, if false no margin will be used.\r\n                 *    [NUMBER]                                          The margin will be used for all edges.\r\n                 *\r\n                 * @param duration The duration of the scroll animation, OR a jQuery animation configuration object.\r\n                 * @param easing The animation easing.\r\n                 * @param complete The animation complete callback.\r\n                 * @returns {{\r\n                 *   position: {x: number, y: number},\r\n                 *   ratio: {x: number, y: number},\r\n                 *   max: {x: number, y: number},\r\n                 *   handleOffset: {x: number, y: number},\r\n                 *   handleLength: {x: number, y: number},\r\n                 *   handleLengthRatio: {x: number, y: number}, t\r\n                 *   rackLength: {x: number, y: number},\r\n                 *   isRTL: boolean,\r\n                 *   isRTLNormalized: boolean\r\n                 *  }}\r\n                 */\r\n                _base.scroll = function (coordinates, duration, easing, complete) {\r\n                    if (arguments.length === 0 || coordinates === undefined) {\r\n                        var infoX = _scrollHorizontalInfo;\r\n                        var infoY = _scrollVerticalInfo;\r\n                        var normalizeInvert = _normalizeRTLCache && _isRTL && _rtlScrollBehavior.i;\r\n                        var normalizeNegate = _normalizeRTLCache && _isRTL && _rtlScrollBehavior.n;\r\n                        var scrollX = infoX._currentScroll;\r\n                        var scrollXRatio = infoX._currentScrollRatio;\r\n                        var maxScrollX = infoX._maxScroll;\r\n                        scrollXRatio = normalizeInvert ? 1 - scrollXRatio : scrollXRatio;\r\n                        scrollX = normalizeInvert ? maxScrollX - scrollX : scrollX;\r\n                        scrollX *= normalizeNegate ? -1 : 1;\r\n                        maxScrollX *= normalizeNegate ? -1 : 1;\r\n\r\n                        return {\r\n                            position: {\r\n                                x: scrollX,\r\n                                y: infoY._currentScroll\r\n                            },\r\n                            ratio: {\r\n                                x: scrollXRatio,\r\n                                y: infoY._currentScrollRatio\r\n                            },\r\n                            max: {\r\n                                x: maxScrollX,\r\n                                y: infoY._maxScroll\r\n                            },\r\n                            handleOffset: {\r\n                                x: infoX._handleOffset,\r\n                                y: infoY._handleOffset\r\n                            },\r\n                            handleLength: {\r\n                                x: infoX._handleLength,\r\n                                y: infoY._handleLength\r\n                            },\r\n                            handleLengthRatio: {\r\n                                x: infoX._handleLengthRatio,\r\n                                y: infoY._handleLengthRatio\r\n                            },\r\n                            trackLength: {\r\n                                x: infoX._trackLength,\r\n                                y: infoY._trackLength\r\n                            },\r\n                            snappedHandleOffset: {\r\n                                x: infoX._snappedHandleOffset,\r\n                                y: infoY._snappedHandleOffset\r\n                            },\r\n                            isRTL: _isRTL,\r\n                            isRTLNormalized: _normalizeRTLCache\r\n                        };\r\n                    }\r\n\r\n                    _base.update(_strSync);\r\n\r\n                    var normalizeRTL = _normalizeRTLCache;\r\n                    var coordinatesXAxisProps = [_strX, _strLeft, 'l'];\r\n                    var coordinatesYAxisProps = [_strY, _strTop, 't'];\r\n                    var coordinatesOperators = ['+=', '-=', '*=', '/='];\r\n                    var durationIsObject = type(duration) == TYPES.o;\r\n                    var completeCallback = durationIsObject ? duration.complete : complete;\r\n                    var i;\r\n                    var finalScroll = {};\r\n                    var specialEasing = {};\r\n                    var doScrollLeft;\r\n                    var doScrollTop;\r\n                    var animationOptions;\r\n                    var strEnd = 'end';\r\n                    var strBegin = 'begin';\r\n                    var strCenter = 'center';\r\n                    var strNearest = 'nearest';\r\n                    var strAlways = 'always';\r\n                    var strNever = 'never';\r\n                    var strIfNeeded = 'ifneeded';\r\n                    var strLength = LEXICON.l;\r\n                    var settingsAxis;\r\n                    var settingsScroll;\r\n                    var settingsBlock;\r\n                    var settingsMargin;\r\n                    var finalElement;\r\n                    var elementObjSettingsAxisValues = [_strX, _strY, 'xy', 'yx'];\r\n                    var elementObjSettingsBlockValues = [strBegin, strEnd, strCenter, strNearest];\r\n                    var elementObjSettingsScrollValues = [strAlways, strNever, strIfNeeded];\r\n                    var coordinatesIsElementObj = coordinates[LEXICON.hOP]('el');\r\n                    var possibleElement = coordinatesIsElementObj ? coordinates.el : coordinates;\r\n                    var possibleElementIsJQuery = possibleElement instanceof FRAMEWORK || JQUERY ? possibleElement instanceof JQUERY : false;\r\n                    var possibleElementIsHTMLElement = possibleElementIsJQuery ? false : isHTMLElement(possibleElement);\r\n                    var updateScrollbarInfos = function () {\r\n                        if (doScrollLeft)\r\n                            refreshScrollbarHandleOffset(true);\r\n                        if (doScrollTop)\r\n                            refreshScrollbarHandleOffset(false);\r\n                    };\r\n                    var proxyCompleteCallback = type(completeCallback) != TYPES.f ? undefined : function () {\r\n                        updateScrollbarInfos();\r\n                        completeCallback();\r\n                    };\r\n                    function checkSettingsStringValue(currValue, allowedValues) {\r\n                        for (i = 0; i < allowedValues[strLength]; i++) {\r\n                            if (currValue === allowedValues[i])\r\n                                return true;\r\n                        }\r\n                        return false;\r\n                    }\r\n                    function getRawScroll(isX, coordinates) {\r\n                        var coordinateProps = isX ? coordinatesXAxisProps : coordinatesYAxisProps;\r\n                        coordinates = type(coordinates) == TYPES.s || type(coordinates) == TYPES.n ? [coordinates, coordinates] : coordinates;\r\n\r\n                        if (COMPATIBILITY.isA(coordinates))\r\n                            return isX ? coordinates[0] : coordinates[1];\r\n                        else if (type(coordinates) == TYPES.o) {\r\n                            //decides RTL normalization \"hack\" with .n\r\n                            //normalizeRTL = type(coordinates.n) == TYPES.b ? coordinates.n : normalizeRTL; \r\n                            for (i = 0; i < coordinateProps[strLength]; i++)\r\n                                if (coordinateProps[i] in coordinates)\r\n                                    return coordinates[coordinateProps[i]];\r\n                        }\r\n                    }\r\n                    function getFinalScroll(isX, rawScroll) {\r\n                        var isString = type(rawScroll) == TYPES.s;\r\n                        var operator;\r\n                        var amount;\r\n                        var scrollInfo = isX ? _scrollHorizontalInfo : _scrollVerticalInfo;\r\n                        var currScroll = scrollInfo._currentScroll;\r\n                        var maxScroll = scrollInfo._maxScroll;\r\n                        var mult = ' * ';\r\n                        var finalValue;\r\n                        var isRTLisX = _isRTL && isX;\r\n                        var normalizeShortcuts = isRTLisX && _rtlScrollBehavior.n && !normalizeRTL;\r\n                        var strReplace = 'replace';\r\n                        var evalFunc = eval;\r\n                        var possibleOperator;\r\n                        if (isString) {\r\n                            //check operator\r\n                            if (rawScroll[strLength] > 2) {\r\n                                possibleOperator = rawScroll.substr(0, 2);\r\n                                if (inArray(possibleOperator, coordinatesOperators) > -1)\r\n                                    operator = possibleOperator;\r\n                            }\r\n\r\n                            //calculate units and shortcuts\r\n                            rawScroll = operator ? rawScroll.substr(2) : rawScroll;\r\n                            rawScroll = rawScroll\r\n                            [strReplace](/min/g, 0) //'min' = 0%\r\n                            [strReplace](/</g, 0)   //'<'   = 0%\r\n                            [strReplace](/max/g, (normalizeShortcuts ? '-' : _strEmpty) + _strHundredPercent)    //'max' = 100%\r\n                            [strReplace](/>/g, (normalizeShortcuts ? '-' : _strEmpty) + _strHundredPercent)      //'>'   = 100%\r\n                            [strReplace](/px/g, _strEmpty)\r\n                            [strReplace](/%/g, mult + (maxScroll * (isRTLisX && _rtlScrollBehavior.n ? -1 : 1) / 100.0))\r\n                            [strReplace](/vw/g, mult + _viewportSize.w)\r\n                            [strReplace](/vh/g, mult + _viewportSize.h);\r\n                            amount = parseToZeroOrNumber(isNaN(rawScroll) ? parseToZeroOrNumber(evalFunc(rawScroll), true).toFixed() : rawScroll);\r\n                        }\r\n                        else {\r\n                            amount = rawScroll;\r\n                        }\r\n\r\n                        if (amount !== undefined && !isNaN(amount) && type(amount) == TYPES.n) {\r\n                            var normalizeIsRTLisX = normalizeRTL && isRTLisX;\r\n                            var operatorCurrScroll = currScroll * (normalizeIsRTLisX && _rtlScrollBehavior.n ? -1 : 1);\r\n                            var invert = normalizeIsRTLisX && _rtlScrollBehavior.i;\r\n                            var negate = normalizeIsRTLisX && _rtlScrollBehavior.n;\r\n                            operatorCurrScroll = invert ? (maxScroll - operatorCurrScroll) : operatorCurrScroll;\r\n                            switch (operator) {\r\n                                case '+=':\r\n                                    finalValue = operatorCurrScroll + amount;\r\n                                    break;\r\n                                case '-=':\r\n                                    finalValue = operatorCurrScroll - amount;\r\n                                    break;\r\n                                case '*=':\r\n                                    finalValue = operatorCurrScroll * amount;\r\n                                    break;\r\n                                case '/=':\r\n                                    finalValue = operatorCurrScroll / amount;\r\n                                    break;\r\n                                default:\r\n                                    finalValue = amount;\r\n                                    break;\r\n                            }\r\n                            finalValue = invert ? maxScroll - finalValue : finalValue;\r\n                            finalValue *= negate ? -1 : 1;\r\n                            finalValue = isRTLisX && _rtlScrollBehavior.n ? MATH.min(0, MATH.max(maxScroll, finalValue)) : MATH.max(0, MATH.min(maxScroll, finalValue));\r\n                        }\r\n                        return finalValue === currScroll ? undefined : finalValue;\r\n                    }\r\n                    function getPerAxisValue(value, valueInternalType, defaultValue, allowedValues) {\r\n                        var resultDefault = [defaultValue, defaultValue];\r\n                        var valueType = type(value);\r\n                        var valueArrLength;\r\n                        var valueArrItem;\r\n\r\n                        //value can be [ string, or array of two strings ]\r\n                        if (valueType == valueInternalType) {\r\n                            value = [value, value];\r\n                        }\r\n                        else if (valueType == TYPES.a) {\r\n                            valueArrLength = value[strLength];\r\n                            if (valueArrLength > 2 || valueArrLength < 1)\r\n                                value = resultDefault;\r\n                            else {\r\n                                if (valueArrLength === 1)\r\n                                    value[1] = defaultValue;\r\n                                for (i = 0; i < valueArrLength; i++) {\r\n                                    valueArrItem = value[i];\r\n                                    if (type(valueArrItem) != valueInternalType || !checkSettingsStringValue(valueArrItem, allowedValues)) {\r\n                                        value = resultDefault;\r\n                                        break;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        else if (valueType == TYPES.o)\r\n                            value = [value[_strX] || defaultValue, value[_strY] || defaultValue];\r\n                        else\r\n                            value = resultDefault;\r\n                        return { x: value[0], y: value[1] };\r\n                    }\r\n                    function generateMargin(marginTopRightBottomLeftArray) {\r\n                        var result = [];\r\n                        var currValue;\r\n                        var currValueType;\r\n                        var valueDirections = [_strTop, _strRight, _strBottom, _strLeft];\r\n                        for (i = 0; i < marginTopRightBottomLeftArray[strLength]; i++) {\r\n                            if (i === valueDirections[strLength])\r\n                                break;\r\n                            currValue = marginTopRightBottomLeftArray[i];\r\n                            currValueType = type(currValue);\r\n                            if (currValueType == TYPES.b)\r\n                                result.push(currValue ? parseToZeroOrNumber(finalElement.css(_strMarginMinus + valueDirections[i])) : 0);\r\n                            else\r\n                                result.push(currValueType == TYPES.n ? currValue : 0);\r\n                        }\r\n                        return result;\r\n                    }\r\n\r\n                    if (possibleElementIsJQuery || possibleElementIsHTMLElement) {\r\n                        //get settings\r\n                        var margin = coordinatesIsElementObj ? coordinates.margin : 0;\r\n                        var axis = coordinatesIsElementObj ? coordinates.axis : 0;\r\n                        var scroll = coordinatesIsElementObj ? coordinates.scroll : 0;\r\n                        var block = coordinatesIsElementObj ? coordinates.block : 0;\r\n                        var marginDefault = [0, 0, 0, 0];\r\n                        var marginType = type(margin);\r\n                        var marginLength;\r\n                        finalElement = possibleElementIsJQuery ? possibleElement : FRAMEWORK(possibleElement);\r\n\r\n                        if (finalElement[strLength] > 0) {\r\n                            //margin can be [ boolean, number, array of 2, array of 4, object ]\r\n                            if (marginType == TYPES.n || marginType == TYPES.b)\r\n                                margin = generateMargin([margin, margin, margin, margin]);\r\n                            else if (marginType == TYPES.a) {\r\n                                marginLength = margin[strLength];\r\n                                if (marginLength === 2)\r\n                                    margin = generateMargin([margin[0], margin[1], margin[0], margin[1]]);\r\n                                else if (marginLength >= 4)\r\n                                    margin = generateMargin(margin);\r\n                                else\r\n                                    margin = marginDefault;\r\n                            }\r\n                            else if (marginType == TYPES.o)\r\n                                margin = generateMargin([margin[_strTop], margin[_strRight], margin[_strBottom], margin[_strLeft]]);\r\n                            else\r\n                                margin = marginDefault;\r\n\r\n                            //block = type(block) === TYPES.b ? block ? [ strNearest, strBegin ] : [ strNearest, strEnd ] : block;\r\n                            settingsAxis = checkSettingsStringValue(axis, elementObjSettingsAxisValues) ? axis : 'xy';\r\n                            settingsScroll = getPerAxisValue(scroll, TYPES.s, strAlways, elementObjSettingsScrollValues);\r\n                            settingsBlock = getPerAxisValue(block, TYPES.s, strBegin, elementObjSettingsBlockValues);\r\n                            settingsMargin = margin;\r\n\r\n                            var viewportScroll = {\r\n                                l: _scrollHorizontalInfo._currentScroll,\r\n                                t: _scrollVerticalInfo._currentScroll\r\n                            };\r\n                            // use padding element instead of viewport element because padding element has never padding, margin or position applied.\r\n                            var viewportOffset = _paddingElement.offset();\r\n\r\n                            //get coordinates\r\n                            var elementOffset = finalElement.offset();\r\n                            var doNotScroll = {\r\n                                x: settingsScroll.x == strNever || settingsAxis == _strY,\r\n                                y: settingsScroll.y == strNever || settingsAxis == _strX\r\n                            };\r\n                            elementOffset[_strTop] -= settingsMargin[0];\r\n                            elementOffset[_strLeft] -= settingsMargin[3];\r\n                            var elementScrollCoordinates = {\r\n                                x: MATH.round(elementOffset[_strLeft] - viewportOffset[_strLeft] + viewportScroll.l),\r\n                                y: MATH.round(elementOffset[_strTop] - viewportOffset[_strTop] + viewportScroll.t)\r\n                            };\r\n                            if (_isRTL) {\r\n                                if (!_rtlScrollBehavior.n && !_rtlScrollBehavior.i)\r\n                                    elementScrollCoordinates.x = MATH.round(viewportOffset[_strLeft] - elementOffset[_strLeft] + viewportScroll.l);\r\n                                if (_rtlScrollBehavior.n && normalizeRTL)\r\n                                    elementScrollCoordinates.x *= -1;\r\n                                if (_rtlScrollBehavior.i && normalizeRTL)\r\n                                    elementScrollCoordinates.x = MATH.round(viewportOffset[_strLeft] - elementOffset[_strLeft] + (_scrollHorizontalInfo._maxScroll - viewportScroll.l));\r\n                            }\r\n\r\n                            //measuring is required\r\n                            if (settingsBlock.x != strBegin || settingsBlock.y != strBegin || settingsScroll.x == strIfNeeded || settingsScroll.y == strIfNeeded || _isRTL) {\r\n                                var measuringElm = finalElement[0];\r\n                                var rawElementSize = _supportTransform ? measuringElm[LEXICON.bCR]() : {\r\n                                    width: measuringElm[LEXICON.oW],\r\n                                    height: measuringElm[LEXICON.oH]\r\n                                };\r\n                                var elementSize = {\r\n                                    w: rawElementSize[_strWidth] + settingsMargin[3] + settingsMargin[1],\r\n                                    h: rawElementSize[_strHeight] + settingsMargin[0] + settingsMargin[2]\r\n                                };\r\n                                var finalizeBlock = function (isX) {\r\n                                    var vars = getScrollbarVars(isX);\r\n                                    var wh = vars._w_h;\r\n                                    var lt = vars._left_top;\r\n                                    var xy = vars._x_y;\r\n                                    var blockIsEnd = settingsBlock[xy] == (isX ? _isRTL ? strBegin : strEnd : strEnd);\r\n                                    var blockIsCenter = settingsBlock[xy] == strCenter;\r\n                                    var blockIsNearest = settingsBlock[xy] == strNearest;\r\n                                    var scrollNever = settingsScroll[xy] == strNever;\r\n                                    var scrollIfNeeded = settingsScroll[xy] == strIfNeeded;\r\n                                    var vpSize = _viewportSize[wh];\r\n                                    var vpOffset = viewportOffset[lt];\r\n                                    var elSize = elementSize[wh];\r\n                                    var elOffset = elementOffset[lt];\r\n                                    var divide = blockIsCenter ? 2 : 1;\r\n                                    var elementCenterOffset = elOffset + (elSize / 2);\r\n                                    var viewportCenterOffset = vpOffset + (vpSize / 2);\r\n                                    var isInView =\r\n                                        elSize <= vpSize\r\n                                        && elOffset >= vpOffset\r\n                                        && elOffset + elSize <= vpOffset + vpSize;\r\n\r\n                                    if (scrollNever)\r\n                                        doNotScroll[xy] = true;\r\n                                    else if (!doNotScroll[xy]) {\r\n                                        if (blockIsNearest || scrollIfNeeded) {\r\n                                            doNotScroll[xy] = scrollIfNeeded ? isInView : false;\r\n                                            blockIsEnd = elSize < vpSize ? elementCenterOffset > viewportCenterOffset : elementCenterOffset < viewportCenterOffset;\r\n                                        }\r\n                                        elementScrollCoordinates[xy] -= blockIsEnd || blockIsCenter ? ((vpSize / divide) - (elSize / divide)) * (isX && _isRTL && normalizeRTL ? -1 : 1) : 0;\r\n                                    }\r\n                                };\r\n                                finalizeBlock(true);\r\n                                finalizeBlock(false);\r\n                            }\r\n\r\n                            if (doNotScroll.y)\r\n                                delete elementScrollCoordinates.y;\r\n                            if (doNotScroll.x)\r\n                                delete elementScrollCoordinates.x;\r\n\r\n                            coordinates = elementScrollCoordinates;\r\n                        }\r\n                    }\r\n\r\n                    finalScroll[_strScrollLeft] = getFinalScroll(true, getRawScroll(true, coordinates));\r\n                    finalScroll[_strScrollTop] = getFinalScroll(false, getRawScroll(false, coordinates));\r\n                    doScrollLeft = finalScroll[_strScrollLeft] !== undefined;\r\n                    doScrollTop = finalScroll[_strScrollTop] !== undefined;\r\n\r\n                    if ((doScrollLeft || doScrollTop) && (duration > 0 || durationIsObject)) {\r\n                        if (durationIsObject) {\r\n                            duration.complete = proxyCompleteCallback;\r\n                            _viewportElement.animate(finalScroll, duration);\r\n                        }\r\n                        else {\r\n                            animationOptions = {\r\n                                duration: duration,\r\n                                complete: proxyCompleteCallback\r\n                            };\r\n                            if (COMPATIBILITY.isA(easing) || FRAMEWORK.isPlainObject(easing)) {\r\n                                specialEasing[_strScrollLeft] = easing[0] || easing.x;\r\n                                specialEasing[_strScrollTop] = easing[1] || easing.y;\r\n                                animationOptions.specialEasing = specialEasing;\r\n                            }\r\n                            else {\r\n                                animationOptions.easing = easing;\r\n                            }\r\n                            _viewportElement.animate(finalScroll, animationOptions);\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (doScrollLeft)\r\n                            _viewportElement[_strScrollLeft](finalScroll[_strScrollLeft]);\r\n                        if (doScrollTop)\r\n                            _viewportElement[_strScrollTop](finalScroll[_strScrollTop]);\r\n                        updateScrollbarInfos();\r\n                    }\r\n                };\r\n\r\n                /**\r\n                 * Stops all scroll animations.\r\n                 * @returns {*} The current OverlayScrollbars instance (for chaining).\r\n                 */\r\n                _base.scrollStop = function (param1, param2, param3) {\r\n                    _viewportElement.stop(param1, param2, param3);\r\n                    return _base;\r\n                };\r\n\r\n                /**\r\n                 * Returns all relevant elements.\r\n                 * @param elementName The name of the element which shall be returned.\r\n                 * @returns {{target: *, host: *, padding: *, viewport: *, content: *, scrollbarHorizontal: {scrollbar: *, track: *, handle: *}, scrollbarVertical: {scrollbar: *, track: *, handle: *}, scrollbarCorner: *} | *}\r\n                 */\r\n                _base.getElements = function (elementName) {\r\n                    var obj = {\r\n                        target: _targetElementNative,\r\n                        host: _hostElementNative,\r\n                        padding: _paddingElementNative,\r\n                        viewport: _viewportElementNative,\r\n                        content: _contentElementNative,\r\n                        scrollbarHorizontal: {\r\n                            scrollbar: _scrollbarHorizontalElement[0],\r\n                            track: _scrollbarHorizontalTrackElement[0],\r\n                            handle: _scrollbarHorizontalHandleElement[0]\r\n                        },\r\n                        scrollbarVertical: {\r\n                            scrollbar: _scrollbarVerticalElement[0],\r\n                            track: _scrollbarVerticalTrackElement[0],\r\n                            handle: _scrollbarVerticalHandleElement[0]\r\n                        },\r\n                        scrollbarCorner: _scrollbarCornerElement[0]\r\n                    };\r\n                    return type(elementName) == TYPES.s ? getObjectPropVal(obj, elementName) : obj;\r\n                };\r\n\r\n                /**\r\n                 * Returns a object which describes the current state of this instance.\r\n                 * @param stateProperty A specific property from the state object which shall be returned.\r\n                 * @returns {{widthAuto, heightAuto, overflowAmount, hideOverflow, hasOverflow, contentScrollSize, viewportSize, hostSize, autoUpdate} | *}\r\n                 */\r\n                _base.getState = function (stateProperty) {\r\n                    function prepare(obj) {\r\n                        if (!FRAMEWORK.isPlainObject(obj))\r\n                            return obj;\r\n                        var extended = extendDeep({}, obj);\r\n                        var changePropertyName = function (from, to) {\r\n                            if (extended[LEXICON.hOP](from)) {\r\n                                extended[to] = extended[from];\r\n                                delete extended[from];\r\n                            }\r\n                        };\r\n                        changePropertyName('w', _strWidth); //change w to width\r\n                        changePropertyName('h', _strHeight); //change h to height\r\n                        delete extended.c; //delete c (the 'changed' prop)\r\n                        return extended;\r\n                    };\r\n                    var obj = {\r\n                        destroyed: !!prepare(_destroyed),\r\n                        sleeping: !!prepare(_sleeping),\r\n                        autoUpdate: prepare(!_mutationObserversConnected),\r\n                        widthAuto: prepare(_widthAutoCache),\r\n                        heightAuto: prepare(_heightAutoCache),\r\n                        padding: prepare(_cssPaddingCache),\r\n                        overflowAmount: prepare(_overflowAmountCache),\r\n                        hideOverflow: prepare(_hideOverflowCache),\r\n                        hasOverflow: prepare(_hasOverflowCache),\r\n                        contentScrollSize: prepare(_contentScrollSizeCache),\r\n                        viewportSize: prepare(_viewportSize),\r\n                        hostSize: prepare(_hostSizeCache),\r\n                        documentMixed: prepare(_documentMixed)\r\n                    };\r\n                    return type(stateProperty) == TYPES.s ? getObjectPropVal(obj, stateProperty) : obj;\r\n                };\r\n\r\n                /**\r\n                 * Gets all or specific extension instance.\r\n                 * @param extName The name of the extension from which the instance shall be got.\r\n                 * @returns {{}} The instance of the extension with the given name or undefined if the instance couldn't be found.\r\n                 */\r\n                _base.ext = function (extName) {\r\n                    var result;\r\n                    var privateMethods = _extensionsPrivateMethods.split(' ');\r\n                    var i = 0;\r\n                    if (type(extName) == TYPES.s) {\r\n                        if (_extensions[LEXICON.hOP](extName)) {\r\n                            result = extendDeep({}, _extensions[extName]);\r\n                            for (; i < privateMethods.length; i++)\r\n                                delete result[privateMethods[i]];\r\n                        }\r\n                    }\r\n                    else {\r\n                        result = {};\r\n                        for (i in _extensions)\r\n                            result[i] = extendDeep({}, _base.ext(i));\r\n                    }\r\n                    return result;\r\n                };\r\n\r\n                /**\r\n                 * Adds a extension to this instance.\r\n                 * @param extName The name of the extension which shall be added.\r\n                 * @param extensionOptions The extension options which shall be used.\r\n                 * @returns {{}} The instance of the added extension or undefined if the extension couldn't be added properly.\r\n                 */\r\n                _base.addExt = function (extName, extensionOptions) {\r\n                    var registeredExtensionObj = _plugin.extension(extName);\r\n                    var instance;\r\n                    var instanceAdded;\r\n                    var instanceContract;\r\n                    var contractResult;\r\n                    var contractFulfilled = true;\r\n                    if (registeredExtensionObj) {\r\n                        if (!_extensions[LEXICON.hOP](extName)) {\r\n                            instance = registeredExtensionObj.extensionFactory.call(_base,\r\n                                extendDeep({}, registeredExtensionObj.defaultOptions),\r\n                                FRAMEWORK,\r\n                                COMPATIBILITY);\r\n\r\n                            if (instance) {\r\n                                instanceContract = instance.contract;\r\n                                if (type(instanceContract) == TYPES.f) {\r\n                                    contractResult = instanceContract(window);\r\n                                    contractFulfilled = type(contractResult) == TYPES.b ? contractResult : contractFulfilled;\r\n                                }\r\n                                if (contractFulfilled) {\r\n                                    _extensions[extName] = instance;\r\n                                    instanceAdded = instance.added;\r\n                                    if (type(instanceAdded) == TYPES.f)\r\n                                        instanceAdded(extensionOptions);\r\n\r\n                                    return _base.ext(extName);\r\n                                }\r\n                            }\r\n                        }\r\n                        else\r\n                            return _base.ext(extName);\r\n                    }\r\n                    else\r\n                        console.warn(\"A extension with the name \\\"\" + extName + \"\\\" isn't registered.\");\r\n                };\r\n\r\n                /**\r\n                 * Removes a extension from this instance.\r\n                 * @param extName The name of the extension which shall be removed.\r\n                 * @returns {boolean} True if the extension was removed, false otherwise e.g. if the extension wasn't added before.\r\n                 */\r\n                _base.removeExt = function (extName) {\r\n                    var instance = _extensions[extName];\r\n                    var instanceRemoved;\r\n                    if (instance) {\r\n                        delete _extensions[extName];\r\n\r\n                        instanceRemoved = instance.removed;\r\n                        if (type(instanceRemoved) == TYPES.f)\r\n                            instanceRemoved();\r\n\r\n                        return true;\r\n                    }\r\n                    return false;\r\n                };\r\n\r\n                /**\r\n                 * Constructs the plugin.\r\n                 * @param targetElement The element to which the plugin shall be applied.\r\n                 * @param options The initial options of the plugin.\r\n                 * @param extensions The extension(s) which shall be added right after the initialization.\r\n                 * @returns {boolean} True if the plugin was successfully initialized, false otherwise.\r\n                 */\r\n                function construct(targetElement, options, extensions) {\r\n                    _defaultOptions = globals.defaultOptions;\r\n                    _nativeScrollbarStyling = globals.nativeScrollbarStyling;\r\n                    _nativeScrollbarSize = extendDeep({}, globals.nativeScrollbarSize);\r\n                    _nativeScrollbarIsOverlaid = extendDeep({}, globals.nativeScrollbarIsOverlaid);\r\n                    _overlayScrollbarDummySize = extendDeep({}, globals.overlayScrollbarDummySize);\r\n                    _rtlScrollBehavior = extendDeep({}, globals.rtlScrollBehavior);\r\n\r\n                    //parse & set options but don't update\r\n                    setOptions(extendDeep({}, _defaultOptions, options));\r\n\r\n                    _cssCalc = globals.cssCalc;\r\n                    _msieVersion = globals.msie;\r\n                    _autoUpdateRecommended = globals.autoUpdateRecommended;\r\n                    _supportTransition = globals.supportTransition;\r\n                    _supportTransform = globals.supportTransform;\r\n                    _supportPassiveEvents = globals.supportPassiveEvents;\r\n                    _supportResizeObserver = globals.supportResizeObserver;\r\n                    _supportMutationObserver = globals.supportMutationObserver;\r\n                    _restrictedMeasuring = globals.restrictedMeasuring;\r\n                    _documentElement = FRAMEWORK(targetElement.ownerDocument);\r\n                    _documentElementNative = _documentElement[0];\r\n                    _windowElement = FRAMEWORK(_documentElementNative.defaultView || _documentElementNative.parentWindow);\r\n                    _windowElementNative = _windowElement[0];\r\n                    _htmlElement = findFirst(_documentElement, 'html');\r\n                    _bodyElement = findFirst(_htmlElement, 'body');\r\n                    _targetElement = FRAMEWORK(targetElement);\r\n                    _targetElementNative = _targetElement[0];\r\n                    _isTextarea = _targetElement.is('textarea');\r\n                    _isBody = _targetElement.is('body');\r\n                    _documentMixed = _documentElementNative !== document;\r\n\r\n                    /* On a div Element The if checks only whether:\r\n                     * - the targetElement has the class \"os-host\"\r\n                     * - the targetElement has a a child with the class \"os-padding\"\r\n                     * \r\n                     * If that's the case, its assumed the DOM has already the following structure:\r\n                     * (The \".os-host\" element is the targetElement)\r\n                     *\r\n                     *  <div class=\"os-host\">\r\n                     *      <div class=\"os-resize-observer-host\"></div>\r\n                     *      <div class=\"os-padding\">\r\n                     *          <div class=\"os-viewport\">\r\n                     *              <div class=\"os-content\"></div>\r\n                     *          </div>\r\n                     *      </div>\r\n                     *      <div class=\"os-scrollbar os-scrollbar-horizontal \">\r\n                     *          <div class=\"os-scrollbar-track\">\r\n                     *              <div class=\"os-scrollbar-handle\"></div>\r\n                     *          </div>\r\n                     *      </div>\r\n                     *      <div class=\"os-scrollbar os-scrollbar-vertical\">\r\n                     *          <div class=\"os-scrollbar-track\">\r\n                     *              <div class=\"os-scrollbar-handle\"></div>\r\n                     *          </div>\r\n                     *      </div>\r\n                     *      <div class=\"os-scrollbar-corner\"></div>\r\n                     *  </div>\r\n                     *\r\n                     * =====================================================================================\r\n                     * \r\n                     * On a Textarea Element The if checks only whether:\r\n                     * - the targetElement has the class \"os-textarea\" \r\n                     * - the targetElement is inside a element with the class \"os-content\" \r\n                     * \r\n                     * If that's the case, its assumed the DOM has already the following structure:\r\n                     * (The \".os-textarea\" (textarea) element is the targetElement)\r\n                     *\r\n                     *  <div class=\"os-host-textarea\">\r\n                     *      <div class=\"os-resize-observer-host\"></div>\r\n                     *      <div class=\"os-padding os-text-inherit\">\r\n                     *          <div class=\"os-viewport os-text-inherit\">\r\n                     *              <div class=\"os-content os-text-inherit\">\r\n                     *                  <div class=\"os-textarea-cover\"></div>\r\n                     *                  <textarea class=\"os-textarea os-text-inherit\"></textarea>\r\n                     *              </div>\r\n                     *          </div>\r\n                     *      </div>\r\n                     *      <div class=\"os-scrollbar os-scrollbar-horizontal \">\r\n                     *          <div class=\"os-scrollbar-track\">\r\n                     *              <div class=\"os-scrollbar-handle\"></div>\r\n                     *          </div>\r\n                     *      </div>\r\n                     *      <div class=\"os-scrollbar os-scrollbar-vertical\">\r\n                     *          <div class=\"os-scrollbar-track\">\r\n                     *              <div class=\"os-scrollbar-handle\"></div>\r\n                     *          </div>\r\n                     *      </div>\r\n                     *      <div class=\"os-scrollbar-corner\"></div>\r\n                     *  </div>\r\n                     */\r\n                    _domExists = _isTextarea\r\n                        ? _targetElement.hasClass(_classNameTextareaElement) && _targetElement.parent().hasClass(_classNameContentElement)\r\n                        : _targetElement.hasClass(_classNameHostElement) && _targetElement.children(_strDot + _classNamePaddingElement)[LEXICON.l];\r\n\r\n                    var initBodyScroll;\r\n                    var bodyMouseTouchDownListener;\r\n\r\n                    //check if the plugin hasn't to be initialized\r\n                    if (_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y && !_currentPreparedOptions.nativeScrollbarsOverlaid.initialize) {\r\n                        dispatchCallback('onInitializationWithdrawn');\r\n                        if (_domExists) {\r\n                            setupStructureDOM(true);\r\n                            setupScrollbarsDOM(true);\r\n                            setupScrollbarCornerDOM(true);\r\n                        }\r\n\r\n                        _destroyed = true;\r\n                        _sleeping = true;\r\n\r\n                        return _base;\r\n                    }\r\n\r\n                    if (_isBody) {\r\n                        initBodyScroll = {};\r\n                        initBodyScroll.l = MATH.max(_targetElement[_strScrollLeft](), _htmlElement[_strScrollLeft](), _windowElement[_strScrollLeft]());\r\n                        initBodyScroll.t = MATH.max(_targetElement[_strScrollTop](), _htmlElement[_strScrollTop](), _windowElement[_strScrollTop]());\r\n\r\n                        bodyMouseTouchDownListener = function () {\r\n                            _viewportElement.removeAttr(LEXICON.ti);\r\n                            setupResponsiveEventListener(_viewportElement, _strMouseTouchDownEvent, bodyMouseTouchDownListener, true, true);\r\n                        }\r\n                    }\r\n\r\n                    //build OverlayScrollbars DOM\r\n                    setupStructureDOM();\r\n                    setupScrollbarsDOM();\r\n                    setupScrollbarCornerDOM();\r\n\r\n                    //create OverlayScrollbars events\r\n                    setupStructureEvents();\r\n                    setupScrollbarEvents(true);\r\n                    setupScrollbarEvents(false);\r\n                    setupScrollbarCornerEvents();\r\n\r\n                    //create mutation observers\r\n                    createMutationObservers();\r\n\r\n                    //build resize observer for the host element\r\n                    setupResizeObserver(_sizeObserverElement, hostOnResized);\r\n\r\n                    if (_isBody) {\r\n                        //apply the body scroll to handle it right in the update method\r\n                        _viewportElement[_strScrollLeft](initBodyScroll.l)[_strScrollTop](initBodyScroll.t);\r\n\r\n                        //set the focus on the viewport element so you dont have to click on the page to use keyboard keys (up / down / space) for scrolling\r\n                        if (document.activeElement == targetElement && _viewportElementNative.focus) {\r\n                            //set a tabindex to make the viewportElement focusable\r\n                            _viewportElement.attr(LEXICON.ti, '-1');\r\n                            _viewportElementNative.focus();\r\n\r\n                            /* the tabindex has to be removed due to;\r\n                             * If you set the tabindex attribute on an <div>, then its child content cannot be scrolled with the arrow keys unless you set tabindex on the content, too\r\n                             * https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex\r\n                             */\r\n                            setupResponsiveEventListener(_viewportElement, _strMouseTouchDownEvent, bodyMouseTouchDownListener, false, true);\r\n                        }\r\n                    }\r\n\r\n                    //update for the first time & initialize cache\r\n                    _base.update(_strAuto);\r\n\r\n                    //the plugin is initialized now!\r\n                    _initialized = true;\r\n                    dispatchCallback('onInitialized');\r\n\r\n                    //call all callbacks which would fire before the initialized was complete\r\n                    each(_callbacksInitQeueue, function (index, value) { dispatchCallback(value.n, value.a); });\r\n                    _callbacksInitQeueue = [];\r\n\r\n                    //add extensions\r\n                    if (type(extensions) == TYPES.s)\r\n                        extensions = [extensions];\r\n                    if (COMPATIBILITY.isA(extensions))\r\n                        each(extensions, function (index, value) { _base.addExt(value); });\r\n                    else if (FRAMEWORK.isPlainObject(extensions))\r\n                        each(extensions, function (key, value) { _base.addExt(key, value); });\r\n\r\n                    //add the transition class for transitions AFTER the first update & AFTER the applied extensions (for preventing unwanted transitions)\r\n                    setTimeout(function () {\r\n                        if (_supportTransition && !_destroyed)\r\n                            addClass(_hostElement, _classNameHostTransition);\r\n                    }, 333);\r\n\r\n                    return _base;\r\n                }\r\n\r\n                if (_plugin.valid(construct(pluginTargetElement, options, extensions))) {\r\n                    INSTANCES(pluginTargetElement, _base);\r\n                }\r\n\r\n                return _base;\r\n            }\r\n\r\n            /**\r\n             * Initializes a new OverlayScrollbarsInstance object or changes options if already initialized or returns the current instance.\r\n             * @param pluginTargetElements The elements to which the Plugin shall be initialized.\r\n             * @param options The custom options with which the plugin shall be initialized.\r\n             * @param extensions The extension(s) which shall be added right after initialization.\r\n             * @returns {*}\r\n             */\r\n            _plugin = window[PLUGINNAME] = function (pluginTargetElements, options, extensions) {\r\n                if (arguments[LEXICON.l] === 0)\r\n                    return this;\r\n\r\n                var arr = [];\r\n                var optsIsPlainObj = FRAMEWORK.isPlainObject(options);\r\n                var inst;\r\n                var result;\r\n\r\n                //pluginTargetElements is null or undefined\r\n                if (!pluginTargetElements)\r\n                    return optsIsPlainObj || !options ? result : arr;\r\n\r\n                /*\r\n                   pluginTargetElements will be converted to:\r\n                   1. A jQueryElement Array\r\n                   2. A HTMLElement Array\r\n                   3. A Array with a single HTML Element\r\n                   so pluginTargetElements is always a array.\r\n                */\r\n                pluginTargetElements = pluginTargetElements[LEXICON.l] != undefined ? pluginTargetElements : [pluginTargetElements[0] || pluginTargetElements];\r\n                initOverlayScrollbarsStatics();\r\n\r\n                if (pluginTargetElements[LEXICON.l] > 0) {\r\n                    if (optsIsPlainObj) {\r\n                        FRAMEWORK.each(pluginTargetElements, function (i, v) {\r\n                            inst = v;\r\n                            if (inst !== undefined)\r\n                                arr.push(OverlayScrollbarsInstance(inst, options, extensions, _pluginsGlobals, _pluginsAutoUpdateLoop));\r\n                        });\r\n                    }\r\n                    else {\r\n                        FRAMEWORK.each(pluginTargetElements, function (i, v) {\r\n                            inst = INSTANCES(v);\r\n                            if ((options === '!' && _plugin.valid(inst)) || (COMPATIBILITY.type(options) == TYPES.f && options(v, inst)))\r\n                                arr.push(inst);\r\n                            else if (options === undefined)\r\n                                arr.push(inst);\r\n                        });\r\n                    }\r\n                    result = arr[LEXICON.l] === 1 ? arr[0] : arr;\r\n                }\r\n                return result;\r\n            };\r\n\r\n            /**\r\n             * Returns a object which contains global information about the plugin and each instance of it.\r\n             * The returned object is just a copy, that means that changes to the returned object won't have any effect to the original object.\r\n             */\r\n            _plugin.globals = function () {\r\n                initOverlayScrollbarsStatics();\r\n                var globals = FRAMEWORK.extend(true, {}, _pluginsGlobals);\r\n                delete globals['msie'];\r\n                return globals;\r\n            };\r\n\r\n            /**\r\n             * Gets or Sets the default options for each new plugin initialization.\r\n             * @param newDefaultOptions The object with which the default options shall be extended.\r\n             */\r\n            _plugin.defaultOptions = function (newDefaultOptions) {\r\n                initOverlayScrollbarsStatics();\r\n                var currDefaultOptions = _pluginsGlobals.defaultOptions;\r\n                if (newDefaultOptions === undefined)\r\n                    return FRAMEWORK.extend(true, {}, currDefaultOptions);\r\n\r\n                //set the new default options\r\n                _pluginsGlobals.defaultOptions = FRAMEWORK.extend(true, {}, currDefaultOptions, _pluginsOptions._validate(newDefaultOptions, _pluginsOptions._template, true, currDefaultOptions)._default);\r\n            };\r\n\r\n            /**\r\n             * Checks whether the passed instance is a non-destroyed OverlayScrollbars instance.\r\n             * @param osInstance The potential OverlayScrollbars instance which shall be checked.\r\n             * @returns {boolean} True if the passed value is a non-destroyed OverlayScrollbars instance, false otherwise.\r\n             */\r\n            _plugin.valid = function (osInstance) {\r\n                return osInstance instanceof _plugin && !osInstance.getState().destroyed;\r\n            };\r\n\r\n            /**\r\n             * Registers, Unregisters or returns a extension.\r\n             * Register: Pass the name and the extension. (defaultOptions is optional)\r\n             * Unregister: Pass the name and anything except a function as extension parameter.\r\n             * Get extension: Pass the name of the extension which shall be got.\r\n             * Get all extensions: Pass no arguments.\r\n             * @param extensionName The name of the extension which shall be registered, unregistered or returned.\r\n             * @param extension A function which generates the instance of the extension or anything other to remove a already registered extension.\r\n             * @param defaultOptions The default options which shall be used for the registered extension.\r\n             */\r\n            _plugin.extension = function (extensionName, extension, defaultOptions) {\r\n                var extNameTypeString = COMPATIBILITY.type(extensionName) == TYPES.s;\r\n                var argLen = arguments[LEXICON.l];\r\n                var i = 0;\r\n                if (argLen < 1 || !extNameTypeString) {\r\n                    //return a copy of all extension objects\r\n                    return FRAMEWORK.extend(true, { length: _pluginsExtensions[LEXICON.l] }, _pluginsExtensions);\r\n                }\r\n                else if (extNameTypeString) {\r\n                    if (COMPATIBILITY.type(extension) == TYPES.f) {\r\n                        //register extension\r\n                        _pluginsExtensions.push({\r\n                            name: extensionName,\r\n                            extensionFactory: extension,\r\n                            defaultOptions: defaultOptions\r\n                        });\r\n                    }\r\n                    else {\r\n                        for (; i < _pluginsExtensions[LEXICON.l]; i++) {\r\n                            if (_pluginsExtensions[i].name === extensionName) {\r\n                                if (argLen > 1)\r\n                                    _pluginsExtensions.splice(i, 1); //remove extension\r\n                                else\r\n                                    return FRAMEWORK.extend(true, {}, _pluginsExtensions[i]); //return extension with the given name\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n\r\n            return _plugin;\r\n        })();\r\n\r\n        if (JQUERY && JQUERY.fn) {\r\n            /**\r\n             * The jQuery initialization interface.\r\n             * @param options The initial options for the construction of the plugin. To initialize the plugin, this option has to be a object! If it isn't a object, the instance(s) are returned and the plugin wont be initialized.\r\n             * @param extensions The extension(s) which shall be added right after initialization.\r\n             * @returns {*} After initialization it returns the jQuery element array, else it returns the instance(s) of the elements which are selected.\r\n             */\r\n            JQUERY.fn.overlayScrollbars = function (options, extensions) {\r\n                var _elements = this;\r\n                if (JQUERY.isPlainObject(options)) {\r\n                    JQUERY.each(_elements, function () { PLUGIN(this, options, extensions); });\r\n                    return _elements;\r\n                }\r\n                else\r\n                    return PLUGIN(_elements, options);\r\n            };\r\n        }\r\n        return PLUGIN;\r\n    }\r\n));","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar FuzzyHighlighter_1 = __importDefault(require(\"./FuzzyHighlighter\"));\nvar Highlighter_1 = require(\"./Highlighter\");\nObject.defineProperty(exports, \"Highlighter\", { enumerable: true, get: function () { return Highlighter_1.Highlighter; } });\nexports.default = FuzzyHighlighter_1.default;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar fuse_js_1 = __importDefault(require(\"fuse.js\"));\nvar React = __importStar(require(\"react\"));\nvar formatResults_1 = require(\"./formatResults\");\nvar FuzzyHighlighter = (function (_super) {\n    __extends(FuzzyHighlighter, _super);\n    function FuzzyHighlighter() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.state = {\n            results: [],\n            cache: {},\n            info: { timing: 0 }\n        };\n        return _this;\n    }\n    FuzzyHighlighter.prototype.componentDidMount = function () {\n        var _a = this.props, data = _a.data, options = _a.options;\n        this.fuse = new fuse_js_1.default(data, __assign(__assign({}, options), { shouldSort: true, includeMatches: true }));\n        this.search();\n    };\n    FuzzyHighlighter.prototype.componentDidUpdate = function (prevProps) {\n        if (prevProps.query !== this.props.query) {\n            this.search();\n        }\n        if (prevProps.data !== this.props.data) {\n            this.fuse.setCollection(this.props.data);\n            this.setState({ cache: {} }, this.search);\n        }\n    };\n    FuzzyHighlighter.prototype.render = function () {\n        var children = this.props.children;\n        var _a = this.state, results = _a.results, info = _a.info;\n        if (children) {\n            return children({\n                results: results,\n                formattedResults: formatResults_1.formatResults(results),\n                timing: info.timing\n            });\n        }\n        return null;\n    };\n    FuzzyHighlighter.prototype.search = function () {\n        var _a;\n        var query = this.props.query;\n        var cache = this.state.cache;\n        if (Object(cache).hasOwnProperty(query)) {\n            return this.setState({ results: cache[query], info: { timing: 0 } });\n        }\n        var start = window.performance.now();\n        var search = this.fuse.search(query);\n        var end = window.performance.now();\n        var results = search;\n        var timing = parseFloat((end - start).toFixed(3));\n        this.setState({\n            results: results,\n            cache: __assign(__assign({}, cache), (_a = {}, _a[query] = results, _a)),\n            info: { timing: timing }\n        });\n    };\n    return FuzzyHighlighter;\n}(React.Component));\nexports.default = FuzzyHighlighter;\n","/**\n * Fuse.js v6.4.6 - Lightweight fuzzy-search (http://fusejs.io)\n *\n * Copyright (c) 2021 Kiro Risk (http://kiro.me)\n * All Rights Reserved. Apache Software License 2.0\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nfunction isArray(value) {\n  return !Array.isArray\n    ? getTag(value) === '[object Array]'\n    : Array.isArray(value)\n}\n\n// Adapted from: https://github.com/lodash/lodash/blob/master/.internal/baseToString.js\nconst INFINITY = 1 / 0;\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value\n  }\n  let result = value + '';\n  return result == '0' && 1 / value == -INFINITY ? '-0' : result\n}\n\nfunction toString(value) {\n  return value == null ? '' : baseToString(value)\n}\n\nfunction isString(value) {\n  return typeof value === 'string'\n}\n\nfunction isNumber(value) {\n  return typeof value === 'number'\n}\n\n// Adapted from: https://github.com/lodash/lodash/blob/master/isBoolean.js\nfunction isBoolean(value) {\n  return (\n    value === true ||\n    value === false ||\n    (isObjectLike(value) && getTag(value) == '[object Boolean]')\n  )\n}\n\nfunction isObject(value) {\n  return typeof value === 'object'\n}\n\n// Checks if `value` is object-like.\nfunction isObjectLike(value) {\n  return isObject(value) && value !== null\n}\n\nfunction isDefined(value) {\n  return value !== undefined && value !== null\n}\n\nfunction isBlank(value) {\n  return !value.trim().length\n}\n\n// Gets the `toStringTag` of `value`.\n// Adapted from: https://github.com/lodash/lodash/blob/master/.internal/getTag.js\nfunction getTag(value) {\n  return value == null\n    ? value === undefined\n      ? '[object Undefined]'\n      : '[object Null]'\n    : Object.prototype.toString.call(value)\n}\n\nconst EXTENDED_SEARCH_UNAVAILABLE = 'Extended search is not available';\n\nconst INCORRECT_INDEX_TYPE = \"Incorrect 'index' type\";\n\nconst LOGICAL_SEARCH_INVALID_QUERY_FOR_KEY = (key) =>\n  `Invalid value for key ${key}`;\n\nconst PATTERN_LENGTH_TOO_LARGE = (max) =>\n  `Pattern length exceeds max of ${max}.`;\n\nconst MISSING_KEY_PROPERTY = (name) => `Missing ${name} property in key`;\n\nconst INVALID_KEY_WEIGHT_VALUE = (key) =>\n  `Property 'weight' in key '${key}' must be a positive integer`;\n\nconst hasOwn = Object.prototype.hasOwnProperty;\n\nclass KeyStore {\n  constructor(keys) {\n    this._keys = [];\n    this._keyMap = {};\n\n    let totalWeight = 0;\n\n    keys.forEach((key) => {\n      let obj = createKey(key);\n\n      totalWeight += obj.weight;\n\n      this._keys.push(obj);\n      this._keyMap[obj.id] = obj;\n\n      totalWeight += obj.weight;\n    });\n\n    // Normalize weights so that their sum is equal to 1\n    this._keys.forEach((key) => {\n      key.weight /= totalWeight;\n    });\n  }\n  get(keyId) {\n    return this._keyMap[keyId]\n  }\n  keys() {\n    return this._keys\n  }\n  toJSON() {\n    return JSON.stringify(this._keys)\n  }\n}\n\nfunction createKey(key) {\n  let path = null;\n  let id = null;\n  let src = null;\n  let weight = 1;\n\n  if (isString(key) || isArray(key)) {\n    src = key;\n    path = createKeyPath(key);\n    id = createKeyId(key);\n  } else {\n    if (!hasOwn.call(key, 'name')) {\n      throw new Error(MISSING_KEY_PROPERTY('name'))\n    }\n\n    const name = key.name;\n    src = name;\n\n    if (hasOwn.call(key, 'weight')) {\n      weight = key.weight;\n\n      if (weight <= 0) {\n        throw new Error(INVALID_KEY_WEIGHT_VALUE(name))\n      }\n    }\n\n    path = createKeyPath(name);\n    id = createKeyId(name);\n  }\n\n  return { path, id, weight, src }\n}\n\nfunction createKeyPath(key) {\n  return isArray(key) ? key : key.split('.')\n}\n\nfunction createKeyId(key) {\n  return isArray(key) ? key.join('.') : key\n}\n\nfunction get(obj, path) {\n  let list = [];\n  let arr = false;\n\n  const deepGet = (obj, path, index) => {\n    if (!isDefined(obj)) {\n      return\n    }\n    if (!path[index]) {\n      // If there's no path left, we've arrived at the object we care about.\n      list.push(obj);\n    } else {\n      let key = path[index];\n\n      const value = obj[key];\n\n      if (!isDefined(value)) {\n        return\n      }\n\n      // If we're at the last value in the path, and if it's a string/number/bool,\n      // add it to the list\n      if (\n        index === path.length - 1 &&\n        (isString(value) || isNumber(value) || isBoolean(value))\n      ) {\n        list.push(toString(value));\n      } else if (isArray(value)) {\n        arr = true;\n        // Search each item in the array.\n        for (let i = 0, len = value.length; i < len; i += 1) {\n          deepGet(value[i], path, index + 1);\n        }\n      } else if (path.length) {\n        // An object. Recurse further.\n        deepGet(value, path, index + 1);\n      }\n    }\n  };\n\n  // Backwards compatibility (since path used to be a string)\n  deepGet(obj, isString(path) ? path.split('.') : path, 0);\n\n  return arr ? list : list[0]\n}\n\nconst MatchOptions = {\n  // Whether the matches should be included in the result set. When `true`, each record in the result\n  // set will include the indices of the matched characters.\n  // These can consequently be used for highlighting purposes.\n  includeMatches: false,\n  // When `true`, the matching function will continue to the end of a search pattern even if\n  // a perfect match has already been located in the string.\n  findAllMatches: false,\n  // Minimum number of characters that must be matched before a result is considered a match\n  minMatchCharLength: 1\n};\n\nconst BasicOptions = {\n  // When `true`, the algorithm continues searching to the end of the input even if a perfect\n  // match is found before the end of the same input.\n  isCaseSensitive: false,\n  // When true, the matching function will continue to the end of a search pattern even if\n  includeScore: false,\n  // List of properties that will be searched. This also supports nested properties.\n  keys: [],\n  // Whether to sort the result list, by score\n  shouldSort: true,\n  // Default sort function: sort by ascending score, ascending index\n  sortFn: (a, b) =>\n    a.score === b.score ? (a.idx < b.idx ? -1 : 1) : a.score < b.score ? -1 : 1\n};\n\nconst FuzzyOptions = {\n  // Approximately where in the text is the pattern expected to be found?\n  location: 0,\n  // At what point does the match algorithm give up. A threshold of '0.0' requires a perfect match\n  // (of both letters and location), a threshold of '1.0' would match anything.\n  threshold: 0.6,\n  // Determines how close the match must be to the fuzzy location (specified above).\n  // An exact letter match which is 'distance' characters away from the fuzzy location\n  // would score as a complete mismatch. A distance of '0' requires the match be at\n  // the exact location specified, a threshold of '1000' would require a perfect match\n  // to be within 800 characters of the fuzzy location to be found using a 0.8 threshold.\n  distance: 100\n};\n\nconst AdvancedOptions = {\n  // When `true`, it enables the use of unix-like search commands\n  useExtendedSearch: false,\n  // The get function to use when fetching an object's properties.\n  // The default will search nested paths *ie foo.bar.baz*\n  getFn: get,\n  // When `true`, search will ignore `location` and `distance`, so it won't matter\n  // where in the string the pattern appears.\n  // More info: https://fusejs.io/concepts/scoring-theory.html#fuzziness-score\n  ignoreLocation: false,\n  // When `true`, the calculation for the relevance score (used for sorting) will\n  // ignore the field-length norm.\n  // More info: https://fusejs.io/concepts/scoring-theory.html#field-length-norm\n  ignoreFieldNorm: false\n};\n\nvar Config = {\n  ...BasicOptions,\n  ...MatchOptions,\n  ...FuzzyOptions,\n  ...AdvancedOptions\n};\n\nconst SPACE = /[^ ]+/g;\n\n// Field-length norm: the shorter the field, the higher the weight.\n// Set to 3 decimals to reduce index size.\nfunction norm(mantissa = 3) {\n  const cache = new Map();\n  const m = Math.pow(10, mantissa);\n\n  return {\n    get(value) {\n      const numTokens = value.match(SPACE).length;\n\n      if (cache.has(numTokens)) {\n        return cache.get(numTokens)\n      }\n\n      const norm = 1 / Math.sqrt(numTokens);\n\n      // In place of `toFixed(mantissa)`, for faster computation\n      const n = parseFloat(Math.round(norm * m) / m);\n\n      cache.set(numTokens, n);\n\n      return n\n    },\n    clear() {\n      cache.clear();\n    }\n  }\n}\n\nclass FuseIndex {\n  constructor({ getFn = Config.getFn } = {}) {\n    this.norm = norm(3);\n    this.getFn = getFn;\n    this.isCreated = false;\n\n    this.setIndexRecords();\n  }\n  setSources(docs = []) {\n    this.docs = docs;\n  }\n  setIndexRecords(records = []) {\n    this.records = records;\n  }\n  setKeys(keys = []) {\n    this.keys = keys;\n    this._keysMap = {};\n    keys.forEach((key, idx) => {\n      this._keysMap[key.id] = idx;\n    });\n  }\n  create() {\n    if (this.isCreated || !this.docs.length) {\n      return\n    }\n\n    this.isCreated = true;\n\n    // List is Array<String>\n    if (isString(this.docs[0])) {\n      this.docs.forEach((doc, docIndex) => {\n        this._addString(doc, docIndex);\n      });\n    } else {\n      // List is Array<Object>\n      this.docs.forEach((doc, docIndex) => {\n        this._addObject(doc, docIndex);\n      });\n    }\n\n    this.norm.clear();\n  }\n  // Adds a doc to the end of the index\n  add(doc) {\n    const idx = this.size();\n\n    if (isString(doc)) {\n      this._addString(doc, idx);\n    } else {\n      this._addObject(doc, idx);\n    }\n  }\n  // Removes the doc at the specified index of the index\n  removeAt(idx) {\n    this.records.splice(idx, 1);\n\n    // Change ref index of every subsquent doc\n    for (let i = idx, len = this.size(); i < len; i += 1) {\n      this.records[i].i -= 1;\n    }\n  }\n  getValueForItemAtKeyId(item, keyId) {\n    return item[this._keysMap[keyId]]\n  }\n  size() {\n    return this.records.length\n  }\n  _addString(doc, docIndex) {\n    if (!isDefined(doc) || isBlank(doc)) {\n      return\n    }\n\n    let record = {\n      v: doc,\n      i: docIndex,\n      n: this.norm.get(doc)\n    };\n\n    this.records.push(record);\n  }\n  _addObject(doc, docIndex) {\n    let record = { i: docIndex, $: {} };\n\n    // Iterate over every key (i.e, path), and fetch the value at that key\n    this.keys.forEach((key, keyIndex) => {\n      // console.log(key)\n      let value = this.getFn(doc, key.path);\n\n      if (!isDefined(value)) {\n        return\n      }\n\n      if (isArray(value)) {\n        let subRecords = [];\n        const stack = [{ nestedArrIndex: -1, value }];\n\n        while (stack.length) {\n          const { nestedArrIndex, value } = stack.pop();\n\n          if (!isDefined(value)) {\n            continue\n          }\n\n          if (isString(value) && !isBlank(value)) {\n            let subRecord = {\n              v: value,\n              i: nestedArrIndex,\n              n: this.norm.get(value)\n            };\n\n            subRecords.push(subRecord);\n          } else if (isArray(value)) {\n            value.forEach((item, k) => {\n              stack.push({\n                nestedArrIndex: k,\n                value: item\n              });\n            });\n          }\n        }\n        record.$[keyIndex] = subRecords;\n      } else if (!isBlank(value)) {\n        let subRecord = {\n          v: value,\n          n: this.norm.get(value)\n        };\n\n        record.$[keyIndex] = subRecord;\n      }\n    });\n\n    this.records.push(record);\n  }\n  toJSON() {\n    return {\n      keys: this.keys,\n      records: this.records\n    }\n  }\n}\n\nfunction createIndex(keys, docs, { getFn = Config.getFn } = {}) {\n  const myIndex = new FuseIndex({ getFn });\n  myIndex.setKeys(keys.map(createKey));\n  myIndex.setSources(docs);\n  myIndex.create();\n  return myIndex\n}\n\nfunction parseIndex(data, { getFn = Config.getFn } = {}) {\n  const { keys, records } = data;\n  const myIndex = new FuseIndex({ getFn });\n  myIndex.setKeys(keys);\n  myIndex.setIndexRecords(records);\n  return myIndex\n}\n\nfunction computeScore(\n  pattern,\n  {\n    errors = 0,\n    currentLocation = 0,\n    expectedLocation = 0,\n    distance = Config.distance,\n    ignoreLocation = Config.ignoreLocation\n  } = {}\n) {\n  const accuracy = errors / pattern.length;\n\n  if (ignoreLocation) {\n    return accuracy\n  }\n\n  const proximity = Math.abs(expectedLocation - currentLocation);\n\n  if (!distance) {\n    // Dodge divide by zero error.\n    return proximity ? 1.0 : accuracy\n  }\n\n  return accuracy + proximity / distance\n}\n\nfunction convertMaskToIndices(\n  matchmask = [],\n  minMatchCharLength = Config.minMatchCharLength\n) {\n  let indices = [];\n  let start = -1;\n  let end = -1;\n  let i = 0;\n\n  for (let len = matchmask.length; i < len; i += 1) {\n    let match = matchmask[i];\n    if (match && start === -1) {\n      start = i;\n    } else if (!match && start !== -1) {\n      end = i - 1;\n      if (end - start + 1 >= minMatchCharLength) {\n        indices.push([start, end]);\n      }\n      start = -1;\n    }\n  }\n\n  // (i-1 - start) + 1 => i - start\n  if (matchmask[i - 1] && i - start >= minMatchCharLength) {\n    indices.push([start, i - 1]);\n  }\n\n  return indices\n}\n\n// Machine word size\nconst MAX_BITS = 32;\n\nfunction search(\n  text,\n  pattern,\n  patternAlphabet,\n  {\n    location = Config.location,\n    distance = Config.distance,\n    threshold = Config.threshold,\n    findAllMatches = Config.findAllMatches,\n    minMatchCharLength = Config.minMatchCharLength,\n    includeMatches = Config.includeMatches,\n    ignoreLocation = Config.ignoreLocation\n  } = {}\n) {\n  if (pattern.length > MAX_BITS) {\n    throw new Error(PATTERN_LENGTH_TOO_LARGE(MAX_BITS))\n  }\n\n  const patternLen = pattern.length;\n  // Set starting location at beginning text and initialize the alphabet.\n  const textLen = text.length;\n  // Handle the case when location > text.length\n  const expectedLocation = Math.max(0, Math.min(location, textLen));\n  // Highest score beyond which we give up.\n  let currentThreshold = threshold;\n  // Is there a nearby exact match? (speedup)\n  let bestLocation = expectedLocation;\n\n  // Performance: only computer matches when the minMatchCharLength > 1\n  // OR if `includeMatches` is true.\n  const computeMatches = minMatchCharLength > 1 || includeMatches;\n  // A mask of the matches, used for building the indices\n  const matchMask = computeMatches ? Array(textLen) : [];\n\n  let index;\n\n  // Get all exact matches, here for speed up\n  while ((index = text.indexOf(pattern, bestLocation)) > -1) {\n    let score = computeScore(pattern, {\n      currentLocation: index,\n      expectedLocation,\n      distance,\n      ignoreLocation\n    });\n\n    currentThreshold = Math.min(score, currentThreshold);\n    bestLocation = index + patternLen;\n\n    if (computeMatches) {\n      let i = 0;\n      while (i < patternLen) {\n        matchMask[index + i] = 1;\n        i += 1;\n      }\n    }\n  }\n\n  // Reset the best location\n  bestLocation = -1;\n\n  let lastBitArr = [];\n  let finalScore = 1;\n  let binMax = patternLen + textLen;\n\n  const mask = 1 << (patternLen - 1);\n\n  for (let i = 0; i < patternLen; i += 1) {\n    // Scan for the best match; each iteration allows for one more error.\n    // Run a binary search to determine how far from the match location we can stray\n    // at this error level.\n    let binMin = 0;\n    let binMid = binMax;\n\n    while (binMin < binMid) {\n      const score = computeScore(pattern, {\n        errors: i,\n        currentLocation: expectedLocation + binMid,\n        expectedLocation,\n        distance,\n        ignoreLocation\n      });\n\n      if (score <= currentThreshold) {\n        binMin = binMid;\n      } else {\n        binMax = binMid;\n      }\n\n      binMid = Math.floor((binMax - binMin) / 2 + binMin);\n    }\n\n    // Use the result from this iteration as the maximum for the next.\n    binMax = binMid;\n\n    let start = Math.max(1, expectedLocation - binMid + 1);\n    let finish = findAllMatches\n      ? textLen\n      : Math.min(expectedLocation + binMid, textLen) + patternLen;\n\n    // Initialize the bit array\n    let bitArr = Array(finish + 2);\n\n    bitArr[finish + 1] = (1 << i) - 1;\n\n    for (let j = finish; j >= start; j -= 1) {\n      let currentLocation = j - 1;\n      let charMatch = patternAlphabet[text.charAt(currentLocation)];\n\n      if (computeMatches) {\n        // Speed up: quick bool to int conversion (i.e, `charMatch ? 1 : 0`)\n        matchMask[currentLocation] = +!!charMatch;\n      }\n\n      // First pass: exact match\n      bitArr[j] = ((bitArr[j + 1] << 1) | 1) & charMatch;\n\n      // Subsequent passes: fuzzy match\n      if (i) {\n        bitArr[j] |=\n          ((lastBitArr[j + 1] | lastBitArr[j]) << 1) | 1 | lastBitArr[j + 1];\n      }\n\n      if (bitArr[j] & mask) {\n        finalScore = computeScore(pattern, {\n          errors: i,\n          currentLocation,\n          expectedLocation,\n          distance,\n          ignoreLocation\n        });\n\n        // This match will almost certainly be better than any existing match.\n        // But check anyway.\n        if (finalScore <= currentThreshold) {\n          // Indeed it is\n          currentThreshold = finalScore;\n          bestLocation = currentLocation;\n\n          // Already passed `loc`, downhill from here on in.\n          if (bestLocation <= expectedLocation) {\n            break\n          }\n\n          // When passing `bestLocation`, don't exceed our current distance from `expectedLocation`.\n          start = Math.max(1, 2 * expectedLocation - bestLocation);\n        }\n      }\n    }\n\n    // No hope for a (better) match at greater error levels.\n    const score = computeScore(pattern, {\n      errors: i + 1,\n      currentLocation: expectedLocation,\n      expectedLocation,\n      distance,\n      ignoreLocation\n    });\n\n    if (score > currentThreshold) {\n      break\n    }\n\n    lastBitArr = bitArr;\n  }\n\n  const result = {\n    isMatch: bestLocation >= 0,\n    // Count exact matches (those with a score of 0) to be \"almost\" exact\n    score: Math.max(0.001, finalScore)\n  };\n\n  if (computeMatches) {\n    const indices = convertMaskToIndices(matchMask, minMatchCharLength);\n    if (!indices.length) {\n      result.isMatch = false;\n    } else if (includeMatches) {\n      result.indices = indices;\n    }\n  }\n\n  return result\n}\n\nfunction createPatternAlphabet(pattern) {\n  let mask = {};\n\n  for (let i = 0, len = pattern.length; i < len; i += 1) {\n    const char = pattern.charAt(i);\n    mask[char] = (mask[char] || 0) | (1 << (len - i - 1));\n  }\n\n  return mask\n}\n\nclass BitapSearch {\n  constructor(\n    pattern,\n    {\n      location = Config.location,\n      threshold = Config.threshold,\n      distance = Config.distance,\n      includeMatches = Config.includeMatches,\n      findAllMatches = Config.findAllMatches,\n      minMatchCharLength = Config.minMatchCharLength,\n      isCaseSensitive = Config.isCaseSensitive,\n      ignoreLocation = Config.ignoreLocation\n    } = {}\n  ) {\n    this.options = {\n      location,\n      threshold,\n      distance,\n      includeMatches,\n      findAllMatches,\n      minMatchCharLength,\n      isCaseSensitive,\n      ignoreLocation\n    };\n\n    this.pattern = isCaseSensitive ? pattern : pattern.toLowerCase();\n\n    this.chunks = [];\n\n    if (!this.pattern.length) {\n      return\n    }\n\n    const addChunk = (pattern, startIndex) => {\n      this.chunks.push({\n        pattern,\n        alphabet: createPatternAlphabet(pattern),\n        startIndex\n      });\n    };\n\n    const len = this.pattern.length;\n\n    if (len > MAX_BITS) {\n      let i = 0;\n      const remainder = len % MAX_BITS;\n      const end = len - remainder;\n\n      while (i < end) {\n        addChunk(this.pattern.substr(i, MAX_BITS), i);\n        i += MAX_BITS;\n      }\n\n      if (remainder) {\n        const startIndex = len - MAX_BITS;\n        addChunk(this.pattern.substr(startIndex), startIndex);\n      }\n    } else {\n      addChunk(this.pattern, 0);\n    }\n  }\n\n  searchIn(text) {\n    const { isCaseSensitive, includeMatches } = this.options;\n\n    if (!isCaseSensitive) {\n      text = text.toLowerCase();\n    }\n\n    // Exact match\n    if (this.pattern === text) {\n      let result = {\n        isMatch: true,\n        score: 0\n      };\n\n      if (includeMatches) {\n        result.indices = [[0, text.length - 1]];\n      }\n\n      return result\n    }\n\n    // Otherwise, use Bitap algorithm\n    const {\n      location,\n      distance,\n      threshold,\n      findAllMatches,\n      minMatchCharLength,\n      ignoreLocation\n    } = this.options;\n\n    let allIndices = [];\n    let totalScore = 0;\n    let hasMatches = false;\n\n    this.chunks.forEach(({ pattern, alphabet, startIndex }) => {\n      const { isMatch, score, indices } = search(text, pattern, alphabet, {\n        location: location + startIndex,\n        distance,\n        threshold,\n        findAllMatches,\n        minMatchCharLength,\n        includeMatches,\n        ignoreLocation\n      });\n\n      if (isMatch) {\n        hasMatches = true;\n      }\n\n      totalScore += score;\n\n      if (isMatch && indices) {\n        allIndices = [...allIndices, ...indices];\n      }\n    });\n\n    let result = {\n      isMatch: hasMatches,\n      score: hasMatches ? totalScore / this.chunks.length : 1\n    };\n\n    if (hasMatches && includeMatches) {\n      result.indices = allIndices;\n    }\n\n    return result\n  }\n}\n\nclass BaseMatch {\n  constructor(pattern) {\n    this.pattern = pattern;\n  }\n  static isMultiMatch(pattern) {\n    return getMatch(pattern, this.multiRegex)\n  }\n  static isSingleMatch(pattern) {\n    return getMatch(pattern, this.singleRegex)\n  }\n  search(/*text*/) {}\n}\n\nfunction getMatch(pattern, exp) {\n  const matches = pattern.match(exp);\n  return matches ? matches[1] : null\n}\n\n// Token: 'file\n\nclass ExactMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'exact'\n  }\n  static get multiRegex() {\n    return /^=\"(.*)\"$/\n  }\n  static get singleRegex() {\n    return /^=(.*)$/\n  }\n  search(text) {\n    const isMatch = text === this.pattern;\n\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices: [0, this.pattern.length - 1]\n    }\n  }\n}\n\n// Token: !fire\n\nclass InverseExactMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'inverse-exact'\n  }\n  static get multiRegex() {\n    return /^!\"(.*)\"$/\n  }\n  static get singleRegex() {\n    return /^!(.*)$/\n  }\n  search(text) {\n    const index = text.indexOf(this.pattern);\n    const isMatch = index === -1;\n\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices: [0, text.length - 1]\n    }\n  }\n}\n\n// Token: ^file\n\nclass PrefixExactMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'prefix-exact'\n  }\n  static get multiRegex() {\n    return /^\\^\"(.*)\"$/\n  }\n  static get singleRegex() {\n    return /^\\^(.*)$/\n  }\n  search(text) {\n    const isMatch = text.startsWith(this.pattern);\n\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices: [0, this.pattern.length - 1]\n    }\n  }\n}\n\n// Token: !^fire\n\nclass InversePrefixExactMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'inverse-prefix-exact'\n  }\n  static get multiRegex() {\n    return /^!\\^\"(.*)\"$/\n  }\n  static get singleRegex() {\n    return /^!\\^(.*)$/\n  }\n  search(text) {\n    const isMatch = !text.startsWith(this.pattern);\n\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices: [0, text.length - 1]\n    }\n  }\n}\n\n// Token: .file$\n\nclass SuffixExactMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'suffix-exact'\n  }\n  static get multiRegex() {\n    return /^\"(.*)\"\\$$/\n  }\n  static get singleRegex() {\n    return /^(.*)\\$$/\n  }\n  search(text) {\n    const isMatch = text.endsWith(this.pattern);\n\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices: [text.length - this.pattern.length, text.length - 1]\n    }\n  }\n}\n\n// Token: !.file$\n\nclass InverseSuffixExactMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'inverse-suffix-exact'\n  }\n  static get multiRegex() {\n    return /^!\"(.*)\"\\$$/\n  }\n  static get singleRegex() {\n    return /^!(.*)\\$$/\n  }\n  search(text) {\n    const isMatch = !text.endsWith(this.pattern);\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices: [0, text.length - 1]\n    }\n  }\n}\n\nclass FuzzyMatch extends BaseMatch {\n  constructor(\n    pattern,\n    {\n      location = Config.location,\n      threshold = Config.threshold,\n      distance = Config.distance,\n      includeMatches = Config.includeMatches,\n      findAllMatches = Config.findAllMatches,\n      minMatchCharLength = Config.minMatchCharLength,\n      isCaseSensitive = Config.isCaseSensitive,\n      ignoreLocation = Config.ignoreLocation\n    } = {}\n  ) {\n    super(pattern);\n    this._bitapSearch = new BitapSearch(pattern, {\n      location,\n      threshold,\n      distance,\n      includeMatches,\n      findAllMatches,\n      minMatchCharLength,\n      isCaseSensitive,\n      ignoreLocation\n    });\n  }\n  static get type() {\n    return 'fuzzy'\n  }\n  static get multiRegex() {\n    return /^\"(.*)\"$/\n  }\n  static get singleRegex() {\n    return /^(.*)$/\n  }\n  search(text) {\n    return this._bitapSearch.searchIn(text)\n  }\n}\n\n// Token: 'file\n\nclass IncludeMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'include'\n  }\n  static get multiRegex() {\n    return /^'\"(.*)\"$/\n  }\n  static get singleRegex() {\n    return /^'(.*)$/\n  }\n  search(text) {\n    let location = 0;\n    let index;\n\n    const indices = [];\n    const patternLen = this.pattern.length;\n\n    // Get all exact matches\n    while ((index = text.indexOf(this.pattern, location)) > -1) {\n      location = index + patternLen;\n      indices.push([index, location - 1]);\n    }\n\n    const isMatch = !!indices.length;\n\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices\n    }\n  }\n}\n\n// ❗Order is important. DO NOT CHANGE.\nconst searchers = [\n  ExactMatch,\n  IncludeMatch,\n  PrefixExactMatch,\n  InversePrefixExactMatch,\n  InverseSuffixExactMatch,\n  SuffixExactMatch,\n  InverseExactMatch,\n  FuzzyMatch\n];\n\nconst searchersLen = searchers.length;\n\n// Regex to split by spaces, but keep anything in quotes together\nconst SPACE_RE = / +(?=([^\\\"]*\\\"[^\\\"]*\\\")*[^\\\"]*$)/;\nconst OR_TOKEN = '|';\n\n// Return a 2D array representation of the query, for simpler parsing.\n// Example:\n// \"^core go$ | rb$ | py$ xy$\" => [[\"^core\", \"go$\"], [\"rb$\"], [\"py$\", \"xy$\"]]\nfunction parseQuery(pattern, options = {}) {\n  return pattern.split(OR_TOKEN).map((item) => {\n    let query = item\n      .trim()\n      .split(SPACE_RE)\n      .filter((item) => item && !!item.trim());\n\n    let results = [];\n    for (let i = 0, len = query.length; i < len; i += 1) {\n      const queryItem = query[i];\n\n      // 1. Handle multiple query match (i.e, once that are quoted, like `\"hello world\"`)\n      let found = false;\n      let idx = -1;\n      while (!found && ++idx < searchersLen) {\n        const searcher = searchers[idx];\n        let token = searcher.isMultiMatch(queryItem);\n        if (token) {\n          results.push(new searcher(token, options));\n          found = true;\n        }\n      }\n\n      if (found) {\n        continue\n      }\n\n      // 2. Handle single query matches (i.e, once that are *not* quoted)\n      idx = -1;\n      while (++idx < searchersLen) {\n        const searcher = searchers[idx];\n        let token = searcher.isSingleMatch(queryItem);\n        if (token) {\n          results.push(new searcher(token, options));\n          break\n        }\n      }\n    }\n\n    return results\n  })\n}\n\n// These extended matchers can return an array of matches, as opposed\n// to a singl match\nconst MultiMatchSet = new Set([FuzzyMatch.type, IncludeMatch.type]);\n\n/**\n * Command-like searching\n * ======================\n *\n * Given multiple search terms delimited by spaces.e.g. `^jscript .python$ ruby !java`,\n * search in a given text.\n *\n * Search syntax:\n *\n * | Token       | Match type                 | Description                            |\n * | ----------- | -------------------------- | -------------------------------------- |\n * | `jscript`   | fuzzy-match                | Items that fuzzy match `jscript`       |\n * | `=scheme`   | exact-match                | Items that are `scheme`                |\n * | `'python`   | include-match              | Items that include `python`            |\n * | `!ruby`     | inverse-exact-match        | Items that do not include `ruby`       |\n * | `^java`     | prefix-exact-match         | Items that start with `java`           |\n * | `!^earlang` | inverse-prefix-exact-match | Items that do not start with `earlang` |\n * | `.js$`      | suffix-exact-match         | Items that end with `.js`              |\n * | `!.go$`     | inverse-suffix-exact-match | Items that do not end with `.go`       |\n *\n * A single pipe character acts as an OR operator. For example, the following\n * query matches entries that start with `core` and end with either`go`, `rb`,\n * or`py`.\n *\n * ```\n * ^core go$ | rb$ | py$\n * ```\n */\nclass ExtendedSearch {\n  constructor(\n    pattern,\n    {\n      isCaseSensitive = Config.isCaseSensitive,\n      includeMatches = Config.includeMatches,\n      minMatchCharLength = Config.minMatchCharLength,\n      ignoreLocation = Config.ignoreLocation,\n      findAllMatches = Config.findAllMatches,\n      location = Config.location,\n      threshold = Config.threshold,\n      distance = Config.distance\n    } = {}\n  ) {\n    this.query = null;\n    this.options = {\n      isCaseSensitive,\n      includeMatches,\n      minMatchCharLength,\n      findAllMatches,\n      ignoreLocation,\n      location,\n      threshold,\n      distance\n    };\n\n    this.pattern = isCaseSensitive ? pattern : pattern.toLowerCase();\n    this.query = parseQuery(this.pattern, this.options);\n  }\n\n  static condition(_, options) {\n    return options.useExtendedSearch\n  }\n\n  searchIn(text) {\n    const query = this.query;\n\n    if (!query) {\n      return {\n        isMatch: false,\n        score: 1\n      }\n    }\n\n    const { includeMatches, isCaseSensitive } = this.options;\n\n    text = isCaseSensitive ? text : text.toLowerCase();\n\n    let numMatches = 0;\n    let allIndices = [];\n    let totalScore = 0;\n\n    // ORs\n    for (let i = 0, qLen = query.length; i < qLen; i += 1) {\n      const searchers = query[i];\n\n      // Reset indices\n      allIndices.length = 0;\n      numMatches = 0;\n\n      // ANDs\n      for (let j = 0, pLen = searchers.length; j < pLen; j += 1) {\n        const searcher = searchers[j];\n        const { isMatch, indices, score } = searcher.search(text);\n\n        if (isMatch) {\n          numMatches += 1;\n          totalScore += score;\n          if (includeMatches) {\n            const type = searcher.constructor.type;\n            if (MultiMatchSet.has(type)) {\n              allIndices = [...allIndices, ...indices];\n            } else {\n              allIndices.push(indices);\n            }\n          }\n        } else {\n          totalScore = 0;\n          numMatches = 0;\n          allIndices.length = 0;\n          break\n        }\n      }\n\n      // OR condition, so if TRUE, return\n      if (numMatches) {\n        let result = {\n          isMatch: true,\n          score: totalScore / numMatches\n        };\n\n        if (includeMatches) {\n          result.indices = allIndices;\n        }\n\n        return result\n      }\n    }\n\n    // Nothing was matched\n    return {\n      isMatch: false,\n      score: 1\n    }\n  }\n}\n\nconst registeredSearchers = [];\n\nfunction register(...args) {\n  registeredSearchers.push(...args);\n}\n\nfunction createSearcher(pattern, options) {\n  for (let i = 0, len = registeredSearchers.length; i < len; i += 1) {\n    let searcherClass = registeredSearchers[i];\n    if (searcherClass.condition(pattern, options)) {\n      return new searcherClass(pattern, options)\n    }\n  }\n\n  return new BitapSearch(pattern, options)\n}\n\nconst LogicalOperator = {\n  AND: '$and',\n  OR: '$or'\n};\n\nconst KeyType = {\n  PATH: '$path',\n  PATTERN: '$val'\n};\n\nconst isExpression = (query) =>\n  !!(query[LogicalOperator.AND] || query[LogicalOperator.OR]);\n\nconst isPath = (query) => !!query[KeyType.PATH];\n\nconst isLeaf = (query) =>\n  !isArray(query) && isObject(query) && !isExpression(query);\n\nconst convertToExplicit = (query) => ({\n  [LogicalOperator.AND]: Object.keys(query).map((key) => ({\n    [key]: query[key]\n  }))\n});\n\n// When `auto` is `true`, the parse function will infer and initialize and add\n// the appropriate `Searcher` instance\nfunction parse(query, options, { auto = true } = {}) {\n  const next = (query) => {\n    let keys = Object.keys(query);\n\n    const isQueryPath = isPath(query);\n\n    if (!isQueryPath && keys.length > 1 && !isExpression(query)) {\n      return next(convertToExplicit(query))\n    }\n\n    if (isLeaf(query)) {\n      const key = isQueryPath ? query[KeyType.PATH] : keys[0];\n\n      const pattern = isQueryPath ? query[KeyType.PATTERN] : query[key];\n\n      if (!isString(pattern)) {\n        throw new Error(LOGICAL_SEARCH_INVALID_QUERY_FOR_KEY(key))\n      }\n\n      const obj = {\n        keyId: createKeyId(key),\n        pattern\n      };\n\n      if (auto) {\n        obj.searcher = createSearcher(pattern, options);\n      }\n\n      return obj\n    }\n\n    let node = {\n      children: [],\n      operator: keys[0]\n    };\n\n    keys.forEach((key) => {\n      const value = query[key];\n\n      if (isArray(value)) {\n        value.forEach((item) => {\n          node.children.push(next(item));\n        });\n      }\n    });\n\n    return node\n  };\n\n  if (!isExpression(query)) {\n    query = convertToExplicit(query);\n  }\n\n  return next(query)\n}\n\n// Practical scoring function\nfunction computeScore$1(\n  results,\n  { ignoreFieldNorm = Config.ignoreFieldNorm }\n) {\n  results.forEach((result) => {\n    let totalScore = 1;\n\n    result.matches.forEach(({ key, norm, score }) => {\n      const weight = key ? key.weight : null;\n\n      totalScore *= Math.pow(\n        score === 0 && weight ? Number.EPSILON : score,\n        (weight || 1) * (ignoreFieldNorm ? 1 : norm)\n      );\n    });\n\n    result.score = totalScore;\n  });\n}\n\nfunction transformMatches(result, data) {\n  const matches = result.matches;\n  data.matches = [];\n\n  if (!isDefined(matches)) {\n    return\n  }\n\n  matches.forEach((match) => {\n    if (!isDefined(match.indices) || !match.indices.length) {\n      return\n    }\n\n    const { indices, value } = match;\n\n    let obj = {\n      indices,\n      value\n    };\n\n    if (match.key) {\n      obj.key = match.key.src;\n    }\n\n    if (match.idx > -1) {\n      obj.refIndex = match.idx;\n    }\n\n    data.matches.push(obj);\n  });\n}\n\nfunction transformScore(result, data) {\n  data.score = result.score;\n}\n\nfunction format(\n  results,\n  docs,\n  {\n    includeMatches = Config.includeMatches,\n    includeScore = Config.includeScore\n  } = {}\n) {\n  const transformers = [];\n\n  if (includeMatches) transformers.push(transformMatches);\n  if (includeScore) transformers.push(transformScore);\n\n  return results.map((result) => {\n    const { idx } = result;\n\n    const data = {\n      item: docs[idx],\n      refIndex: idx\n    };\n\n    if (transformers.length) {\n      transformers.forEach((transformer) => {\n        transformer(result, data);\n      });\n    }\n\n    return data\n  })\n}\n\nclass Fuse {\n  constructor(docs, options = {}, index) {\n    this.options = { ...Config, ...options };\n\n    if (\n      this.options.useExtendedSearch &&\n      !true\n    ) {\n      throw new Error(EXTENDED_SEARCH_UNAVAILABLE)\n    }\n\n    this._keyStore = new KeyStore(this.options.keys);\n\n    this.setCollection(docs, index);\n  }\n\n  setCollection(docs, index) {\n    this._docs = docs;\n\n    if (index && !(index instanceof FuseIndex)) {\n      throw new Error(INCORRECT_INDEX_TYPE)\n    }\n\n    this._myIndex =\n      index ||\n      createIndex(this.options.keys, this._docs, {\n        getFn: this.options.getFn\n      });\n  }\n\n  add(doc) {\n    if (!isDefined(doc)) {\n      return\n    }\n\n    this._docs.push(doc);\n    this._myIndex.add(doc);\n  }\n\n  remove(predicate = (/* doc, idx */) => false) {\n    const results = [];\n\n    for (let i = 0, len = this._docs.length; i < len; i += 1) {\n      const doc = this._docs[i];\n      if (predicate(doc, i)) {\n        this.removeAt(i);\n        i -= 1;\n        len -= 1;\n\n        results.push(doc);\n      }\n    }\n\n    return results\n  }\n\n  removeAt(idx) {\n    this._docs.splice(idx, 1);\n    this._myIndex.removeAt(idx);\n  }\n\n  getIndex() {\n    return this._myIndex\n  }\n\n  search(query, { limit = -1 } = {}) {\n    const {\n      includeMatches,\n      includeScore,\n      shouldSort,\n      sortFn,\n      ignoreFieldNorm\n    } = this.options;\n\n    let results = isString(query)\n      ? isString(this._docs[0])\n        ? this._searchStringList(query)\n        : this._searchObjectList(query)\n      : this._searchLogical(query);\n\n    computeScore$1(results, { ignoreFieldNorm });\n\n    if (shouldSort) {\n      results.sort(sortFn);\n    }\n\n    if (isNumber(limit) && limit > -1) {\n      results = results.slice(0, limit);\n    }\n\n    return format(results, this._docs, {\n      includeMatches,\n      includeScore\n    })\n  }\n\n  _searchStringList(query) {\n    const searcher = createSearcher(query, this.options);\n    const { records } = this._myIndex;\n    const results = [];\n\n    // Iterate over every string in the index\n    records.forEach(({ v: text, i: idx, n: norm }) => {\n      if (!isDefined(text)) {\n        return\n      }\n\n      const { isMatch, score, indices } = searcher.searchIn(text);\n\n      if (isMatch) {\n        results.push({\n          item: text,\n          idx,\n          matches: [{ score, value: text, norm, indices }]\n        });\n      }\n    });\n\n    return results\n  }\n\n  _searchLogical(query) {\n\n    const expression = parse(query, this.options);\n\n    const evaluate = (node, item, idx) => {\n      if (!node.children) {\n        const { keyId, searcher } = node;\n\n        const matches = this._findMatches({\n          key: this._keyStore.get(keyId),\n          value: this._myIndex.getValueForItemAtKeyId(item, keyId),\n          searcher\n        });\n\n        if (matches && matches.length) {\n          return [\n            {\n              idx,\n              item,\n              matches\n            }\n          ]\n        }\n\n        return []\n      }\n\n      /*eslint indent: [2, 2, {\"SwitchCase\": 1}]*/\n      switch (node.operator) {\n        case LogicalOperator.AND: {\n          const res = [];\n          for (let i = 0, len = node.children.length; i < len; i += 1) {\n            const child = node.children[i];\n            const result = evaluate(child, item, idx);\n            if (result.length) {\n              res.push(...result);\n            } else {\n              return []\n            }\n          }\n          return res\n        }\n        case LogicalOperator.OR: {\n          const res = [];\n          for (let i = 0, len = node.children.length; i < len; i += 1) {\n            const child = node.children[i];\n            const result = evaluate(child, item, idx);\n            if (result.length) {\n              res.push(...result);\n              break\n            }\n          }\n          return res\n        }\n      }\n    };\n\n    const records = this._myIndex.records;\n    const resultMap = {};\n    const results = [];\n\n    records.forEach(({ $: item, i: idx }) => {\n      if (isDefined(item)) {\n        let expResults = evaluate(expression, item, idx);\n\n        if (expResults.length) {\n          // Dedupe when adding\n          if (!resultMap[idx]) {\n            resultMap[idx] = { idx, item, matches: [] };\n            results.push(resultMap[idx]);\n          }\n          expResults.forEach(({ matches }) => {\n            resultMap[idx].matches.push(...matches);\n          });\n        }\n      }\n    });\n\n    return results\n  }\n\n  _searchObjectList(query) {\n    const searcher = createSearcher(query, this.options);\n    const { keys, records } = this._myIndex;\n    const results = [];\n\n    // List is Array<Object>\n    records.forEach(({ $: item, i: idx }) => {\n      if (!isDefined(item)) {\n        return\n      }\n\n      let matches = [];\n\n      // Iterate over every key (i.e, path), and fetch the value at that key\n      keys.forEach((key, keyIndex) => {\n        matches.push(\n          ...this._findMatches({\n            key,\n            value: item[keyIndex],\n            searcher\n          })\n        );\n      });\n\n      if (matches.length) {\n        results.push({\n          idx,\n          item,\n          matches\n        });\n      }\n    });\n\n    return results\n  }\n  _findMatches({ key, value, searcher }) {\n    if (!isDefined(value)) {\n      return []\n    }\n\n    let matches = [];\n\n    if (isArray(value)) {\n      value.forEach(({ v: text, i: idx, n: norm }) => {\n        if (!isDefined(text)) {\n          return\n        }\n\n        const { isMatch, score, indices } = searcher.searchIn(text);\n\n        if (isMatch) {\n          matches.push({\n            score,\n            key,\n            value: text,\n            idx,\n            norm,\n            indices\n          });\n        }\n      });\n    } else {\n      const { v: text, n: norm } = value;\n\n      const { isMatch, score, indices } = searcher.searchIn(text);\n\n      if (isMatch) {\n        matches.push({ score, key, value: text, norm, indices });\n      }\n    }\n\n    return matches\n  }\n}\n\nFuse.version = '6.4.6';\nFuse.createIndex = createIndex;\nFuse.parseIndex = parseIndex;\nFuse.config = Config;\n\n{\n  Fuse.parseQuery = parse;\n}\n\n{\n  register(ExtendedSearch);\n}\n\nexport default Fuse;\n","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.formatResults = void 0;\nvar set_value_1 = __importDefault(require(\"set-value\"));\nvar strind_1 = __importDefault(require(\"strind\"));\nfunction formatResults(results) {\n    var finalResults = [];\n    results.forEach(function (result, index) {\n        var _a;\n        finalResults.push(__assign(__assign({}, result), { formatted: __assign({}, result.item) }));\n        (_a = result.matches) === null || _a === void 0 ? void 0 : _a.forEach(function (_a) {\n            var indices = _a.indices, key = _a.key, value = _a.value;\n            if (!value || !key)\n                return;\n            var output = strind_1.default(value, __spreadArrays(indices), function (_a) {\n                var text = _a.chars, matches = _a.matches;\n                return ({\n                    text: text,\n                    isHighlighted: matches\n                });\n            });\n            var formattedResult = output.matched;\n            var formatted = finalResults[index].formatted;\n            if (key.split('.').length > 1) {\n                set_value_1.default(formatted, key, formattedResult);\n            }\n            else {\n                formatted[key] = formattedResult;\n            }\n        });\n    });\n    return finalResults;\n}\nexports.formatResults = formatResults;\n","/*!\n * set-value <https://github.com/jonschlinkert/set-value>\n *\n * Copyright (c) 2014-2018, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nconst isPlain = require('is-plain-object');\n\nfunction set(target, path, value, options) {\n  if (!isObject(target)) {\n    return target;\n  }\n\n  let opts = options || {};\n  const isArray = Array.isArray(path);\n  if (!isArray && typeof path !== 'string') {\n    return target;\n  }\n\n  let merge = opts.merge;\n  if (merge && typeof merge !== 'function') {\n    merge = Object.assign;\n  }\n\n  const keys = (isArray ? path : split(path, opts)).filter(isValidKey);\n  const len = keys.length;\n  const orig = target;\n\n  if (!options && keys.length === 1) {\n    result(target, keys[0], value, merge);\n    return target;\n  }\n\n  for (let i = 0; i < len; i++) {\n    let prop = keys[i];\n\n    if (!isObject(target[prop])) {\n      target[prop] = {};\n    }\n\n    if (i === len - 1) {\n      result(target, prop, value, merge);\n      break;\n    }\n\n    target = target[prop];\n  }\n\n  return orig;\n}\n\nfunction result(target, path, value, merge) {\n  if (merge && isPlain(target[path]) && isPlain(value)) {\n    target[path] = merge({}, target[path], value);\n  } else {\n    target[path] = value;\n  }\n}\n\nfunction split(path, options) {\n  const id = createKey(path, options);\n  if (set.memo[id]) return set.memo[id];\n\n  const char = (options && options.separator) ? options.separator : '.';\n  let keys = [];\n  let res = [];\n\n  if (options && typeof options.split === 'function') {\n    keys = options.split(path);\n  } else {\n    keys = path.split(char);\n  }\n\n  for (let i = 0; i < keys.length; i++) {\n    let prop = keys[i];\n    while (prop && prop.slice(-1) === '\\\\' && keys[i + 1] != null) {\n      prop = prop.slice(0, -1) + char + keys[++i];\n    }\n    res.push(prop);\n  }\n  set.memo[id] = res;\n  return res;\n}\n\nfunction createKey(pattern, options) {\n  let id = pattern;\n  if (typeof options === 'undefined') {\n    return id + '';\n  }\n  const keys = Object.keys(options);\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    id += ';' + key + '=' + String(options[key]);\n  }\n  return id;\n}\n\nfunction isValidKey(key) {\n  return key !== '__proto__' && key !== 'constructor' && key !== 'prototype';\n}\n\nfunction isObject(val) {\n  return val !== null && (typeof val === 'object' || typeof val === 'function');\n}\n\nset.memo = {};\nmodule.exports = set;\n","/*!\n * is-plain-object <https://github.com/jonschlinkert/is-plain-object>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nvar isObject = require('isobject');\n\nfunction isObjectObject(o) {\n  return isObject(o) === true\n    && Object.prototype.toString.call(o) === '[object Object]';\n}\n\nmodule.exports = function isPlainObject(o) {\n  var ctor,prot;\n\n  if (isObjectObject(o) === false) return false;\n\n  // If has modified constructor\n  ctor = o.constructor;\n  if (typeof ctor !== 'function') return false;\n\n  // If has modified prototype\n  prot = ctor.prototype;\n  if (isObjectObject(prot) === false) return false;\n\n  // If constructor does not have an Object-specific method\n  if (prot.hasOwnProperty('isPrototypeOf') === false) {\n    return false;\n  }\n\n  // Most likely a plain Object\n  return true;\n};\n","/*!\n * isobject <https://github.com/jonschlinkert/isobject>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nmodule.exports = function isObject(val) {\n  return val != null && typeof val === 'object' && Array.isArray(val) === false;\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Partitions a string based on character indices.\n *\n * @param {string} str - string to partition\n * @param {[number,number][]} indices - array of tuples to match [start, end] indices\n * @param {function} callback - callback function called with matching characters\n */\nfunction strind(str, indices, callback) {\n    var strs = str.split('');\n    var strsLen = strs.length;\n    var idx = Array.isArray(indices[0]) ? indices : [indices];\n    var partition = [];\n    var nonmatched = [];\n    function updateNonmatched(open, close, index) {\n        var chars = str.slice(open, close);\n        if (!chars.length) {\n            return;\n        }\n        nonmatched.push({ chars: chars, index: index });\n        if (callback) {\n            var cb = callback({ chars: chars, matches: false });\n            partition.push(cb);\n        }\n    }\n    for (var i = 0, len = idx.length; i < len; i++) {\n        var _a = idx[i], start = _a[0], end = _a[1];\n        var floor = start >= 0 ? start : 0;\n        var ceiling = end >= strsLen ? strsLen : end + 1;\n        if (i === 0 && start > 0) {\n            updateNonmatched(0, start, 0);\n        }\n        var chars = str.slice(floor, ceiling);\n        if (callback) {\n            var cb = callback({ chars: chars, matches: true });\n            partition.push(cb);\n        }\n        else {\n            partition.push(chars);\n        }\n        if (end < strsLen) {\n            var open = end + 1;\n            var close = i < len - 1 ? idx[i + 1][0] : strsLen;\n            updateNonmatched(open, close, partition.length);\n        }\n        if (end >= strsLen) {\n            break;\n        }\n    }\n    return {\n        unmatched: nonmatched,\n        matched: partition\n    };\n}\nexports.default = strind;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Highlighter = void 0;\nvar React = __importStar(require(\"react\"));\nfunction Highlighter(props) {\n    if (Array.isArray(props.text)) {\n        return (React.createElement(React.Fragment, null, props.text.map(function (_a, index) {\n            var text = _a.text, isHighlighted = _a.isHighlighted;\n            var key = \"\" + text + index;\n            if (isHighlighted) {\n                return React.createElement(\"mark\", { key: key }, text);\n            }\n            return React.createElement(React.Fragment, { key: key }, text);\n        })));\n    }\n    return React.createElement(React.Fragment, null, props.text);\n}\nexports.Highlighter = Highlighter;\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  fluid: false\n};\nconst Container = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  fluid,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'container');\n  const suffix = typeof fluid === 'string' ? `-${fluid}` : '-fluid';\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, fluid ? `${prefix}${suffix}` : prefix)\n  });\n});\nContainer.displayName = 'Container';\nContainer.defaultProps = defaultProps;\nexport default Container;","import * as React from 'react';\nimport { Context } from './injectIntl';\nimport { invariantIntlContext } from '../utils';\nexport default function useIntl() {\n    var intl = React.useContext(Context);\n    invariantIntlContext(intl);\n    return intl;\n}\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport { getOverlayDirection } from './helpers';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst defaultProps = {\n  placement: 'right'\n};\nconst Tooltip = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  placement,\n  className,\n  style,\n  children,\n  arrowProps,\n  popper: _,\n  show: _2,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'tooltip');\n  const isRTL = useIsRTL();\n  const [primaryPlacement] = (placement == null ? void 0 : placement.split('-')) || [];\n  const bsDirection = getOverlayDirection(primaryPlacement, isRTL);\n  return /*#__PURE__*/_jsxs(\"div\", {\n    ref: ref,\n    style: style,\n    role: \"tooltip\",\n    \"x-placement\": primaryPlacement,\n    className: classNames(className, bsPrefix, `bs-tooltip-${bsDirection}`),\n    ...props,\n    children: [/*#__PURE__*/_jsx(\"div\", {\n      className: \"tooltip-arrow\",\n      ...arrowProps\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: `${bsPrefix}-inner`,\n      children: children\n    })]\n  });\n});\nTooltip.defaultProps = defaultProps;\nTooltip.displayName = 'Tooltip';\nexport default Tooltip;","import { useMemo, useRef } from 'react';\nimport useMounted from './useMounted';\nimport useWillUnmount from './useWillUnmount';\n/*\n * Browsers including Internet Explorer, Chrome, Safari, and Firefox store the\n * delay as a 32-bit signed integer internally. This causes an integer overflow\n * when using delays larger than 2,147,483,647 ms (about 24.8 days),\n * resulting in the timeout being executed immediately.\n *\n * via: https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/setTimeout\n */\n\nvar MAX_DELAY_MS = Math.pow(2, 31) - 1;\n\nfunction setChainedTimeout(handleRef, fn, timeoutAtMs) {\n  var delayMs = timeoutAtMs - Date.now();\n  handleRef.current = delayMs <= MAX_DELAY_MS ? setTimeout(fn, delayMs) : setTimeout(function () {\n    return setChainedTimeout(handleRef, fn, timeoutAtMs);\n  }, MAX_DELAY_MS);\n}\n/**\n * Returns a controller object for setting a timeout that is properly cleaned up\n * once the component unmounts. New timeouts cancel and replace existing ones.\n *\n *\n *\n * ```tsx\n * const { set, clear } = useTimeout();\n * const [hello, showHello] = useState(false);\n * //Display hello after 5 seconds\n * set(() => showHello(true), 5000);\n * return (\n *   <div className=\"App\">\n *     {hello ? <h3>Hello</h3> : null}\n *   </div>\n * );\n * ```\n */\n\n\nexport default function useTimeout() {\n  var isMounted = useMounted(); // types are confused between node and web here IDK\n\n  var handleRef = useRef();\n  useWillUnmount(function () {\n    return clearTimeout(handleRef.current);\n  });\n  return useMemo(function () {\n    var clear = function clear() {\n      return clearTimeout(handleRef.current);\n    };\n\n    function set(fn, delayMs) {\n      if (delayMs === void 0) {\n        delayMs = 0;\n      }\n\n      if (!isMounted()) return;\n      clear();\n\n      if (delayMs <= MAX_DELAY_MS) {\n        // For simplicity, if the timeout is short, just set a normal timeout.\n        handleRef.current = setTimeout(fn, delayMs);\n      } else {\n        setChainedTimeout(handleRef, fn, Date.now() + delayMs);\n      }\n    }\n\n    return {\n      set: set,\n      clear: clear\n    };\n  }, []);\n}","import listen from 'dom-helpers/listen';\nimport ownerDocument from 'dom-helpers/ownerDocument';\nimport { useEffect } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useClickOutside, { getRefTarget } from './useClickOutside';\nconst escapeKeyCode = 27;\n\nconst noop = () => {};\n\n/**\n * The `useRootClose` hook registers your callback on the document\n * when rendered. Powers the `<Overlay/>` component. This is used achieve modal\n * style behavior where your callback is triggered when the user tries to\n * interact with the rest of the document or hits the `esc` key.\n *\n * @param {Ref<HTMLElement>| HTMLElement} ref  The element boundary\n * @param {function} onRootClose\n * @param {object=}  options\n * @param {boolean=} options.disabled\n * @param {string=}  options.clickTrigger The DOM event name (click, mousedown, etc) to attach listeners on\n */\nfunction useRootClose(ref, onRootClose, {\n  disabled,\n  clickTrigger\n} = {}) {\n  const onClose = onRootClose || noop;\n  useClickOutside(ref, onClose, {\n    disabled,\n    clickTrigger\n  });\n  const handleKeyUp = useEventCallback(e => {\n    if (e.keyCode === escapeKeyCode) {\n      onClose(e);\n    }\n  });\n  useEffect(() => {\n    if (disabled || ref == null) return undefined;\n    const doc = ownerDocument(getRefTarget(ref)); // Store the current event to avoid triggering handlers immediately\n    // https://github.com/facebook/react/issues/20074\n\n    let currentEvent = (doc.defaultView || window).event;\n    const removeKeyupListener = listen(doc, 'keyup', e => {\n      // skip if this event is the same as the one running when we added the handlers\n      if (e === currentEvent) {\n        currentEvent = undefined;\n        return;\n      }\n\n      handleKeyUp(e);\n    });\n    return () => {\n      removeKeyupListener();\n    };\n  }, [ref, disabled, handleKeyUp]);\n}\n\nexport default useRootClose;","import * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport { useState } from 'react';\nimport usePopper from './usePopper';\nimport useRootClose from './useRootClose';\nimport useWaitForDOMRef from './useWaitForDOMRef';\nimport mergeOptionsWithPopperConfig from './mergeOptionsWithPopperConfig';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\n/**\n * Built on top of `Popper.js`, the overlay component is\n * great for custom tooltip overlays.\n */\nconst Overlay = /*#__PURE__*/React.forwardRef((props, outerRef) => {\n  const {\n    flip,\n    offset,\n    placement,\n    containerPadding,\n    popperConfig = {},\n    transition: Transition\n  } = props;\n  const [rootElement, attachRef] = useCallbackRef();\n  const [arrowElement, attachArrowRef] = useCallbackRef();\n  const mergedRef = useMergedRefs(attachRef, outerRef);\n  const container = useWaitForDOMRef(props.container);\n  const target = useWaitForDOMRef(props.target);\n  const [exited, setExited] = useState(!props.show);\n  const popper = usePopper(target, rootElement, mergeOptionsWithPopperConfig({\n    placement,\n    enableEvents: !!props.show,\n    containerPadding: containerPadding || 5,\n    flip,\n    offset,\n    arrowElement,\n    popperConfig\n  }));\n\n  if (props.show) {\n    if (exited) setExited(false);\n  } else if (!props.transition && !exited) {\n    setExited(true);\n  }\n\n  const handleHidden = (...args) => {\n    setExited(true);\n\n    if (props.onExited) {\n      props.onExited(...args);\n    }\n  }; // Don't un-render the overlay while it's transitioning out.\n\n\n  const mountOverlay = props.show || Transition && !exited;\n  useRootClose(rootElement, props.onHide, {\n    disabled: !props.rootClose || props.rootCloseDisabled,\n    clickTrigger: props.rootCloseEvent\n  });\n\n  if (!mountOverlay) {\n    // Don't bother showing anything if we don't have to.\n    return null;\n  }\n\n  let child = props.children(Object.assign({}, popper.attributes.popper, {\n    style: popper.styles.popper,\n    ref: mergedRef\n  }), {\n    popper,\n    placement,\n    show: !!props.show,\n    arrowProps: Object.assign({}, popper.attributes.arrow, {\n      style: popper.styles.arrow,\n      ref: attachArrowRef\n    })\n  });\n\n  if (Transition) {\n    const {\n      onExit,\n      onExiting,\n      onEnter,\n      onEntering,\n      onEntered\n    } = props;\n    child = /*#__PURE__*/_jsx(Transition, {\n      in: props.show,\n      appear: true,\n      onExit: onExit,\n      onExiting: onExiting,\n      onExited: handleHidden,\n      onEnter: onEnter,\n      onEntering: onEntering,\n      onEntered: onEntered,\n      children: child\n    });\n  }\n\n  return container ? /*#__PURE__*/ReactDOM.createPortal(child, container) : null;\n});\nOverlay.displayName = 'Overlay';\nexport default Overlay;","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('popover-header');","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('popover-body');","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport PopoverHeader from './PopoverHeader';\nimport PopoverBody from './PopoverBody';\nimport { getOverlayDirection } from './helpers';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst defaultProps = {\n  placement: 'right'\n};\nconst Popover = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  placement,\n  className,\n  style,\n  children,\n  body,\n  arrowProps,\n  popper: _,\n  show: _1,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'popover');\n  const isRTL = useIsRTL();\n  const [primaryPlacement] = (placement == null ? void 0 : placement.split('-')) || [];\n  const bsDirection = getOverlayDirection(primaryPlacement, isRTL);\n  return /*#__PURE__*/_jsxs(\"div\", {\n    ref: ref,\n    role: \"tooltip\",\n    style: style,\n    \"x-placement\": primaryPlacement,\n    className: classNames(className, decoratedBsPrefix, primaryPlacement && `bs-popover-${bsDirection}`),\n    ...props,\n    children: [/*#__PURE__*/_jsx(\"div\", {\n      className: \"popover-arrow\",\n      ...arrowProps\n    }), body ? /*#__PURE__*/_jsx(PopoverBody, {\n      children: children\n    }) : children]\n  });\n});\nPopover.defaultProps = defaultProps;\nexport default Object.assign(Popover, {\n  Header: PopoverHeader,\n  Body: PopoverBody,\n  // Default popover offset.\n  // https://github.com/twbs/bootstrap/blob/5c32767e0e0dbac2d934bcdee03719a65d3f1187/js/src/popover.js#L28\n  POPPER_OFFSET: [0, 8]\n});","import * as React from 'react';\nimport { useRef } from 'react';\nimport classNames from 'classnames';\nimport BaseOverlay from '@restart/ui/Overlay';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useIsomorphicEffect from '@restart/hooks/useIsomorphicEffect';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useOverlayOffset from './useOverlayOffset';\nimport Fade from './Fade';\nimport safeFindDOMNode from './safeFindDOMNode';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  transition: Fade,\n  rootClose: false,\n  show: false,\n  placement: 'top'\n};\n\nfunction wrapRefs(props, arrowProps) {\n  const {\n    ref\n  } = props;\n  const {\n    ref: aRef\n  } = arrowProps;\n\n  props.ref = ref.__wrapped || (ref.__wrapped = r => ref(safeFindDOMNode(r)));\n\n  arrowProps.ref = aRef.__wrapped || (aRef.__wrapped = r => aRef(safeFindDOMNode(r)));\n}\n\nconst Overlay = /*#__PURE__*/React.forwardRef(({\n  children: overlay,\n  transition,\n  popperConfig = {},\n  ...outerProps\n}, outerRef) => {\n  const popperRef = useRef({});\n  const [firstRenderedState, setFirstRenderedState] = useCallbackRef();\n  const [ref, modifiers] = useOverlayOffset(outerProps.offset);\n  const mergedRef = useMergedRefs(outerRef, ref);\n  const actualTransition = transition === true ? Fade : transition || undefined;\n  const handleFirstUpdate = useEventCallback(state => {\n    setFirstRenderedState(state);\n    popperConfig == null ? void 0 : popperConfig.onFirstUpdate == null ? void 0 : popperConfig.onFirstUpdate(state);\n  });\n  useIsomorphicEffect(() => {\n    if (firstRenderedState) {\n      popperRef.current.scheduleUpdate == null ? void 0 : popperRef.current.scheduleUpdate();\n    }\n  }, [firstRenderedState]);\n  return /*#__PURE__*/_jsx(BaseOverlay, { ...outerProps,\n    ref: mergedRef,\n    popperConfig: { ...popperConfig,\n      modifiers: modifiers.concat(popperConfig.modifiers || []),\n      onFirstUpdate: handleFirstUpdate\n    },\n    transition: actualTransition,\n    children: (overlayProps, {\n      arrowProps,\n      popper: popperObj,\n      show\n    }) => {\n      var _popperObj$state, _popperObj$state$modi;\n\n      wrapRefs(overlayProps, arrowProps); // Need to get placement from popper object, handling case when overlay is flipped using 'flip' prop\n\n      const updatedPlacement = popperObj == null ? void 0 : popperObj.placement;\n      const popper = Object.assign(popperRef.current, {\n        state: popperObj == null ? void 0 : popperObj.state,\n        scheduleUpdate: popperObj == null ? void 0 : popperObj.update,\n        placement: updatedPlacement,\n        outOfBoundaries: (popperObj == null ? void 0 : (_popperObj$state = popperObj.state) == null ? void 0 : (_popperObj$state$modi = _popperObj$state.modifiersData.hide) == null ? void 0 : _popperObj$state$modi.isReferenceHidden) || false\n      });\n      if (typeof overlay === 'function') return overlay({ ...overlayProps,\n        placement: updatedPlacement,\n        show,\n        ...(!transition && show && {\n          className: 'show'\n        }),\n        popper,\n        arrowProps\n      });\n      return /*#__PURE__*/React.cloneElement(overlay, { ...overlayProps,\n        placement: updatedPlacement,\n        arrowProps,\n        popper,\n        className: classNames(overlay.props.className, !transition && show && 'show'),\n        style: { ...overlay.props.style,\n          ...overlayProps.style\n        }\n      });\n    }\n  });\n});\nOverlay.displayName = 'Overlay';\nOverlay.defaultProps = defaultProps;\nexport default Overlay;","import { useMemo, useRef } from 'react';\nimport hasClass from 'dom-helpers/hasClass';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport Popover from './Popover'; // This is meant for internal use.\n// This applies a custom offset to the overlay if it's a popover.\n\nexport default function useOverlayOffset(customOffset) {\n  const overlayRef = useRef(null);\n  const popoverClass = useBootstrapPrefix(undefined, 'popover');\n  const offset = useMemo(() => ({\n    name: 'offset',\n    options: {\n      offset: () => {\n        if (overlayRef.current && hasClass(overlayRef.current, popoverClass)) {\n          return customOffset || Popover.POPPER_OFFSET;\n        }\n\n        return customOffset || [0, 0];\n      }\n    }\n  }), [customOffset, popoverClass]);\n  return [overlayRef, [offset]];\n}","import contains from 'dom-helpers/contains';\nimport * as React from 'react';\nimport { cloneElement, useCallback, useRef } from 'react';\nimport useTimeout from '@restart/hooks/useTimeout';\nimport warning from 'warning';\nimport { useUncontrolledProp } from 'uncontrollable';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport Overlay from './Overlay';\nimport safeFindDOMNode from './safeFindDOMNode';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction normalizeDelay(delay) {\n  return delay && typeof delay === 'object' ? delay : {\n    show: delay,\n    hide: delay\n  };\n} // Simple implementation of mouseEnter and mouseLeave.\n// React's built version is broken: https://github.com/facebook/react/issues/4251\n// for cases when the trigger is disabled and mouseOut/Over can cause flicker\n// moving from one child element to another.\n\n\nfunction handleMouseOverOut( // eslint-disable-next-line @typescript-eslint/no-shadow\nhandler, args, relatedNative) {\n  const [e] = args;\n  const target = e.currentTarget;\n  const related = e.relatedTarget || e.nativeEvent[relatedNative];\n\n  if ((!related || related !== target) && !contains(target, related)) {\n    handler(...args);\n  }\n}\n\nconst defaultProps = {\n  defaultShow: false,\n  trigger: ['hover', 'focus']\n};\n\nfunction OverlayTrigger({\n  trigger,\n  overlay,\n  children,\n  popperConfig = {},\n  show: propsShow,\n  defaultShow = false,\n  onToggle,\n  delay: propsDelay,\n  placement,\n  flip = placement && placement.indexOf('auto') !== -1,\n  ...props\n}) {\n  const triggerNodeRef = useRef(null);\n  const mergedRef = useMergedRefs(triggerNodeRef, children.ref);\n  const timeout = useTimeout();\n  const hoverStateRef = useRef('');\n  const [show, setShow] = useUncontrolledProp(propsShow, defaultShow, onToggle);\n  const delay = normalizeDelay(propsDelay);\n  const {\n    onFocus,\n    onBlur,\n    onClick\n  } = typeof children !== 'function' ? React.Children.only(children).props : {};\n\n  const attachRef = r => {\n    mergedRef(safeFindDOMNode(r));\n  };\n\n  const handleShow = useCallback(() => {\n    timeout.clear();\n    hoverStateRef.current = 'show';\n\n    if (!delay.show) {\n      setShow(true);\n      return;\n    }\n\n    timeout.set(() => {\n      if (hoverStateRef.current === 'show') setShow(true);\n    }, delay.show);\n  }, [delay.show, setShow, timeout]);\n  const handleHide = useCallback(() => {\n    timeout.clear();\n    hoverStateRef.current = 'hide';\n\n    if (!delay.hide) {\n      setShow(false);\n      return;\n    }\n\n    timeout.set(() => {\n      if (hoverStateRef.current === 'hide') setShow(false);\n    }, delay.hide);\n  }, [delay.hide, setShow, timeout]);\n  const handleFocus = useCallback((...args) => {\n    handleShow();\n    onFocus == null ? void 0 : onFocus(...args);\n  }, [handleShow, onFocus]);\n  const handleBlur = useCallback((...args) => {\n    handleHide();\n    onBlur == null ? void 0 : onBlur(...args);\n  }, [handleHide, onBlur]);\n  const handleClick = useCallback((...args) => {\n    setShow(!show);\n    onClick == null ? void 0 : onClick(...args);\n  }, [onClick, setShow, show]);\n  const handleMouseOver = useCallback((...args) => {\n    handleMouseOverOut(handleShow, args, 'fromElement');\n  }, [handleShow]);\n  const handleMouseOut = useCallback((...args) => {\n    handleMouseOverOut(handleHide, args, 'toElement');\n  }, [handleHide]);\n  const triggers = trigger == null ? [] : [].concat(trigger);\n  const triggerProps = {\n    ref: attachRef\n  };\n\n  if (triggers.indexOf('click') !== -1) {\n    triggerProps.onClick = handleClick;\n  }\n\n  if (triggers.indexOf('focus') !== -1) {\n    triggerProps.onFocus = handleFocus;\n    triggerProps.onBlur = handleBlur;\n  }\n\n  if (triggers.indexOf('hover') !== -1) {\n    process.env.NODE_ENV !== \"production\" ? warning(triggers.length > 1, '[react-bootstrap] Specifying only the `\"hover\"` trigger limits the visibility of the overlay to just mouse users. Consider also including the `\"focus\"` trigger so that touch and keyboard only users can see the overlay as well.') : void 0;\n    triggerProps.onMouseOver = handleMouseOver;\n    triggerProps.onMouseOut = handleMouseOut;\n  }\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [typeof children === 'function' ? children(triggerProps) : /*#__PURE__*/cloneElement(children, triggerProps), /*#__PURE__*/_jsx(Overlay, { ...props,\n      show: show,\n      onHide: handleHide,\n      flip: flip,\n      placement: placement,\n      popperConfig: popperConfig,\n      target: triggerNodeRef.current,\n      children: overlay\n    })]\n  });\n}\n\nOverlayTrigger.defaultProps = defaultProps;\nexport default OverlayTrigger;","import classNames from 'classnames';\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const propTypes = {\n  /**\n   * @default 'img'\n   */\n  bsPrefix: PropTypes.string,\n\n  /**\n   * Sets image as fluid image.\n   */\n  fluid: PropTypes.bool,\n\n  /**\n   * Sets image shape as rounded.\n   */\n  rounded: PropTypes.bool,\n\n  /**\n   * Sets image shape as circle.\n   */\n  roundedCircle: PropTypes.bool,\n\n  /**\n   * Sets image shape as thumbnail.\n   */\n  thumbnail: PropTypes.bool\n};\nconst defaultProps = {\n  fluid: false,\n  rounded: false,\n  roundedCircle: false,\n  thumbnail: false\n};\nconst Image = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  fluid,\n  rounded,\n  roundedCircle,\n  thumbnail,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'img');\n  return /*#__PURE__*/_jsx(\"img\", {\n    // eslint-disable-line jsx-a11y/alt-text\n    ref: ref,\n    ...props,\n    className: classNames(className, fluid && `${bsPrefix}-fluid`, rounded && `rounded`, roundedCircle && `rounded-circle`, thumbnail && `${bsPrefix}-thumbnail`)\n  });\n});\nImage.displayName = 'Image';\nImage.defaultProps = defaultProps;\nexport default Image;","import classNames from 'classnames';\nimport * as React from 'react';\nimport Image, { propTypes as imagePropTypes } from './Image';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  fluid: true\n};\nconst FigureImage = /*#__PURE__*/React.forwardRef(({\n  className,\n  ...props\n}, ref) => /*#__PURE__*/_jsx(Image, {\n  ref: ref,\n  ...props,\n  className: classNames(className, 'figure-img')\n}));\nFigureImage.displayName = 'FigureImage';\nFigureImage.propTypes = imagePropTypes;\nFigureImage.defaultProps = defaultProps;\nexport default FigureImage;","import createWithBsPrefix from './createWithBsPrefix';\nconst FigureCaption = createWithBsPrefix('figure-caption', {\n  Component: 'figcaption'\n});\nexport default FigureCaption;","import createWithBsPrefix from './createWithBsPrefix';\nimport FigureImage from './FigureImage';\nimport FigureCaption from './FigureCaption';\nconst Figure = createWithBsPrefix('figure', {\n  Component: 'figure'\n});\nexport default Object.assign(Figure, {\n  Image: FigureImage,\n  Caption: FigureCaption\n});","/**\n * Safe chained function\n *\n * Will only create a new function if needed,\n * otherwise will pass back existing functions or null.\n *\n * @param {function} functions to chain\n * @returns {function|null}\n */\nfunction createChainedFunction(...funcs) {\n  return funcs.filter(f => f != null).reduce((acc, f) => {\n    if (typeof f !== 'function') {\n      throw new Error('Invalid Argument Type, must only provide functions, undefined, or null.');\n    }\n\n    if (acc === null) return f;\n    return function chainedFunction(...args) {\n      // @ts-ignore\n      acc.apply(this, args); // @ts-ignore\n\n      f.apply(this, args);\n    };\n  }, null);\n}\n\nexport default createChainedFunction;","import classNames from 'classnames';\nimport css from 'dom-helpers/css';\nimport React, { useMemo } from 'react';\nimport { ENTERED, ENTERING, EXITED, EXITING } from 'react-transition-group/Transition';\nimport transitionEndListener from './transitionEndListener';\nimport createChainedFunction from './createChainedFunction';\nimport triggerBrowserReflow from './triggerBrowserReflow';\nimport TransitionWrapper from './TransitionWrapper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst MARGINS = {\n  height: ['marginTop', 'marginBottom'],\n  width: ['marginLeft', 'marginRight']\n};\n\nfunction getDefaultDimensionValue(dimension, elem) {\n  const offset = `offset${dimension[0].toUpperCase()}${dimension.slice(1)}`;\n  const value = elem[offset];\n  const margins = MARGINS[dimension];\n  return value + // @ts-ignore\n  parseInt(css(elem, margins[0]), 10) + // @ts-ignore\n  parseInt(css(elem, margins[1]), 10);\n}\n\nconst collapseStyles = {\n  [EXITED]: 'collapse',\n  [EXITING]: 'collapsing',\n  [ENTERING]: 'collapsing',\n  [ENTERED]: 'collapse show'\n};\nconst defaultProps = {\n  in: false,\n  timeout: 300,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n  getDimensionValue: getDefaultDimensionValue\n};\nconst Collapse = /*#__PURE__*/React.forwardRef(({\n  onEnter,\n  onEntering,\n  onEntered,\n  onExit,\n  onExiting,\n  className,\n  children,\n  dimension = 'height',\n  getDimensionValue = getDefaultDimensionValue,\n  ...props\n}, ref) => {\n  /* Compute dimension */\n  const computedDimension = typeof dimension === 'function' ? dimension() : dimension;\n  /* -- Expanding -- */\n\n  const handleEnter = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = '0';\n  }, onEnter), [computedDimension, onEnter]);\n  const handleEntering = useMemo(() => createChainedFunction(elem => {\n    const scroll = `scroll${computedDimension[0].toUpperCase()}${computedDimension.slice(1)}`;\n    elem.style[computedDimension] = `${elem[scroll]}px`;\n  }, onEntering), [computedDimension, onEntering]);\n  const handleEntered = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = null;\n  }, onEntered), [computedDimension, onEntered]);\n  /* -- Collapsing -- */\n\n  const handleExit = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = `${getDimensionValue(computedDimension, elem)}px`;\n    triggerBrowserReflow(elem);\n  }, onExit), [onExit, getDimensionValue, computedDimension]);\n  const handleExiting = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = null;\n  }, onExiting), [computedDimension, onExiting]);\n  return /*#__PURE__*/_jsx(TransitionWrapper, {\n    ref: ref,\n    addEndListener: transitionEndListener,\n    ...props,\n    \"aria-expanded\": props.role ? props.in : null,\n    onEnter: handleEnter,\n    onEntering: handleEntering,\n    onEntered: handleEntered,\n    onExit: handleExit,\n    onExiting: handleExiting,\n    childRef: children.ref,\n    children: (state, innerProps) => /*#__PURE__*/React.cloneElement(children, { ...innerProps,\n      className: classNames(className, children.props.className, collapseStyles[state], computedDimension === 'width' && 'collapse-horizontal')\n    })\n  });\n}); // @ts-ignore\n\n// @ts-ignore\nCollapse.defaultProps = defaultProps;\nexport default Collapse;"],"sourceRoot":""}